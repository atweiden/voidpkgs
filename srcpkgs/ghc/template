maintainer="nox"
pkgname="ghc"
# keep this synchronized with http://www.stackage.org/lts
version=8.8.3
revision=1
# recent safe to use tarball
# ghc's bundled tarball is from 2017, buggy on some archs
_ffi_rev="4d6d2866ae43e55325e8ee96561221804602cd7a"
short_desc="Glorious Haskell Compiler"
depends+=" gcc"
depends+=" gmp-devel"
depends+=" libffi-devel"
depends+=" libnuma-devel"
depends+=" perl"
makedepends+=" gmp-devel"
makedepends+=" libffi-devel"
makedepends+=" libnuma-devel"
makedepends+=" ncurses-devel"
hostmakedepends+=" automake"
hostmakedepends+=" docbook-xsl"
hostmakedepends+=" ghc-bin"
hostmakedepends+=" libxslt"
hostmakedepends+=" python3-Sphinx"
homepage="http://www.haskell.org/ghc/"
license="BSD-3-Clause"
distfiles="http://www.haskell.org/ghc/dist/${version%[!0-9]}/$pkgname-${version%[!0-9]}-src.tar.xz"
checksum="e0dcc0aaf3e234c5978f29e6df62947e97720ab404ec0158343df211c5480f89"
wrksrc="ghc-${version%[!0-9]}"
patch_args="-Np1"
build_style="gnu-configure"
configure_args="--with-system-libffi"
build_options="bindist"
desc_option_bindist="Create a binary distribution"
# ask leah2 before wasting time trying to do that
nocross="yes"
_bindir="/usr/lib/$pkgname-$version/bin"
nopie_files+=" $_bindir/ghc"
nopie_files+=" $_bindir/ghc-iserv"
nopie_files+=" $_bindir/ghc-iserv-dyn"
nopie_files+=" $_bindir/ghc-iserv-prof"
nopie_files+=" $_bindir/ghc-pkg"
nopie_files+=" $_bindir/haddock"
nopie_files+=" $_bindir/hp2ps"
nopie_files+=" $_bindir/hpc"
nopie_files+=" $_bindir/hsc2hs"
nopie_files+=" $_bindir/runghc"
nopie_files+=" $_bindir/unlit"

if [[ -n "$build_option_bindist" ]]; then
  # strip --with-system-libffi from configuration
  configure_args="${configure_args/--with-system-libffi/}"
  # required to make the binary distribution tarball
  hostmakedepends+=" libltdl-devel"
  hostmakedepends+=" libtool"
  hostmakedepends+=" tar"
  hostmakedepends+=" xz"
  # fetch a safe libffi tarball
  distfiles+=" https://github.com/libffi/libffi/archive/$_ffi_rev.tar.gz>libffi-$_ffi_rev.tar.gz"
  checksum+=" f7a17fa61261942e93450ec52272b5f09d8f42cfffd147867587f969ee01b739"
  skip_extraction+=" libffi-$_ffi_rev.tar.gz"
fi

post_extract() {
  [[ -n "$build_option_bindist" ]] \
    || return 0
  rm -f libffi-tarballs/libffi-*.tar.gz
  cp "$XBPS_SRCDISTDIR/$pkgname-$version/libffi-$_ffi_rev.tar.gz" \
    libffi-tarballs
}

pre_configure() {
  export CONF_CC_OPTS_STAGE0="$CFLAGS_FOR_BUILD"
  export CONF_CC_OPTS_STAGE1="$CFLAGS"
  export CONF_CC_OPTS_STAGE2="$CFLAGS"
  export CONF_GCC_LINKER_OPTS_STAGE0="$LDFLAGS_FOR_BUILD"
  export CONF_GCC_LINKER_OPTS_STAGE1="$LDFLAGS"
  export CONF_GCC_LINKER_OPTS_STAGE2="$LDFLAGS"
  export CONF_CPP_OPTS_STAGE0="$CPPFLAGS_FOR_BUILD"
  export CONF_CPP_OPTS_STAGE1="$CPPFLAGS"
  export CONF_CPP_OPTS_STAGE2="$CPPFLAGS"
  autoreconf -fi
}

post_install() {
  local dest

  sed \
    -i \
    -e 's#/usr/lib/ccache/bin/##g' \
    "$DESTDIR/usr/lib/ghc-${version%[!0-9]}/settings"

  vlicense LICENSE

  if [[ -n "$build_option_bindist" ]]; then
    msg_normal "Creating binary distribution for $XBPS_TARGET_MACHINE...\n"
    make \
      "$makejobs" \
      binary-dist
    dest="$XBPS_SRCDISTDIR/distfiles/ghc-$version-void-linux-$XBPS_TARGET_LIBC.tar.xz"
    install -d -m 0644 "ghc-$version"-*-unknown-linux.tar.xz "$dest"
    msg_normal "Installed in $dest\n"
  fi
}

ghc-doc_package() {
  archs="noarch"
  short_desc+=" - documentation"
  pkg_install() {
    vmove usr/share/doc
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

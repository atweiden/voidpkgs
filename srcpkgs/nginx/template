maintainer="nox"
pkgname="nginx"
version=1.18.0
revision=5
short_desc="High performance web and reverse proxy server"
makedepends+=" openssl-devel"
makedepends+=" pcre-devel"
makedepends+=" $(vopt_if geoip geoip-devel)"
hostmakedepends="$makedepends"
homepage="https://nginx.org"
license="BSD-2-Clause"
distfiles="https://nginx.org/download/$pkgname-$version.tar.gz"
checksum="4c373e7ab5bf91d34a4f11a0c9496561061ba5eee6020db272a17a7228d35f99"
conf_files+=" /etc/nginx/fastcgi.conf"
conf_files+=" /etc/nginx/fastcgi_params"
conf_files+=" /etc/nginx/koi-utf"
conf_files+=" /etc/nginx/koi-win"
conf_files+=" /etc/nginx/mime.types"
conf_files+=" /etc/nginx/nginx.conf"
conf_files+=" /etc/nginx/scgi_params"
conf_files+=" /etc/nginx/uwsgi_params"
conf_files+=" /etc/nginx/win-utf"
build_style="gnu-makefile"
system_accounts="nginx"
nginx_homedir="/var/tmp/nginx"
make_dirs+=" /var/log/nginx 0750 root root"
make_dirs+=" /var/tmp 1777 root root"
make_dirs+=" /var/tmp/nginx 0750 nginx root"
build_options+=" geoip"
build_options+=" slice"
build_options+=" stream"
desc_option_slice="Enable support for slice filters"
desc_option_stream="Enable support for stream proxies"
build_options_default+=" geoip"
build_options_default+=" slice"
build_options_default+=" stream"

do_configure() {
  local cfgdir
  local stream_modules
  local tmpdir

  cfgdir="/etc/nginx"
  tmpdir="/var/tmp/nginx"

  if [[ -n "$CROSS_BUILD" ]]; then
    # fake configure run on host
    unset CC
    unset CPP
    unset LD
    unset CFLAGS
    unset CPPFLAGS
    unset LDFLAGS
  fi

  stream_modules+=" --with-stream"
  stream_modules+=" --with-stream_realip_module"
  stream_modules+=" --with-stream_ssl_module"
  stream_modules+=" --with-stream_ssl_preread_module"
  stream_modules+=" $(vopt_if geoip --with-stream_geoip_module)"

  ./configure \
    --prefix="$cfgdir" \
    --conf-path="$cfgdir/nginx.conf" \
    --sbin-path="/usr/bin/nginx" \
    --pid-path="/run/nginx.pid" \
    --lock-path="/var/lock/nginx.lock" \
    --user="nginx" \
    --group="nginx" \
    --http-log-path="/var/log/nginx/access.log" \
    --error-log-path="/var/log/nginx/error.log" \
    --http-client-body-temp-path="$tmpdir/client-body" \
    --http-proxy-temp-path="$tmpdir/proxy" \
    --http-fastcgi-temp-path="$tmpdir/fastcgi" \
    --http-scgi-temp-path="$tmpdir/scgi" \
    --http-uwsgi-temp-path="$tmpdir/uwsgi" \
    --with-mail \
    --with-mail_ssl_module \
    --with-pcre-jit \
    --with-file-aio \
    --with-http_gunzip_module \
    --with-http_v2_module \
    --with-http_dav_module \
    --with-http_gzip_static_module \
    --with-http_realip_module \
    --with-http_ssl_module \
    --with-http_stub_status_module \
    --with-http_sub_module \
    $(vopt_if geoip --with-http_geoip_module) \
    $(vopt_if stream "$stream_modules") \
    $(vopt_if slice --with-http_slice_module)
}

pre_build() {
  if [[ -n "$CROSS_BUILD" ]]; then
    case "$XBPS_TARGET_MACHINE" in
      arm*)
        cp "$FILESDIR/ngx_auto_config.h.armv6l" objs/ngx_auto_config.h
        ;;
      aarch64*)
        cp "$FILESDIR/ngx_auto_config.h.aarch64" objs/ngx_auto_config.h
        ;;
    esac
  fi

  sed \
    -i \
    -e 's/-lcrypt/$(LDFLAGS) &/' \
    objs/Makefile
}

post_install() {
  vlicense LICENSE
  vman man/nginx.8
  sed \
    -i \
    -e 's|\<user\s\+\w\+;|user html;|g' \
    -e '44s|html|/usr/share/nginx/html|' \
    -e '54s|html|/usr/share/nginx/html|' \
    "$DESTDIR/etc/nginx/nginx.conf"
  rm -- "$DESTDIR"/etc/nginx/*.default
  vmkdir usr/share/nginx
  mv "$DESTDIR/etc/nginx/html" "$DESTDIR/usr/share/nginx"
  vsv nginx
}

# REMARKS:
#
# The pre-generated header file for ARM must be syncrhonized on
# update. After the configure step, the diff between:
#
#   srcpkgs/nginx/files/ngx_auto_config.h.armv6l
#
# and:
#
#   masterdir/builddir/nginx-$version/objs/ngx_auto_config.h
#
# must be checked for changes that must be made.

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

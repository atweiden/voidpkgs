maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="mariadb"
version=10.1.30
revision=5
short_desc="Fast SQL database server, drop-in replacement for MySQL"
depends="mariadb-client"
makedepends+=" libressl-devel"
makedepends+=" ncurses-devel"
makedepends+=" pcre-devel"
makedepends+=" readline-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" bison"
hostmakedepends+=" libressl-devel"
hostmakedepends+=" ncurses-devel"
hostmakedepends+=" perl"
homepage="https://mariadb.org/"
license="GPL-2"
distfiles="http://archive.mariadb.org/mariadb-$version/source/$pkgname-$version.tar.gz"
checksum="173a5e5a24819e0a469c3bd09b5c98491676c37c6095882a2ea34c5af0996c88"
conf_files="/etc/mysql/my.cnf"
build_style="cmake"
configure_args+=" -DDEFAULT_CHARSET=utf8"
configure_args+=" -DDEFAULT_COLLATION=utf8_general_ci"
configure_args+=" -DENABLED_LOCAL_INFILE=ON"
configure_args+=" -DINSTALL_DOCDIR=share/mysql/docs"
configure_args+=" -DINSTALL_DOCREADMEDIR=share/mysql"
configure_args+=" -DINSTALL_INCLUDEDIR=include/mysql"
configure_args+=" -DINSTALL_INFODIR=share/mysql/docs"
configure_args+=" -DINSTALL_MANDIR=share/man"
configure_args+=" -DINSTALL_MYSQLSHAREDIR=share/mysql"
configure_args+=" -DINSTALL_PLUGINDIR=lib/mysql/plugin"
configure_args+=" -DINSTALL_SCRIPTDIR=bin"
configure_args+=" -DINSTALL_SHAREDIR=share/mysql"
configure_args+=" -DINSTALL_SUPPORTFILESDIR=share/mysql"
configure_args+=" -DMYSQL_DATADIR=/var/lib/mysql"
configure_args+=" -DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock"
configure_args+=" -DPLUGIN_TOKUDB=NO"
configure_args+=" -DSTACK_DIRECTION=1"
configure_args+=" -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1"
configure_args+=" -DWITHOUT_FEDERATED_STORAGE_ENGINE=1"
configure_args+=" -DWITHOUT_PBXT_STORAGE_ENGINE=1"
configure_args+=" -DWITH_ARCHIVE_STORAGE_ENGINE=1"
configure_args+=" -DWITH_BLACKHOLE_STORAGE_ENGINE=1"
configure_args+=" -DWITH_EMBEDDED_SERVER=ON"
configure_args+=" -DWITH_EXTRA_CHARSETS=complex"
configure_args+=" -DWITH_INNOBASE_STORAGE_ENGINE=1"
configure_args+=" -DWITH_LIBWRAP=OFF"
configure_args+=" -DWITH_PARTITION_STORAGE_ENGINE=1"
configure_args+=" -DWITH_READLINE=ON"
configure_args+=" -DWITH_SSL=system"
configure_args+=" -DWITH_ZLIB=system"
system_accounts="mysql"
mysql_homedir="/var/lib/mysql"
lib32disabled="yes"
disable_parallel_build="yes"
provides="mysql-${version}_$revision"
replaces="mysql>=0"

CFLAGS="-w"

case "$XBPS_TARGET_MACHINE" in
  armv[56]*)
    LDFLAGS="-L$XBPS_CROSS_BASE/usr/lib -latomic"
    makedepends+=" libatomic-devel"
    hostmakedepends+=" libatomic-devel"
    ;;
esac

pre_configure() {
  case "$XBPS_TARGET_MACHINE" in
    armv[56]*)
      find -name CMakeLists.txt -exec \
        sed \
          -i \
          -e "/TARGET_LINK_LIBRARIES/s;); atomic);" \
          "{}" \;
      ;;
  esac
  # we need some host binaries before starting cross compilation
  if [[ -n "$CROSS_BUILD" ]]; then
    # XXX still broken: jemalloc configure execs host bins
    AR= \
    AS= \
    CC= \
    CFLAGS= \
    CPP= \
    CXX= \
    CXXFLAGS= \
    LD= \
    LDFLAGS= \
    RANLIB= \
      cmake .
    make \
      comp_err \
      comp_sql \
      gen_lex_hash \
      gen_lex_token
    mkdir bin.host
    cp extra/comp_err bin.host
    cp scripts/comp_sql bin.host
    cp sql/gen_lex_hash bin.host
    cp sql/gen_lex_token bin.host
    make clean
    rm CMakeCache.txt
  fi
}

pre_build() {
  if [[ -n "$CROSS_BUILD" ]]; then
    cp bin.host/comp_err "$wrksrc/extra"
    cp bin.host/comp_sql "$wrksrc/scripts"
    cp bin.host/gen_lex_hash "$wrksrc/sql"
    cp bin.host/gen_lex_token "$wrksrc/sql"
    export PATH="$PATH:$wrksrc/extra:$wrksrc/scripts:$wrksrc/sql"
  fi
  export LD_LIBRARY_PATH="$wrksrc/build/storage/tokudb/ft-index/portability"
  case "$XBPS_TARGET_MACHINE" in
    aarch64*)
      # work around gcc bug
      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81228
      sed \
        -i \
        -e "s; -O3;;g" \
        build/storage/mroonga/vendor/groonga/lib/CMakeFiles/libgroonga.dir/flags.make
      ;;
  esac
}

post_install() {
  # remove unneeded stuff
  rm -rf "$DESTDIR/usr"/{sql-bench,mysql-test,data}
  rm -f "$DESTDIR/usr/share/man/man1/mysql-test-run.pl.1"
  # configuration file
  install -Dm 644 "$DESTDIR/usr/share/mysql/my-medium.cnf" \
    "$DESTDIR/etc/mysql/my.cnf"
  vsv mysqld
}

libmariadbclient_package() {
  short_desc+=" - client library"
  provides="libmysqlclient-${version}_$revision"
  replaces="libmysqlclient>=0"
  pkg_install() {
    vmove "usr/lib/libmysqld.so.*"
    vmove "usr/lib/libmysqlclient*.so.*"
  }
}

libmariadbclient-devel_package() {
  depends="libmariadbclient>=${version}_$revision"
  provides="libmysqlclient-devel-${version}_$revision"
  replaces="libmysqlclient-devel>=0"
  short_desc+=" - client development files"
  pkg_install() {
    vmove usr/bin/mysql_config
    vmove usr/share/man/man1/mysql_config.1
    vmove usr/include
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

mariadb-client_package() {
  depends="perl"
  provides="mysql-client-${version}_$revision"
  replaces="mysql-client>=0"
  short_desc+=" - client binaries"
  pkg_install() {
    for f in innochecksum \
             innotop \
             myisam_ftdump \
             mysql \
             mysql_client_test \
             mysql_client_test_embedded \
             mysql_find_rows \
             mysql_fix_extensions \
             mysql_upgrade \
             mysql_waitpid \
             mysql_zap \
             mysqlaccess \
             mysqladmin \
             mysqlanalyze \
             mysqlbinlog \
             mysqlbug \
             mysqlcheck \
             mysqldump \
             mysqldumpslow \
             mysqlhotcopy \
             mysqlimport \
             mysqlmanager \
             mysqloptimize \
             mysqlrepair \
             mysqlreport \
             mysqlshow \
             mysqlslap \
             mysqltest \
             mysqltest_embedded; do
      if [[ -f "$DESTDIR/usr/bin/$f" ]]; then
        vmove "usr/bin/$f"
      elif [[ -f "$DESTDIR/usr/sbin/$f" ]]; then
        vmove "usr/sbin/$f"
      fi
      if [[ -f "$DESTDIR/usr/share/man/man1/$f.1" ]]; then
        vmove "usr/share/man/man1/$f.1"
      elif [[ -f "$DESTDIR/usr/share/man/man8/$f.8" ]]; then
        vmove "usr/share/man/man8/$f.8"
      fi
    done
  }
}

mytop_package() {
  unset depends
  noarch="yes"
  depends+=" $sourcepkg>=${version}_$revision"
  depends+=" perl-DBD-mysql"
  depends+=" perl-Term-ReadKey"
  short_desc="Top-like query monitor for MariaDB"
  pkg_install() {
    vmove usr/bin/mytop
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

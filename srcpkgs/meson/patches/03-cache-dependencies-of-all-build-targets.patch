From 5d0f986d7ac8000ee2798d8dabf6c05e5082e87e Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Fri, 14 Sep 2018 21:05:21 +0530
Subject: [PATCH] Cache dependencies of all build targets

This yields a marginally but consistently faster backend generation
time in gst-build.
---
 mesonbuild/build.py | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/mesonbuild/build.py b/mesonbuild/build.py
index c26db764ab..e2d6cb64e9 100644
--- a/mesonbuild/build.py
+++ b/mesonbuild/build.py
@@ -861,10 +861,11 @@ def is_internal(self):
             return True
         return False
 
+    @lru_cache()
     def get_dependencies(self, exclude=None, internal=True, link_whole=False):
         transitive_deps = []
         if exclude is None:
-            exclude = []
+            exclude = ()
         for t in self.link_targets:
             if t in transitive_deps or t in exclude:
                 continue
@@ -877,7 +878,7 @@ def get_dependencies(self, exclude=None, internal=True, link_whole=False):
                 continue
             transitive_deps.append(t)
             if isinstance(t, StaticLibrary):
-                transitive_deps += t.get_dependencies(transitive_deps + exclude,
+                transitive_deps += t.get_dependencies(tuple(transitive_deps) + exclude,
                                                       internal, link_whole)
         for t in self.link_whole_targets:
             if t in transitive_deps or t in exclude:
@@ -891,9 +892,9 @@ def get_dependencies(self, exclude=None, internal=True, link_whole=False):
                 transitive_deps.append(t)
             # However, the transitive dependencies are still needed
             if isinstance(t, StaticLibrary):
-                transitive_deps += t.get_dependencies(transitive_deps + exclude,
+                transitive_deps += t.get_dependencies(tuple(transitive_deps) + exclude,
                                                       internal, link_whole)
-        return transitive_deps
+        return tuple(transitive_deps)
 
     def get_source_subdir(self):
         return self.subdir

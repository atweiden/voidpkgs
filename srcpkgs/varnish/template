maintainer="nox"
pkgname="varnish"
version=7.1.0
revision=1
short_desc="Fast caching HTTP reverse proxy"
makedepends+=" pcre2-devel"
makedepends+=" readline-devel"
hostmakedepends+=" pkg-config"
hostmakedepends+=" python3"
hostmakedepends+=" python3-Sphinx"
hostmakedepends+=" python3-docutils"
homepage="https://varnish-cache.org/"
license="BSD-2-Clause"
distfiles="https://varnish-cache.org/_downloads/varnish-$version.tgz"
checksum="f54ab88685667664e5b3c39eb56ac8c624b6c1093436a7f8c555491144c69eba"
conf_files="/etc/varnish/default.vcl"
build_style="gnu-configure"
configure_args+=" --cache-file=config.void"
configure_args+=" --disable-static"
configure_args+=" $(vopt_enable pcrejit pcre-jit)"
system_accounts+=" _varnish"
_varnish_homedir="/var/lib/varnish"
system_accounts+=" _vcache"
_vcache_pgroup="_varnish"
make_dirs+=" /var/lib/varnish 0750 _varnish _varnish"
make_dirs+=" /var/log/varnish 0750 _varnish _varnish"
build_options="pcrejit"
lib32disabled="yes"

if [[ "${XBPS_TARGET_MACHINE%-musl}" == "i686" ]]; then
  broken="vcltest failure on i686 in c00059.vtc and more"
fi

if [[ "$(vopt_if pcrejit yes)" == "yes" ]]; then
  # don't permit cross builds if pcrejit is set
  nocross="Cannot run test program when cross compiling (PCRE_JIT)"
elif [[ "${XBPS_MACHINE%-musl}" != "${XBPS_TARGET_MACHINE%-musl}" ]]; then
  # mark builds with different architectures as nocross
  nocross="Host and target architectures must be the same to run the program during build"
fi

case "$XBPS_TARGET_MACHINE" in
  *-musl)
    configure_args+=" --without-jemalloc"
    makedepends+=" libexecinfo-devel"
    ;;
  *)
    makedepends+=" jemalloc-devel"
    ;;
esac

post_install() {
  vinstall etc/example.vcl 644 etc/varnish default.vcl
  vsv varnishd
  vlicense LICENSE
}

libvarnishapi_package() {
  short_desc+=" - API runtime library"
  pkg_install() {
    vmove "usr/lib/*.so.*"
  }
}

libvarnishapi-devel_package() {
  depends="libvarnishapi>=${version}_$revision"
  short_desc+=" - API development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.so"
    vmove usr/share/man/man3
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="nix"
version=2.11.0
revision=9
short_desc="Purely functional package manager"
depends+=" busybox-static"
depends+=" curl"
depends+=" tar"
depends+=" xz"
makedepends+=" boost-devel"
makedepends+=" brotli-devel"
makedepends+=" bzip2-devel"
makedepends+=" editline-devel"
makedepends+=" gc-devel"
makedepends+=" gtest-devel"
makedepends+=" jq-devel"
makedepends+=" json-c++"
makedepends+=" libarchive-devel"
makedepends+=" libcurl-devel"
makedepends+=" liblzma-devel"
makedepends+=" libseccomp-devel"
makedepends+=" libsodium-devel"
makedepends+=" lowdown-devel"
makedepends+=" openssl-devel"
makedepends+=" sqlite-devel"
case "$XBPS_TARGET_MACHINE" in
  x86_64*|i686*) makedepends+=" libcpuid-devel";;
esac
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  makedepends+=" musl-legacy-compat"
fi
hostmakedepends+=" autoconf-archive"
hostmakedepends+=" automake"
hostmakedepends+=" busybox-static"
hostmakedepends+=" curl"
hostmakedepends+=" flex"
hostmakedepends+=" jq"
hostmakedepends+=" lowdown"
hostmakedepends+=" mdBook"
hostmakedepends+=" pkg-config"
hostmakedepends+=" tar"
hostmakedepends+=" xz"
homepage="https://nixos.org/nix/"
license="LGPL-2.1-or-later"
changelog="https://nixos.org/releases/$pkgname/$pkgname-$version/manual/#sec-relnotes"
distfiles="https://github.com/NixOS/nix/archive/refs/tags/$version.tar.gz"
checksum="6a90e144352eaccfab7ef7ed470bad382c4f92d62336b327df99627adba67a7c"
# default configuration file
conf_files="/etc/nix/nix.conf"
build_style="gnu-configure"
# use /nix/var as suggested by official manual
configure_args+=" --localstatedir=/nix/var"
configure_args+=" --with-sandbox-shell=/usr/bin/busybox.static"
make_build_args+=" SET_RPATH_TO_LIBS=0"
make_build_args+=" V=1"
make_install_args+=" SET_RPATH_TO_LIBS=0"
make_install_args+=" V=1"
# create required build users/groups
system_groups="nixbld"
for f in {1..9}; do
  system_accounts+=" nixbld$f"
  eval export nixbld\${f}_pgroup="nixbld"
  eval export nixbld\${f}_groups="nixbld"
done
# create required run-time directories
make_dirs+=" /nix/store 1775 root nixbld"
make_dirs+=" /nix/var/log/nix/drvs 0755 root root"
make_dirs+=" /nix/var/nix/db 0755 root root"
make_dirs+=" /nix/var/nix/gcroots 0755 root root"
make_dirs+=" /nix/var/nix/gcroots/per-user 1777 root root"
make_dirs+=" /nix/var/nix/manifests 0755 root root"
make_dirs+=" /nix/var/nix/profiles 0755 root root"
make_dirs+=" /nix/var/nix/profiles/per-user 1777 root root"
make_dirs+=" /nix/var/nix/temproots 0755 root root"
make_dirs+=" /nix/var/nix/userpool 0755 root root"
# cross-compilation requires qemu (see: upstream)
nocross="yes"
#disable_parallel_build="build is fine, only linking test"

CXXFLAGS="-Wno-deprecated-declarations"

pre_configure() {
  ./bootstrap.sh
}

post_install() {
  vmkdir etc/nix
  # remove unused stuff
  rm -rf "$DESTDIR/etc/init"
  rm -rf "$DESTDIR/nix"
  rm -rf "$DESTDIR/usr/include"
  rm -rf "$DESTDIR/usr/lib/pkgconfig"
  rm -rf "$DESTDIR/usr/lib/systemd"
  # let users interact with nix-daemon by default
  vmkdir etc/profile.d
  echo 'export NIX_REMOTE=daemon' > "$DESTDIR/etc/profile.d/nix-daemon.sh"
  # setup build users
  { echo 'build-users-group = nixbld'
    echo 'build-use-sandbox = false'
  } > "$DESTDIR/etc/nix/nix.conf"
  # install our profile.d/nix for multi-user by default
  vinstall "$FILESDIR/nix.sh" 644 etc/profile.d
  # runit service
  vsv nix-daemon
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="nim"
version=1.6.10
revision=1
_c1version="561b417c65791cd8356b5f73620914ceff845d10"
_nimbleversion=0.13.1
short_desc="Nim programming language"
depends+=" gcc"
depends+=" openssl-devel"
makedepends="readline-devel"
homepage="https://nim-lang.org/"
license="MIT"
distfiles+=" https://github.com/nim-lang/Nim/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
distfiles+=" https://github.com/nim-lang/csources_v1/archive/$_c1version.tar.gz>csources_v1-$_c1version.tar.gz"
distfiles+=" https://github.com/nim-lang/nimble/archive/v$_nimbleversion.tar.gz>nimble-$_nimbleversion.tar.gz"
checksum+=" 09a5f707c9681ee6d712c749dc1d4b68000ccf07db35635050c1fc4e9114bfb8"
checksum+=" 71c823444c794a12da9027d19d6a717dd7759521ecbbe28190b08372142607ec"
checksum+=" e6aa8d9ee4b3ed0321dca329b4a38fa546771b9729984482fb50fe73d3777f5d"
build_wrksrc="Nim-$version"

post_extract() {
  mv "csources_v1-$_c1version" "$build_wrksrc/csources_v1"
  mkdir "$build_wrksrc/dist"
  mv "nimble-$_nimbleversion" "$build_wrksrc/dist/nimble"
}

do_build() {
  case "$XBPS_TARGET_MACHINE" in
    i686*)
      CC="cc" \
      CFLAGS="-Os -pipe" \
      LD="cc" \
      LDFLAGS= \
        make -C csources_v1 ucpu="i686" "$makejobs"
      ;;
    ppc|ppc-musl)
      CC="cc" \
      CFLAGS="-Os -pipe" \
      LD="cc" \
      LDFLAGS= \
        make -C csources_v1 ucpu="powerpc" "$makejobs"
      ;;
    *)
      CC="cc" \
      CFLAGS="-Os -pipe" \
      LD="cc" \
      LDFLAGS= \
        make -C csources_v1 "$makejobs"
      ;;
  esac

  bin/nim c koch
  ./koch boot -d:release -d:danger

  case "$XBPS_TARGET_MACHINE" in
    aarch64*)
      _arch="arm64"
      ;;
    arm*)
      _arch="arm"
      ;;
    ppc64le*)
      _arch="powerpc64el"
      ;;
    ppc64*)
      _arch="powerpc64"
      ;;
    ppc*)
      _arch="powerpc"
      ;;
  esac

  case "$XBPS_TARGET_MACHINE" in
    arm*|aarch64*|ppc*)
      vsed \
        -i \
        -e 's/^arm\.linux\.gcc\.\(linker\)\?exe /#&/' \
        config/nim.cfg
      cat >>config/nim.cfg <<-EDIT
# VOIDLINUX TEMP
$_arch.linux.gcc.exe = "$CC"
$_arch.linux.gcc.linkerexe = "$CC"
EDIT
      bin/nim c -d:release -d:danger --os:linux --cpu:"$_arch" --listCmd compiler/nim
      ./koch tools --os:linux --cpu:"$_arch" --listCmd
      vsed \
        -i \
        -e '/^# VOIDLINUX TEMP$/,$d' \
        config/nim.cfg
      ;;
    *)
      ./koch tools
  esac
}

do_install() {
  ./koch install "$DESTDIR/usr/lib"

  if [[ -n "$CROSS_BUILD" ]]; then
    mv compiler/nim "$DESTDIR/usr/lib/nim/bin/nim"
  fi

  vmkdir usr/bin
  vmkdir usr/share/nim
  ln -sf /usr/lib/nim/bin/nim "$DESTDIR/usr/bin/nim"
  for _f in nimble \
            nimgrep \
            nimpretty \
            nimsuggest \
            testament; do
    chmod 0755 "bin/$_f"
    cp "bin/$_f" "$DESTDIR/usr/lib/nim/bin"
    ln -sf "/usr/lib/nim/bin/$_f" "$DESTDIR/usr/bin/$_f"
  done
  cp -r nimsuggest nimpretty doc "$DESTDIR/usr/lib/nim"
  ln -sf /usr/lib/nim/doc "$DESTDIR/usr/share/nim/doc"
  ln -sf /usr/lib/nim/nimsuggest "$DESTDIR/usr/share/nim/nimsuggest"
  ln -sf /usr/lib/nim/nimpretty "$DESTDIR/usr/share/nim/nimpretty"
  vlicense copying.txt
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

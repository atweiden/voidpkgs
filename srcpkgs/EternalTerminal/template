maintainer="nox"
pkgname="EternalTerminal"
version=6.2.1
revision=4
# revisions used for the specific versions of submodules
# they can be found in the external/ directory of the source code
_sanitizers_gitrev="99e159ec9bc8dd362b08d18436bd40ff0648417b"
_threadpool_gitrev="9a42ec1329f259a5f4881a291db1dcb8f2ad9040"
short_desc="Re-Connectable secure remote shell"
makedepends+=" gflags-devel"
makedepends+=" libsodium-devel"
makedepends+=" openssl-devel"
makedepends+=" protobuf-devel"
makedepends+=" zlib-devel"
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  makedepends+=" libexecinfo-devel"
fi
hostmakedepends="protobuf"
homepage="https://eternalterminal.dev/"
license="Apache-2.0"
distfiles+=" https://github.com/MisterTea/EternalTerminal/archive/et-v$version.tar.gz>$pkgname-$version.tar.gz"
distfiles+=" https://github.com/arsenm/sanitizers-cmake/archive/$_sanitizers_gitrev.tar.gz>sanitizers-cmake-$version.tar.gz"
distfiles+=" https://github.com/progschj/ThreadPool/archive/$_threadpool_gitrev.tar.gz>ThreadPool-$_threadpool_gitrev.tar.gz"
checksum+=" fdf68a51cb8b62b3dbbacd1d2aeba5d5491e5142e65c97713c2f1ce61d4fdbed"
checksum+=" f9cf386638f455c5d2e7a835b95941201387d2531b8682942d59827663b58341"
checksum+=" 954e0ecdac1aa0da1e0fa78577ff0d352e53094df43762fbc1884f76a7e1dcd2"
build_style="cmake"
build_wrksrc="$pkgname"
configure_args+=" -DDISABLE_SENTRY=ON"
configure_args+=" -DDISABLE_TELEMETRY=ON"
configure_args+=" -DDISABLE_VCPKG=ON"
# UnixSocketHandler.cpp:53 Error reading: 104 Connection reset by peer
# SocketHandler.cpp:91 Failed a call to writeAll: Broken pipe
make_check="no"
system_accounts="_eternal"

LDFLAGS="-lgflags"

post_extract() {
  mv "EternalTerminal-et-v$version" "$build_wrksrc"
  mv "sanitizers-cmake-$_sanitizers_gitrev"/* "$build_wrksrc/external/sanitizers-cmake"
  mv "ThreadPool-$_threadpool_gitrev"/* "$build_wrksrc/external/ThreadPool"
}

post_patch() {
  if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
    # use external libexecinfo
    vsed \
      -i \
      -e '/execinfo/!s/CORE_LIBRARIES util resolv/& execinfo/' \
      CMakeLists.txt
  fi
  if [[ -z "$XBPS_TARGET_NO_ATOMIC8" ]]; then
    # remove libatomic from LD if target arch supports atomics
    vsed \
      -i \
      -e '/  atomic$/d' \
      CMakeLists.txt
  fi
}

post_install() {
  vsv etserver
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

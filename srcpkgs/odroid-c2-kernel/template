maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="odroid-c2-kernel"
version=3.16.57
revision=1
_kernver="${version}_$revision"
_gitrev="a47cdcd05b6439422bf50409f1f09485dcc7b7b6"
short_desc="The Linux kernel for ODROID-C2 (${version%.*} series)"
archs="aarch64*"
makedepends="ncurses-devel"
hostmakedepends+=" bc"
hostmakedepends+=" kmod"
hostmakedepends+=" libressl"
hostmakedepends+=" perl"
homepage="https://github.com/hardkernel/linux/tree/odroidc2-v3.16.y"
license="GPL-2"
distfiles="https://github.com/hardkernel/linux/archive/$_gitrev.tar.gz>$pkgname-$version.tar.gz"
checksum="86bdcd566685e39b0457056c0c6615dcbf090ec5305b907d77c85a131ad793a4"
wrksrc="linux-$_gitrev"
patch_args="-Np1"
nodebug="yes"
nostrip="yes"
noverifyrdeps="yes"
noshlibprovides="yes"
triggers="kernel-hooks"
# these files could be modified when an external module is built
mutable_files+=" /usr/lib/modules/$_kernver/modules.alias"
mutable_files+=" /usr/lib/modules/$_kernver/modules.alias.bin"
mutable_files+=" /usr/lib/modules/$_kernver/modules.dep"
mutable_files+=" /usr/lib/modules/$_kernver/modules.dep.bin"
mutable_files+=" /usr/lib/modules/$_kernver/modules.devname"
mutable_files+=" /usr/lib/modules/$_kernver/modules.symbols"
mutable_files+=" /usr/lib/modules/$_kernver/modules.symbols.bin"

do_configure() {
  if [[ -n "$CROSS_BUILD" ]]; then
    _args="CROSS_COMPILE=$XBPS_CROSS_TRIPLET-"
  fi
  cp "$FILESDIR/config" .config
  make "$makejobs" $_args ARCH="arm64" oldconfig
  # always use our revision to CONFIG_LOCALVERSION to match our pkg version
  sed \
    -i \
    -e "s|^\(CONFIG_LOCALVERSION=\).*|\1\"_$revision\"|" \
    .config
}

do_build() {
  if [[ -n "$CROSS_BUILD" ]]; then
    _args="CROSS_COMPILE=$XBPS_CROSS_TRIPLET-"
  fi
  export LDFLAGS=
  make "$makejobs" $_args ARCH="arm64" prepare
  make "$makejobs" $_args ARCH="arm64" Image modules dtbs
}

do_install() {
  local hdrdest

  # run depmod after compressing modules
  sed \
    -i \
    -e '2iexit 0' \
    scripts/depmod.sh

  # install kernel, firmware and modules
  make "$makejobs" ARCH="arm64" INSTALL_MOD_PATH="$DESTDIR" modules_install

  vmkdir boot
  vmkdir boot/dtbs
  vinstall arch/arm64/boot/Image 644 boot
  vinstall arch/arm64/boot/dts/meson64_odroidc2.dtb 644 boot/dtbs

  # add vmlinux
  #install -Dm 644 vmlinux -t "$pkgdir/usr/lib/modules/$_kernver/build"

  hdrdest="$DESTDIR/usr/src/$sourcepkg-headers-$_kernver"

  # switch to /usr
  vmkdir usr
  mv "$DESTDIR/lib" "$DESTDIR/usr"

  cd "$DESTDIR/usr/lib/modules/$_kernver"
  rm -f source build
  ln -sf "../../../src/$sourcepkg-headers-$_kernver" build

  cd "$wrksrc"
  # install required headers to build external modules
  install -Dm 644 Makefile "$hdrdest/Makefile"
  install -Dm 644 kernel/Makefile "$hdrdest/kernel/Makefile"
  install -Dm 644 .config "$hdrdest/.config"
  mkdir -p "$hdrdest/include"

  # remove firmware stuff provided by the "linux-firmware" pkg
  rm -rf "$DESTDIR/usr/lib/firmware"

  for i in acpi \
           asm-generic \
           clocksource \
           config \
           crypto \
           drm \
           generated \
           keys \
           linux \
           math-emu \
           media \
           net \
           pcmcia \
           scsi \
           sound \
           trace \
           uapi \
           video \
           xen; do
    [[ -d "include/$i" ]] \
      && cp -a "include/$i" "$hdrdest/include"
  done

  cd "$wrksrc"
  # copy files necessary for later builds
  cp Module.symvers "$hdrdest"
  cp -a scripts "$hdrdest"

  # fix permissions on scripts dir
  chmod og-w -R "$hdrdest/scripts"

  # add docbook makefile
  install -Dm 644 Documentation/DocBook/Makefile \
          -t "$hdrdest/Documentation/DocBook"

  # add md headers
  mkdir -p "$hdrdest/drivers/md"
  cp drivers/md/*.h "$hdrdest/drivers/md"

  # add inotify.h
  mkdir -p "$hdrdest/include/linux"
  cp include/linux/inotify.h "$hdrdest/include/linux"

  # add wireless headers
  mkdir -p "$hdrdest/net/mac80211/"
  cp net/mac80211/*.h "$hdrdest/net/mac80211"

  # add dvb headers for external modules
  mkdir -p "$hdrdest/include/config/dvb/"
  cp include/config/dvb/*.h "$hdrdest/include/config/dvb/"

  # copy in Kconfig files
  for i in $(find . -name "Kconfig*"); do
    mkdir -p "$hdrdest/$(echo "$i" | sed 's|/Kconfig.*||')"
    cp "$i" "$hdrdest/$i"
  done

  # remove unneeded architectures
  for arch in alpha \
              arm26 \
              avr32 \
              blackfin \
              cris \
              frv \
              h8300 \
              ia64 \
              m* \
              p* \
              s* \
              um \
              v850 \
              x86 \
              xtensa; do
    rm -rf "$hdrdest/arch/$arch"
  done

  # compress all modules with xz to save a few MBs
  msg_normal "$pkgver: compressing kernel modules with gzip, please wait...\n"
  find "$DESTDIR" -name '*.ko' | xargs -n1 -P0 gzip -9

  # ... and run depmod again
  depmod -b "$DESTDIR/usr" -F System.map "$_kernver"
}

odroid-c2-kernel-headers_package() {
  nostrip="yes"
  noverifyrdeps="yes"
  noshlibprovides="yes"
  short_desc="The Linux kernel headers for ODROID-C2 (${version%.*} series)"
  pkg_install() {
    vmove usr/src
    vmove "usr/lib/modules/$_kernver/build"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

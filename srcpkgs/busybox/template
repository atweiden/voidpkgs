maintainer="nox"
pkgname="busybox"
version=1.32.1
revision=3
short_desc="Swiss Army Knife of Embedded Linux"
checkdepends+=" tar"
checkdepends+=" which"
checkdepends+=" zip"
hostmakedepends="perl"
homepage="https://www.busybox.net"
license="GPL-2.0-only"
distfiles="https://www.busybox.net/downloads/$pkgname-$version.tar.bz2"
checksum="9d57c4bd33974140fd4111260468af22856f12f5b5ef7c70c8d9b75c712a0dee"
patch_args="-Np0"
_alternatives_core+=" ash:ash:/usr/bin/busybox"
_alternatives_core+=" awk:awk:/usr/bin/busybox"
_alternatives_core+=" hostname:hostname:/usr/bin/busybox"
_alternatives_core+=" logger:logger:/usr/bin/busybox"
_alternatives_core+=" sh:sh:/usr/bin/busybox"
_alternatives_core+=" vi:vi:/usr/bin/busybox"
_alternatives+=" $_alternatives_core"
_alternatives+=" ntpd:ntpd:/etc/sv/busybox-ntpd"
_alternatives+=" ntpd:ntpd:/usr/bin/busybox"

alternatives="$_alternatives"
register_shell="/usr/bin/ash"

_patch_config() {
  local t="$1"
  shift
  while [[ -n "$1" ]]; do
    local p="$1"
    shift
    echo "Applying $p..."
    patch "$t/.config" < "$FILESDIR/dotconfig.d/$p.patch"
  done
}

do_configure() {
  mkdir -p src
  mv * src \
    || true
  for t in busybox \
           busybox-core \
           busybox-huge \
           busybox-static; do
    mkdir -p "$t"
    cp -f "$FILESDIR/dotconfig" "$t/.config"
    case "$XBPS_TARGET_MACHINE" in
      *-musl)
        vsed \
          -i \
          -e /CONFIG_FEATURE_VI_REGEX_SEARCH/s/y/n/ \
          "$t/.config"
        ;;
    esac
    if [[ -n "$CROSS_BUILD" ]]; then
      vsed \
        -i \
        -e \
        "s,\(CONFIG_CROSS_COMPILER_PREFIX\).*,\1=\"$XBPS_CROSS_TRIPLET-\",g" \
        "$t/.config"
    fi
  done

  _patch_config busybox udhcpc ntpd
  _patch_config busybox-static udhcpc ntpd static
  _patch_config busybox-huge udhcpc ntpd httpd mdev sysklogd huge

  for t in busybox-core \
           busybox \
           busybox-static \
           busybox-huge; do
    make \
      -C "$t" \
      KBUILD_SRC="$wrksrc/src" \
      -f "$wrksrc/src/Makefile" \
      oldconfig
    make \
      -C "$t" \
      KBUILD_SRC="$wrksrc/src" \
      -f "$wrksrc/src/Makefile" \
      prepare "$makejobs"
  done

  if [[ -n "$SOURCE_DATE_EPOCH" ]]; then
    # rewrite date with the one from the date wrapper
    d="$(date +"%F %T %Z")"
    sed \
      -i \
      -e "s/\(#define AUTOCONF_TIMESTAMP\).*/\1 \"$d\"/" \
      */include/autoconf.h
  fi
}

do_build() {
  for t in busybox-core \
           busybox \
           busybox-static \
           busybox-huge; do
    make \
      -C "$t" \
      SKIP_STRIP="y" \
      "$makejobs"
  done
}

do_check() {
  for t in busybox-core \
           busybox \
           busybox-static \
           busybox-huge; do
    make \
      -C "$t" \
      "$makejobs" \
      SKIP_KNOWN_BUGS="yes" \
      SKIP_INTERNET_TESTS="yes" \
      check
  done
}

do_install() {
  vbin busybox/busybox_unstripped busybox
  vman busybox/docs/busybox.1
  vsv busybox-ntpd
}

busybox-core_package() {
  short_desc+=" (essential applets)"
  conflicts+=" busybox>=0"
  conflicts+=" busybox-huge>=0"
  alternatives="$_alternatives_core"
  register_shell="/usr/bin/ash"
  pkg_install() {
    vbin busybox-core/busybox_unstripped busybox
    vman busybox-core/docs/busybox.1
  }
}

busybox-static_package() {
  short_desc+=" - statically linked"
  pkg_install() {
    vbin busybox-static/busybox busybox.static
  }
}

busybox-huge_package() {
  short_desc+=" (extra applets)"
  conflicts+=" busybox>=0"
  conflicts+=" busybox-core>=0"
  alternatives="$_alternatives"
  register_shell="/usr/bin/ash"
  pkg_install() {
    vbin busybox-huge/busybox_unstripped busybox
    vman busybox-huge/docs/busybox.1
    vsv busybox-ntpd
    vsv busybox-syslogd
    vsv busybox-klogd
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

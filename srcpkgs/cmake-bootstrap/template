maintainer="nox"
pkgname="cmake-bootstrap"
version=3.27.3
revision=1
short_desc="CMake for xbps-src"
homepage="https://www.cmake.org"
license="BSD-3-Clause, ICU"
distfiles="https://www.cmake.org/files/v${version%.*}/cmake-$version.tar.gz"
checksum="66afdc0f181461b70b6fedcde9ecc4226c5cd184e7203617c83b7d8e47f49521"
build_style="cmake"
configure_args+=" -DBUILD_CursesDialog=OFF"
configure_args+=" -DBUILD_QtDialog=OFF"
configure_args+=" -DCMAKE_SKIP_BOOTSTRAP_TEST=1"
configure_args+=" -DCMAKE_SKIP_RPATH=OFF"
configure_args+=" -DCMAKE_USE_OPENSSL=OFF"
configure_args+=" -DCMAKE_USE_SYSTEM_LIBRARIES=OFF"
configure_args+=" -DCMake_INSTALL_INFIX=libexec/xbps-src/"
configure_args+=" -DCMake_TEST_NO_NETWORK=ON"
configure_args+=" -DCTEST_TEST_CPACK=OFF"
configure_args+=" -DKWSYS_LFS_WORKS=1"
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  configure_args+=" -DCMake_NO_SELF_BACKTRACE=1"
fi
provides="cmake-${version}_1"
repository="bootstrap"

pre_configure() {
  local f
  rm -rf build
  mkdir build
  cd build
  CC="$CC_FOR_BUILD" \
  CFLAGS="$CFLAGS_FOR_BUILD" \
  CXX="$CXX_FOR_BUILD" \
  CXXFLAGS="$CXXFLAGS_FOR_BUILD" \
  LD="$LD_FOR_BUILD" \
  LDFLAGS="$LDFLAGS_FOR_BUILD" \
    ../bootstrap \
      --generator="Ninja" \
      --system-libs \
      ${XBPS_MAKEJOBS:+--parallel=$XBPS_MAKEJOBS}
  # make sure build directory is clean
  for f in *; do
    if [[ "$f" != "Bootstrap.cmk" ]]; then return 1; fi
  done
  cd "$wrksrc"
  PATH="$wrksrc/build/Bootstrap.cmk:$PATH"
}

do_check() {
  local _ignore
  mkdir -p /tmp/fake-bin
  ln -sf /usr/bin/bsdtar /tmp/fake-bin/tar
  PATH="$PATH:/tmp/fake-bin"
  # requires git-submodule
  _ignore="ExternalProject|UpdateGIT|CMP0150"
  # cra(y)pe compiler
  _ignore="$_ignore|ParseImplicitLinkInfo"
  # broken on musl, depends on ldconfig
  _ignore="$_ignore|file-GET_RUNTIME_DEPENDENCIES"
  cd build
  ./bin/ctest -E "$_ignore"
}

post_install() {
  # we install license manually because cmake forgets some of them
  test ! -d "$DESTDIR/usr/libexec/xbps-src/share/doc"
  {
    cat Copyright.txt
    printf '%s\n' '' =============================== "FreeBSD ELF library"
    sed -e '/\$FreeBSD\$/q' Utilities/cmelf/elf_common.h
    for _lib in bzip2 curl expat jsoncpp libarchive libuv nghttp2 zstd
    do
      printf '%s\n' '' =============================== "$_lib"
      for _file in COPYING LICENSE NOTICE; do
        if [[ -f "Utilities/cm$_lib/$_file" ]]; then
          cat "Utilities/cm$_lib/$_file"
        fi
      done
    done
  }>license
  vlicense license
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

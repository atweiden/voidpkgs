maintainer="nox"
pkgname="bitcoin"
version=25.1
revision=1
short_desc="Decentralized, peer to peer payment network"
makedepends+=" boost-devel"
makedepends+=" capnproto-devel"
makedepends+=" db-devel"
makedepends+=" libedit-devel"
makedepends+=" libevent-devel"
makedepends+=" libgcc"
makedepends+=" libmultiprocess-devel"
makedepends+=" libseccomp-devel"
makedepends+=" libstdc++"
makedepends+=" sqlite-devel"
makedepends+=" zlib-devel"
checkdepends+=" gtest-devel"
checkdepends+=" procps-ng"
checkdepends+=" python3"
hostmakedepends+=" autoconf"
hostmakedepends+=" automake"
hostmakedepends+=" libtool"
hostmakedepends+=" m4"
hostmakedepends+=" make"
hostmakedepends+=" pkg-config"
hostmakedepends+=" which"
homepage="https://bitcoin.org/"
license="MIT"
distfiles="https://bitcoincore.org/bin/$pkgname-core-$version/$pkgname-$version.tar.gz"
checksum="bec2a598d8dfa8c2365b77f13012a733ec84b8c30386343b7ac1996e901198c9"
build_style="gnu-configure"
configure_args+=" --disable-bench"
configure_args+=" --disable-ccache"
configure_args+=" --disable-fuzz-binary"
configure_args+=" --disable-gui-tests"
configure_args+=" --disable-static"
configure_args+=" --disable-tests"
configure_args+=" --disable-zmq"
configure_args+=" --enable-external-signer"
configure_args+=" --enable-glibc-back-compat"
configure_args+=" --enable-hardening"
configure_args+=" --enable-multiprocess"
configure_args+=" --enable-reduce-exports"
configure_args+=" --with-boost=$XBPS_CROSS_BASE/usr"
configure_args+=" --with-incompatible-bdb"
configure_args+=" --with-libmultiprocess=yes"
configure_args+=" --with-seccomp"
configure_args+=" --with-sqlite=yes"
configure_args+=" --without-gui"
configure_args+=" --without-miniupnpc"
configure_args+=" --without-natpmp"
configure_args+=" --without-qrencode"
if [[ -n "$XBPS_CHECK_PKGS" ]]; then
  configure_args="${configure_args/disable-tests/enable-tests}"
  configure_args="${configure_args/--enable-reduce-exports/}"
fi
# both provide libbitcoinconsensus.so.0
conflicts="litecoin"

pre_configure() {
  autoreconf -fi
  case "$XBPS_TARGET_MACHINE" in
    aarch64*)
      CFLAGS="${CFLAGS/armv8-a/armv8-a+crc+crypto}"
      CXXFLAGS="${CXXFLAGS/armv8-a/armv8-a+crc+crypto}"
      ;;
  esac
}

pre_build() {
  export BITCOIN_GENBUILD_NO_GIT=1
}

do_check() {
  if [[ "$XBPS_CHECK_PKGS" == "full" ]]; then
    # run all possible tests
    ./test/functional/test_runner.py --extended
  else
    # run regression test suite
    ./test/functional/test_runner.py
  fi
}

post_install() {
  vsconf share/examples/bitcoin.conf

  vmkdir "usr/share/$pkgname"
  vcopy share/rpcauth "usr/share/$pkgname"

  for b in bitcoin-cli \
           bitcoin-tx \
           bitcoind; do
    vcompletion "contrib/completions/bash/$b.bash-completion" bash "$b"
  done

  for f in bitcoin-cli \
           bitcoin-tx \
           bitcoin-util \
           bitcoin-wallet \
           bitcoind; do
    vcompletion "contrib/completions/fish/$f.fish" fish "$f"
  done

  vlicense COPYING

  vdoc README.md
  vdoc SECURITY.md
  vcopy doc "usr/share/doc/$pkgname"
}

bitcoin-devel_package() {
  depends="$sourcepkg>=${version}_$revision"
  conflicts="litecoin"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.so"
  }
}

bitcoin-doc_package() {
  short_desc+=" - documentation"
  pkg_install() {
    vmove usr/share/doc
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="bitcoin"
version=0.21.0
revision=1
short_desc="Bitcoin is a peer-to-peer network based digital currency"
makedepends+=" boost-devel"
makedepends+=" libatomic-devel"
makedepends+=" libevent-devel"
makedepends+=" $(vopt_if wallet 'db-devel sqlite-devel')"
hostmakedepends+=" automake"
hostmakedepends+=" libtool"
hostmakedepends+=" pkg-config"
hostmakedepends+=" yasm"
homepage="https://bitcoin.org/"
license="MIT"
distfiles="https://bitcoin.org/bin/bitcoin-core-$version/$pkgname-$version.tar.gz"
checksum="1a91202c62ee49fb64d57a52b8d6d01cd392fffcbef257b573800f9289655f37"
# both provide libbitcoinconsensus.so.0
conflicts="litecoin>=0"
build_style="gnu-configure"
configure_args+=" --disable-ccache"
configure_args+=" --disable-static"
configure_args+=" --enable-hardening"
configure_args+=" --with-boost=$XBPS_CROSS_BASE/usr"
configure_args+=" --without-gui"
configure_args+=" --without-miniupnpc"
configure_args+=" $(vopt_if wallet --with-incompatible-bdb --disable-wallet)"
build_options="wallet"
build_options_default="wallet"
desc_option_wallet="Enable wallet (requires incompatible Berkeley DB)"

pre_configure() {
  autoreconf -fi
  case "$XBPS_TARGET_MACHINE" in
    aarch64*)
      CFLAGS="${CFLAGS/armv8-a/armv8-a+crc+crypto}"
      CXXFLAGS="${CXXFLAGS/armv8-a/armv8-a+crc+crypto}"
      ;;
  esac
}

pre_build() {
  export BITCOIN_GENBUILD_NO_GIT=1
}

post_install() {
  rm "$DESTDIR/usr/bin"/{test,bench}_bitcoin

  vsconf share/examples/bitcoin.conf

  vmkdir "usr/share/$pkgname"
  vcopy share/rpcauth "usr/share/$pkgname"

  for b in bitcoin-cli \
           bitcoin-tx \
           bitcoind; do
    vcompletion "contrib/$b.bash-completion" bash "$b"
  done

  vlicense COPYING
}

bitcoin-devel_package() {
  depends="$sourcepkg>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.so"
  }
}

bitcoin-doc_package() {
  short_desc+=" - documentation"
  pkg_install() {
    vdoc README.md
    vdoc SECURITY.md
    vcopy doc "usr/share/doc/$pkgname"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

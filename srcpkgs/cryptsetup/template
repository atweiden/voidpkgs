maintainer="nox"
pkgname="cryptsetup"
version=2.5.0
revision=1
short_desc="Setup virtual encryption devices under Linux dm-crypt"
makedepends+=" device-mapper-devel"
makedepends+=" json-c-devel"
makedepends+=" libargon2-devel"
makedepends+=" libssh-devel"
makedepends+=" openssl-devel"
makedepends+=" popt-devel"
makedepends+=" $(vopt_if pwquality libpwquality-devel)"
checkdepends+=" jq"
checkdepends+=" procps-ng"
checkdepends+=" tar"
checkdepends+=" which"
checkdepends+=" xxd"
checkdepends+=" xz"
hostmakedepends="pkg-config"
homepage="https://gitlab.com/cryptsetup/cryptsetup"
license="GPL-2.0-or-later"
changelog="https://gitlab.com/cryptsetup/cryptsetup/raw/master/docs/v$version-ReleaseNotes"
distfiles="$KERNEL_SITE/utils/cryptsetup/v${version%.*}/$pkgname-$version.tar.xz"
checksum="9184a6ebbd9ce7eb211152e7f741a6c82f2d1cc0e24a84ec9c52939eee0f0542"
build_style="gnu-configure"
configure_args+=" --disable-asciidoc"
configure_args+=" --enable-cryptsetup-reencrypt"
configure_args+=" --enable-libargon2"
configure_args+=" --with-crypto_backend=openssl"
configure_args+=" $(vopt_enable pwquality)"
make_check_args="-C tests"
build_options="pwquality"
desc_option_pwquality="Enable support for checking password quality via libpwquality"
subpackages+=" libcryptsetup"
subpackages+=" cryptsetup-devel"

if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  configure_args+=" --enable-static-cryptsetup"
  subpackages+=" cryptsetup-static"
  makedepends+=" argp-standalone"
  LDFLAGS+=" -largp"
fi

if [[ "$XBPS_LIBC" == "musl" ]]; then
  # test fail on musl, see upstream:
  # https://gitlab.com/cryptsetup/cryptsetup/-/issues/781
  make_check="no"
else
  # tests which depend on accessing /dev/mapper/control fail on ci
  make_check="ci-skip"
fi

post_patch() {
  if [[ "$XBPS_TARGET_LIBC" == musl ]]; then
    # require losetup from util-linux, also failing when present
    # TODO: 2 tests require lsblk
    rm -f tests/compat-test
    ln -f /bin/true tests/compat-test
  fi
}

cryptsetup-static_package() {
  short_desc+=" - static cryptsetup"
  pkg_install() {
    vmove "usr/bin/*.static"
  }
}

libcryptsetup_package() {
  short_desc+=" - runtime libraries"
  pkg_install() {
    vmove "usr/lib/*.so.*"
  }
}

cryptsetup-devel_package() {
  depends="libcryptsetup>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.so"
    case "$XBPS_TARGET_MACHINE" in
      *-musl)
        vmove "usr/lib/*.a"
        ;;
    esac
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

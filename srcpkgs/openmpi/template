maintainer="nox"
pkgname="openmpi"
version=5.0.2
revision=1
short_desc="High Performance Message Passing Library"
# openmpi >= 5 is 64-bit only
archs+=" aarch64*"
archs+=" ppc64*"
archs+=" riscv64*"
archs+=" x86_64*"
makedepends+=" libevent-devel"
makedepends+=" libgomp-devel"
makedepends+=" libhwloc-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" perl"
hostmakedepends+=" pkg-config"
hostmakedepends+=" python3"
homepage="https://www.open-mpi.org/"
license="BSD-3-Clause"
distfiles="https://www.open-mpi.org/software/ompi/v${version%.*}/downloads/$pkgname-$version.tar.bz2"
checksum="ee46ad8eeee2c3ff70772160bff877cbf38c330a0bc3b3ddc811648b3396698f"
conf_files="/etc/openmpi/*"
build_style="gnu-configure"
configure_args+=" --enable-ipv6"
configure_args+=" --with-pmix=internal"
configure_args+=" --with-prrte=internal"
configure_args+=" --libdir=\${prefix}/lib$XBPS_TARGET_WORDSIZE"
configure_args+=" --sysconfdir=/etc/openmpi"
configure_args+=" --with-hwloc=$XBPS_CROSS_BASE/usr"
lib32disabled="yes"

if [[ -n "$CROSS_BUILD" ]]; then
  # configure can't figure out cross-fortran
  configure_args+=" --enable-mpi-fortran=none"
  configure_args+=" --enable-oshmem-fortran=none"
else
  makedepends+=" libgfortran-devel"
  hostmakedepends+=" gcc-fortran"
fi

post_patch() {
  vsed \
    -i \
    -e 's,sys/unistd.h,unistd.h,g' \
    opal/include/opal/sys/cma.h
}

pre_configure() {
  # openmpi only respects FCFLAGS now
  export FCFLAGS="$FFLAGS"
}

post_install() {
  vlicense LICENSE
}

libopenmpi_package() {
  short_desc+=" - runtime libraries"
  pkg_install() {
    vmove "usr/lib/*.so.*"
  }
}

openmpi-devel_package() {
  unset depends
  depends+=" libevent-devel"
  depends+=" libhwloc-devel"
  depends+=" libopenmpi-${version}_$revision"
  depends+=" zlib-devel"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove usr/share/man/man3
    vmove "usr/lib/*.so"
    if [[ -z "$CROSS_BUILD" ]]; then
      vmove "usr/lib/*.mod"
    fi
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

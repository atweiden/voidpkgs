maintainer="nox"
pkgname="btcd"
version=0.22.0beta
revision=1
short_desc="Alternative full node Bitcoin implementation written in Go"
tags="btcsuite"
homepage="https://github.com/btcsuite/btcd"
license="ISC"
changelog="https://github.com/btcsuite/btcd/raw/master/CHANGES"
distfiles+=" https://github.com/btcsuite/btcd/releases/download/v${version%beta}-beta/$pkgname-source-v${version%beta}-beta.tar.gz"
distfiles+=" https://github.com/btcsuite/btcd/releases/download/v${version%beta}-beta/vendor.tar.gz"
checksum+=" ea6372c5ed290bd06506dc61cc1fe05caa890f59562e7decc5eb20ffd1f1aa15"
checksum+=" 6bcca6b3ae493b5c913ada467c501f8f20d6241e75eaa5c310babdf054243e63"
wrksrc="$pkgname-v${version%beta}-beta"
create_wrksrc="yes"
build_style="go"
go_import_path="github.com/btcsuite/btcd"
go_mod_mode="vendor"
go_package+=" $go_import_path"
go_package+=" $go_import_path/cmd/addblock"
go_package+=" $go_import_path/cmd/btcctl"
go_package+=" $go_import_path/cmd/findcheckpoint"
go_package+=" $go_import_path/cmd/gencerts"
go_ldflags="-s -w -buildid="

export CGO_ENABLED=0
export GOFLAGS="-trimpath"

do_configure() {
  # upstream ships required dependencies
  ln -s "$wrksrc/vendor" "$GOPATH"
}

pre_install() {
  # prepend btc to unqualified binaries
  for _bin in $(find "$GOPATH/bin"  \
                        -mindepth 1 \
                        -maxdepth 1 \
                        -type f ! -name "btc*" -printf '%f\n'); do
    mv "$GOPATH/bin/$_bin" "$GOPATH/bin/btc$_bin"
  done
}

post_install() {
  vlicense LICENSE
  vdoc CHANGES
  vdoc README.md
  vdoc sample-btcd.conf
  vcopy docs "usr/share/doc/$pkgname"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

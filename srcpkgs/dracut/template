maintainer="nox"
pkgname="dracut"
version=050
revision=7
short_desc="Low-level tool for generating an initramfs/initrd image"
depends+=" bash"
depends+=" coreutils"
depends+=" cpio"
depends+=" eudev"
depends+=" gzip"
depends+=" kmod>=3.7"
depends+=" kpartx"
depends+=" util-linux"
makedepends="libkmod-devel"
case "$XBPS_TARGET_MACHINE" in
  *-musl)
    makedepends+=" musl-fts-devel"
    ;;
esac
hostmakedepends+=" asciidoc"
hostmakedepends+=" pkg-config"
homepage="http://www.kernel.org/pub/linux/utils/boot/dracut/dracut.html"
license="GPL-2.0-or-later, LGPL-2.0-or-later"
distfiles="https://github.com/dracutdevs/dracut/archive/$version.tar.gz>$pkgname-$version.tar.gz"
checksum="f9dbf18597e5929221365964293212c8c9ffb7d84529c5a338c834ecab06e333"
conf_files="/etc/dracut.conf"
build_style="configure"
configure_args+=" --prefix=/usr"
configure_args+=" --sysconfdir=/etc"
make_dirs+=" /etc/dracut.conf.d 0755 root root"
make_dirs+=" /usr/lib/dracut/dracut.conf.d 0755 root root"
subpackages="dracut-network"

case "$XBPS_TARGET_MACHINE" in
  # archs supported by dracut for EFI bundle
  i686*|x86_64*)
    _efi_bundle=1
    subpackages+=" dracut-uefi"
  ;;
esac

do_build() {
  case "$XBPS_TARGET_MACHINE" in
    *-musl)
      make "$makejobs" LDLIBS="-lfts"
      ;;
  esac
}

do_check() {
  # requires the distfile to be a git repository
  :
}

post_install() {
  # kernel hooks
  vinstall "$FILESDIR/kernel-hook-postinst" 755 etc/kernel.d/post-install 20-dracut
  vinstall "$FILESDIR/kernel-hook-postrm" 755 etc/kernel.d/post-remove 20-dracut

  if [[ -n "$_efi_bundle" ]]; then
    vinstall "$FILESDIR/dracut-uefi-hook.confd" 644 etc/default dracut-uefi-hook
    vinstall "$FILESDIR/kernel-uefi-hook-postinst" 755 etc/kernel.d/post-install 20-dracut-uefi
    vinstall "$FILESDIR/kernel-uefi-hook-postrm" 755 etc/kernel.d/post-remove 20-dracut-uefi
  fi

  # we don't need the systemd stuff
  rm -rf "$DESTDIR/usr/lib/dracut/modules.d"/*systemd*
  rm -f "$DESTDIR/usr/share/man/man8"/*.service.*
  rm -rf "$DESTDIR/usr/lib/kernel"
}

dracut-network_package() {
  unset depends
  depends+=" dhclient"
  depends+=" dracut-${version}_$revision"
  short_desc+=" - network modules"
  archs="noarch"
  pkg_install() {
    for f in 40network \
             90livenet \
             95fcoe \
             95iscsi \
             95nbd \
             95nfs \
             95zfcp \
             95znet; do
      vmove "usr/lib/dracut/modules.d/$f"
    done
  }
}

dracut-uefi_package() {
  unset depends
  depends+=" binutils"
  depends+=" dracut>=${version}_$revision"
  depends+=" gummiboot"
  short_desc+=" - UEFI bundle hook"
  conf_files="/etc/default/dracut-uefi-hook"
  pkg_install() {
    vmove etc/kernel.d/post-install/20-dracut-uefi
    vmove etc/kernel.d/post-remove/20-dracut-uefi
    vmove etc/default/dracut-uefi-hook
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

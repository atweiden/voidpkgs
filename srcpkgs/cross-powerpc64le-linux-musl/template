_binutils_version=2.32
_gcc_version=8.3.0
_musl_version=1.1.22
_linux_version=4.19

_triplet="powerpc64le-linux-musl"
_sysroot="/usr/$_triplet"

maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="cross-$_triplet"
version=0.30
revision=5
short_desc="Cross toolchain for powerpc64le with musl"
archs+=" ppc64le"
archs+=" x86_64*"
depends="$pkgname-libc-${version}_$revision"
makedepends+=" gmp-devel"
makedepends+=" isl15-devel"
makedepends+=" libmpc-devel"
makedepends+=" mpfr-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" flex"
hostmakedepends+=" gcc-ada"
hostmakedepends+=" libada-devel"
hostmakedepends+=" perl"
homepage="https://www.voidlinux.org/"
license="GPL-2.0-or-later, GPL-3.0-or-later, MIT"
distfiles+=" $GNU_SITE/binutils/binutils-$_binutils_version.tar.xz"
distfiles+=" $GNU_SITE/gcc/gcc-$_gcc_version/gcc-$_gcc_version.tar.xz"
distfiles+=" http://www.musl-libc.org/releases/musl-$_musl_version.tar.gz"
distfiles+=" $KERNEL_SITE/kernel/v4.x/linux-$_linux_version.tar.xz"
checksum+=" 0ab6c55dd86a92ed561972ba15b9b70a8b9f75557f896446c82e8b36e473ee04"
checksum+=" 64baadfe6cc0f4947a84cb12d7f0dfaf45bb58b7e92461639596c21e02d97d2c"
checksum+=" 8b0941a48d2f980fd7036cfbd24aa1d414f03d9a0652ecbd5ec5c7ff1bee29e3"
checksum+=" 0c68f5655528aed4f99dae71a5b259edc93239fa899e2df79c055275c21749a1"
create_wrksrc="yes"
lib32disabled="yes"
nocross="yes"
nopie="yes"
nodebug="yes"
nostrip_files+=" libcaf_single.a"
nostrip_files+=" libgcc.a"
nostrip_files+=" libgcc_eh.a"
nostrip_files+=" libgcov.a"
nostrip_files+=" libgnarl.a"
nostrip_files+=" libgnarl_pic.a"
nostrip_files+=" libgnat.a"
nostrip_files+=" libgnat_pic.a"

_apply_patch() {
  local args
  local pname
  args="$1"
  pname="$(basename $2)"
  if ! [[ -f ".${pname}_done" ]]; then
    patch -N $args -i "$2"
    touch ".${pname}_done"
  fi
}

_binutils_build() {
  local _args

  [[ -f "$wrksrc/.binutils_build_done" ]] \
    && return 0

  cd "$wrksrc"
  msg_normal "Building cross binutils bootstrap\n"

  ! [[ -d "binutils-build" ]] \
    && mkdir binutils-build
  cd binutils-build

  _args+=" --disable-multilib"
  _args+=" --disable-nls"
  _args+=" --disable-shared"
  _args+=" --disable-werror"
  _args+=" --prefix=/usr"
  _args+=" --target=$_triplet"
  _args+=" --with-sysroot=$_sysroot"
  _args+=" --with-system-zlib"

  "../binutils-$_binutils_version/configure" $_args

  make configure-host
  make "$makejobs"
  make install

  touch "$wrksrc/.binutils_build_done"
}

_gcc_bootstrap() {
  local _args

  [[ -f "$wrksrc/.gcc_bootstrap_done" ]] \
    && return 0

  cd "$wrksrc/gcc-$_gcc_version"
  _apply_patch -p0 "$FILESDIR/fix-cxxflags-passing.patch"
  _apply_patch -p0 "$FILESDIR/musl-ada.patch"
  _apply_patch -p0 "$FILESDIR/0010-ldbl128-config.patch"
  _apply_patch -p0 "$FILESDIR/ppc64-pure64.patch"
  _apply_patch -p0 "$FILESDIR/libgcc-musl-ldbl128-config.patch"
  _apply_patch -p1 "$FILESDIR/libgnarl-musl.patch"

  sed \
    -i \
    -e 's/lib64/lib/' \
    gcc/config/rs6000/linux64.h

  # remove with 9.1
  sed \
    -i \
    -e 's/ \-D__gnu_linux__//' \
    gcc/config/rs6000/sysv4.h

  msg_normal "Building cross gcc bootstrap\n"

  ! [[ -d "../gcc-bootstrap" ]] \
    && mkdir ../gcc-bootstrap
  cd ../gcc-bootstrap
  export ac_cv_c_compiler_gnu="yes"

  _args+=" --disable-libatomic"
  _args+=" --disable-libgomp"
  _args+=" --disable-libmudflap"
  _args+=" --disable-libquadmath"
  _args+=" --disable-libssp"
  _args+=" --disable-multilib"
  _args+=" --disable-nls"
  _args+=" --disable-shared"
  _args+=" --disable-symvers"
  _args+=" --disable-threads"
  _args+=" --enable-decimal-float=no"
  _args+=" --enable-languages=c"
  _args+=" --enable-secureplt"
  _args+=" --enable-targets=powerpcle-linux"
  _args+=" --prefix=/usr"
  _args+=" --target=$_triplet"
  _args+=" --with-abi=elfv2"
  _args+=" --with-newlib"
  _args+=" --with-sysroot=$_sysroot"
  _args+=" libat_cv_have_ifunc=no"

  "../gcc-$_gcc_version/configure" $_args

  make "$makejobs"
  make install

  touch "$wrksrc/.gcc_bootstrap_done"
}

_linux_headers() {
  [[ -f "$wrksrc/.linux_build_done" ]] \
    && return 0

  cd "$wrksrc"
  msg_normal "Building Linux API headers\n"

  cd "linux-$_linux_version"

  for f in "$XBPS_SRCPKGDIR/kernel-libc-headers/patches"/*.patch; do
    _apply_patch -p0 "$f"
  done

  make \
    ARCH="powerpc" \
    headers_check
  make \
    ARCH="powerpc" \
    INSTALL_HDR_PATH="$_sysroot/usr" \
    headers_install

  touch "$wrksrc/.linux_build_done"
}

_musl_build() {
  [[ -f "$wrksrc/.musl_build_done" ]] \
    && return 0

  cd "$wrksrc/musl-$_musl_version"

  _apply_patch -p0 "$FILESDIR/ppc64-vrregset-t-fix-layout.patch"
  _apply_patch -p0 "$FILESDIR/ppc64-vrregset-t-vrregs-fix.patch"

  msg_normal "Building cross musl libc\n"

  AR="$_triplet-ar" \
  AS="$_triplet-as" \
  CC="$_triplet-gcc" \
  CFLAGS="-Os -pipe $_archflags" \
  LD="$_triplet-ld" \
  RANLIB="$_triplet-ranlib" \
    ./configure --prefix="/usr"

  make "$makejobs"
  make \
    DESTDIR="$_sysroot" \
    install

  touch "$wrksrc/.musl_build_done"
}

_gcc_build() {
  local _args
  [[ -f "$wrksrc/.gcc_build_done" ]] \
    && return 0

  cd "$wrksrc"
  msg_normal "Building cross gcc final\n"

  ! [[ -d "gcc-build" ]] \
    && mkdir gcc-build
  cd gcc-build

  _args+=" --disable-libmudflap"
  _args+=" --disable-libquadmath"
  _args+=" --disable-libsanitizer"
  _args+=" --disable-multilib"
  _args+=" --disable-symvers"
  _args+=" --disable-vtable-verify"
  _args+=" --enable-decimal-float=no"
  _args+=" --enable-default-pie"
  _args+=" --enable-default-ssp"
  _args+=" --enable-languages=c,ada,c++,fortran,lto"
  _args+=" --enable-libada"
  _args+=" --enable-lto"
  _args+=" --enable-secureplt"
  _args+=" --enable-shared"
  _args+=" --enable-targets=powerpcle-linux"
  _args+=" --libexecdir=/usr/lib"
  _args+=" --prefix=/usr"
  _args+=" --target=$_triplet"
  _args+=" --with-abi=elfv2"
  _args+=" --with-sysroot=$_sysroot"
  _args+=" libat_cv_have_ifunc=no"

  "../gcc-$_gcc_version/configure" $_args

  make "$makejobs"

  touch "$wrksrc/.gcc_build_done"
}

do_build() {
  # ensure we use sane environment
  unset AR
  unset AS
  unset CC
  unset CFLAGS
  unset CPP
  unset CPPFLAGS
  unset CXX
  unset CXXFLAGS
  unset LD
  unset LDFLAGS
  unset NM
  unset OBJDUMP
  unset RANLIB
  unset READELF
  export CFLAGS="-Os -pipe -fPIC"
  export CXXFLAGS="-Os -pipe -fPIC"

  for f in include \
           lib \
           libexec \
           bin \
           sbin; do
    if ! [[ -d "$_sysroot/usr/$f" ]]; then
      mkdir -p "$_sysroot/usr/$f"
    fi
    if ! [[ -h "$_sysroot/$f" ]]; then
      ln -sfr "$_sysroot/usr/$f" "$_sysroot/$f"
    fi
  done

  _binutils_build
  _gcc_bootstrap
  _linux_headers
  _musl_build
  _gcc_build
}

do_install() {
  for f in include \
           lib \
           libexec \
           bin \
           sbin; do
    if ! [[ -d "$DESTDIR/$_sysroot/usr/$f" ]]; then
      mkdir -p "$DESTDIR/$_sysroot/usr/$f"
    fi
    if ! [[ -h "$DESTDIR/$_sysroot/$f" ]]; then
      ln -sfr "$DESTDIR/$_sysroot/usr/$f" "$DESTDIR/$_sysroot/$f"
    fi
  done

  # install linux API headers
  cd "$wrksrc/linux-$_linux_version"
  make \
    ARCH="powerpc" \
    INSTALL_HDR_PATH="$DESTDIR/$_sysroot/usr" \
    headers_install
  rm -f $(find "$DESTDIR/$_sysroot/usr/include" -name .install -or -name ..install.cmd)
  rm -rf "$DESTDIR/$_sysroot/usr/include/drm"

  # install cross binutils
  cd "$wrksrc/binutils-build"
  make \
    DESTDIR="$DESTDIR" \
    install

  # install cross gcc
  cd "$wrksrc/gcc-build"
  make \
    DESTDIR="$DESTDIR" \
    install

  # move libcc1.so* to the sysroot
  mv "$DESTDIR/usr/lib"/libcc1.so* "$DESTDIR/$_sysroot/usr/lib"

  # install musl libc for target
  cd "$wrksrc/musl-$_musl_version"
  make \
    DESTDIR="$DESTDIR/$_sysroot" \
    install

  # remove useless headers
  rm -rf "$DESTDIR/usr/lib/gcc/$_triplet"/*/include-fixed/

  # make ld-musl-powerpc64le.so.1 symlink relative to cwd
  cd "$DESTDIR/$_sysroot/usr/lib"
  ln -sf libc.so ld-musl-powerpc64le.so.1

  # symlinks for gnarl and gnat shared libraries
  _majorver="${_gcc_version%.*.*}"
  _adalib="usr/lib/gcc/$_triplet/$_gcc_version/adalib"
  mv -v "$DESTDIR/$_adalib/libgnarl-$_majorver.so" "$DESTDIR/$_sysroot/usr/lib"
  mv -v "$DESTDIR/$_adalib/libgnat-$_majorver.so" "$DESTDIR/$_sysroot/usr/lib"
  ln -svf "libgnarl-$_majorver.so" libgnarl.so
  ln -svf "libgnat-$_majorver.so" libgnat.so
  rm -vf "$DESTDIR/$_adalib"/libgna{rl,t}.so

  # remove unnecessary stuff
  rm -f "$DESTDIR/usr"/lib*/libiberty.a
  rm -rf "$DESTDIR/usr/share"
  rm -rf "$DESTDIR/$_sysroot"/{etc,var}
  rm -rf "$DESTDIR/$_sysroot/usr"/{sbin,share,libexec}
  rm -f "$DESTDIR/$_sysroot/libexec"
  rm -f "$DESTDIR/$_sysroot/lib"/*.py
  rm -f "$DESTDIR/$_sysroot"/{sbin,lib}
}

do_clean() {
  # remove temporary stuff from masterdir
  rm -rf "$_sysroot"
  rm -f "/usr/bin"/$_triplet*
  rm -rf "/usr/lib/gcc/$_triplet"
  rm -rf "/usr/libexec/gcc/$_triplet"
}

cross-powerpc64le-linux-musl-libc_package() {
  short_desc+=" - libc files"
  nostrip="yes"
  noverifyrdeps="yes"
  noshlibprovides="yes"
  pkg_install() {
    vmove "$_sysroot"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

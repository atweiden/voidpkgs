maintainer="nox"
_triplet="arm-none-eabi"
pkgname="cross-$_triplet-libstdc++"
version=9.3.0
revision=1
short_desc="GNU Compiler Collection - Standard C++ Library"
depends="cross-arm-none-eabi-gcc"
makedepends+=" gmp-devel"
makedepends+=" isl15-devel"
makedepends+=" libmpc-devel"
makedepends+=" mpfr-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" autoconf"
hostmakedepends+=" automake"
hostmakedepends+=" bison"
hostmakedepends+=" cross-arm-none-eabi-binutils"
hostmakedepends+=" cross-arm-none-eabi-gcc"
hostmakedepends+=" cross-arm-none-eabi-newlib"
hostmakedepends+=" flex"
hostmakedepends+=" perl"
homepage="https://gcc.gnu.org"
license="GPL-3.0-or-later"
distfiles="$GNU_SITE/gcc/gcc-$version/gcc-$version.tar.xz"
checksum="71e197867611f6054aa1119b13a0c0abac12834765fe2d81f35ac57f84f742d1"
wrksrc="gcc-$version"
# gnu-configure implicitly passes stuff we don't want
build_style="configure"
configure_args=" --disable-libstdcxx-pch"
configure_args=" --disable-libstdcxx-threads"
configure_args=" --disable-nls"
configure_args=" --disable-shared"
configure_args=" --disable-tls"
configure_args=" --disable-werror"
configure_args=" --enable-multilib"
configure_args=" --host=$_triplet"
configure_args=" --libdir=/usr/$_triplet/lib"
configure_args=" --prefix=/usr/$_triplet"
configure_args=" --target=$_triplet"
configure_args=" --with-gnu-ld"
configure_args=" --with-gxx-include-dir=/usr/$_triplet/include/$version"
configure_args=" --with-newlib"
configure_args=" --with-python-dir=share/gcc-$_triplet"
make_build_args="INHIBIT_LIBC_CFLAGS='-DUSE_TM_CLONE_REGISTRY=0'"
nocross="yes"
nopie="yes"
nostrip="yes"

post_extract() {
  mkdir -p build-{regular,nano}
}

do_configure() {
  export CC="arm-none-eabi-gcc"
  export CXX="arm-none-eabi-g++"
  export CPP="arm-none-eabi-cpp"
  export AR="arm-none-eabi-ar"
  export AS="arm-none-eabi-as"

  pushd build-regular
  export CFLAGS="-g -O2 -ffunction-sections -fdata-sections"
  export CXXFLAGS="-g -O2 -ffunction-sections -fdata-sections"
  ../libstdc++-v3/configure $configure_args
  popd

  pushd build-nano
  export CFLAGS="-g -Os -ffunction-sections -fdata-sections -fno-exceptions"
  export CXXFLAGS="-g -Os -ffunction-sections -fdata-sections -fno-exceptions"
  ../libstdc++-v3/configure $configure_args
  popd
}

do_build() {
  unset AR
  unset AS
  unset CC
  unset CFLAGS
  unset CPP
  unset CXX
  unset CXXFLAGS

  pushd build-regular
  make "$makejobs" $make_build_args
  popd

  pushd build-nano
  make "$makejobs" $make_build_args
  popd
}

do_install() {
  local dir
  local from_dir
  local multilibs
  local to_dir

  pushd build-regular
  make DESTDIR="$DESTDIR" install
  popd

  pushd build-nano
  mkdir -p dest-nano
  make DESTDIR="$(pwd)/dest-nano" install
  # only install the static libs for nano, no headers
  multilibs=( "$("$_triplet-gcc" -print-multi-lib 2>/dev/null)" )
  for multilib in "${multilibs[@]}"; do
    dir="${multilib%%;*}"
    from_dir="dest-nano/usr/$_triplet/lib/$dir"
    to_dir="$DESTDIR/usr/$_triplet/lib/$dir"
    cp -f "$from_dir/libstdc++.a" "$to_dir/libstdc++_nano.a"
    cp -f "$from_dir/libsupc++.a" "$to_dir/libsupc++_nano.a"
  done
  popd
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

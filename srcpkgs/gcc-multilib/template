_triplet="x86_64-unknown-linux-gnu"
_majorver=10.2

maintainer="nox"
pkgname="gcc-multilib"
version=$_majorver.1pre1
revision=1
short_desc="GNU Compiler Collection (multilib files)"
archs="x86_64"
homepage="http://gcc.gnu.org"
license="GFDL-1.2-or-later, GPL-3.0-or-later, LGPL-2.1-or-later"
depends+=" gcc>=$_majorver"
depends+=" glibc-devel-32bit"
depends+=" libatomic-devel-32bit>=$_majorver"
depends+=" libgcc-32bit>=$_majorver"
depends+=" libgomp-devel-32bit>=$_majorver"
depends+=" libitm-devel-32bit>=$_majorver"
depends+=" libsanitizer-devel-32bit>=$_majorver"
depends+=" libssp-devel-32bit>=$_majorver"
depends+=" libvtv-devel-32bit>=$_majorver"
depends+=" zlib-32bit"
makedepends+=" glibc-32bit"
makedepends+=" glibc-devel-32bit"
makedepends+=" isl15-devel"
makedepends+=" libfl-devel"
makedepends+=" libmpc-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" flex"
hostmakedepends+=" perl"
hostmakedepends+=" tar"
hostmakedepends+=" unzip"
hostmakedepends+=" zip"
distfiles="https://dev.alpinelinux.org/~nenolod/gcc-${version/pre/_pre}.tar.xz"
checksum="772cfd5d30eb9cc5a996fec9ba8cdcb45d37df1c9b5770610103b814b732c590"
wrksrc="gcc-${version/pre/_pre}"
patch_args="-Np0"
replaces="libmpx-devel-32bit>=0"

do_configure() {
  ldconfig &>/dev/null

  # _FORTIFY_SOURCE needs an optimization level
  sed \
    -i \
    -e "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" \
    {gcc,libiberty}/configure
  # hack! some configure tests for header files using "$CPP $CPPFLAGS"
  sed \
    -i \
    -e "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" \
    {libiberty,gcc}/configure

  ./configure                      \
    --disable-bootstrap            \
    --disable-libstdcxx-pch        \
    --disable-rpath                \
    --disable-target-libiberty     \
    --enable-__cxa_atexit          \
    --enable-checking=release      \
    --enable-clocale="gnu"         \
    --enable-default-pie           \
    --enable-default-ssp           \
    --enable-gnu-unique-object     \
    --enable-languages="c,c++,lto" \
    --enable-libstdcxx-time        \
    --enable-linker-build-id       \
    --enable-lto                   \
    --enable-multilib              \
    --enable-shared                \
    --enable-threads=posix         \
    --enable-tls                   \
    --infodir="/usr/share/info"    \
    --libdir="/usr/lib"            \
    --libexecdir="/usr/lib"        \
    --mandir="/usr/share/man"      \
    --prefix="/usr"                \
    --with-isl                     \
    --with-linker-hash-style="gnu" \
    --with-system-zlib
}

do_build() {
  make "$makejobs"
}

do_install() {
  local _pc_triplet
  local _version

  # install to a tempdir and then only copy relevant files
  cd "$wrksrc"
  make DESTDIR="$wrksrc/$pkgname-build" install

  # make version a symlink of major version to make all versions from
  # the same series work automagically
  vmkdir "usr/include/c++/$_majorver/$_triplet"
  vmkdir "usr/lib/gcc/$_triplet/$_majorver"

  _pc_triplet="x86_64-pc-linux-gnu"
  _version="${version%pre1}"

  cp -a "$wrksrc/$pkgname-build/usr/lib/gcc/$_pc_triplet/$_version/32" \
    "$DESTDIR/usr/lib/gcc/$_triplet/$_majorver/"
  cp -a "$wrksrc/$pkgname-build/usr/include/c++/$_version/$_pc_triplet/32" \
    "$DESTDIR/usr/include/c++/$_majorver/$_triplet"

  vinstall "$wrksrc/host-$_pc_triplet/gcc/specs" 644 "usr/lib/gcc/$_triplet/$_majorver"
}

gcc-objc-multilib_package() {
  unset depends
  depends+=" gcc-multilib>=$_majorver"
  depends+=" gcc-objc>=$_majorver"
  depends+=" libobjc-devel-32bit>=$_majorver"
  short_desc="GNU Objective-C compiler (multilib files)"
  build_style="meta"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

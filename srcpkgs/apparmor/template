maintainer="nox"
pkgname="apparmor"
version=2.13.4
revision=6
_vimver=82
short_desc="Mandatory access control to restrict programs"
depends+=" libapparmor"
depends+=" python3"
depends+=" runit-void-apparmor"
makedepends+=" perl"
makedepends+=" python3-devel"
checkdepends="dejagnu"
hostmakedepends+=" autoconf"
hostmakedepends+=" automake"
hostmakedepends+=" bison"
hostmakedepends+=" flex"
hostmakedepends+=" gettext"
hostmakedepends+=" libtool"
hostmakedepends+=" python3"
hostmakedepends+=" swig"
hostmakedepends+=" which"
homepage="https://gitlab.com/apparmor/apparmor"
license="GPL-2.0-only, LGPL-2.1-only"
distfiles="https://gitlab.com/apparmor/apparmor/-/archive/v$version/apparmor-v$version.tar.gz"
checksum="4f45e5a5de59b72039c6cf218bb61cb4fc42eeb7f47ca109a58238896394a33b"
conf_files+=" /etc/apparmor.d/local/*"
conf_files+=" /etc/apparmor/*"
wrksrc="$pkgname-v$version"
patch_args="-Np1"
build_wrksrc="libraries/libapparmor"
build_style="gnu-configure"
make_dirs="/etc/apparmor.d/disable 0755 root root"

post_patch() {
  # Make.rules feeds some system headers to the C preprocessor to produce
  # lists of capability and address-family names that, respectively,
  # populate `parser/cap_names.h` and `parser/af_names.h`. The escaping
  # backslash in the '\#include" directives here is seen by the
  # preprocessor, causing it to skip the system headers and produce empty
  # files. Removing the backslash ensures correct behavior.
  vsed \
    -i \
    -e 's/\\#include </#include </' \
    "$wrksrc/common/Make.rules"
}

if [[ -z "$CROSS_BUILD" ]]; then
  configure_args+=" --with-perl"
  configure_args+=" --with-python"
fi

pre_configure() {
  autoreconf -if
}

pre_build() {
  # replace release profiles with our own
  cd "$wrksrc"

  # put in place our own profiles
  cp "$FILESDIR/profiles"/* profiles/apparmor.d/
}

post_build() {
  cd "$wrksrc"
  sed \
    -i \
    -e 's#$(DESTDIR)/sbin#$(DESTDIR)/usr/bin#g' \
    parser/Makefile
  make "$makejobs" -C binutils
  make "$makejobs" -C utils
  make "$makejobs" -C parser
  make "$makejobs" -C profiles
}

post_install() {
  cd "$wrksrc"

  make \
    DESTDIR="$DESTDIR" \
    install -C binutils
  make \
    BINDIR="$DESTDIR/usr/bin" \
    DESTDIR="$DESTDIR" \
    install -C utils
  make \
    APPARMOR_BIN_PREFIX="$DESTDIR/usr/lib/apparmor" \
    DESTDIR="$DESTDIR" \
    SBINDIR="$DESTDIR/usr/bin" \
    USR_SBINDIR="$DESTDIR/usr/bin" \
    install -C parser
  make \
    DESTDIR="$DESTDIR" \
    install -C profiles

  # put vim syntax in the correct place
  mkdir -p "$DESTDIR/usr/share/vim/vim$_vimver/syntax"
  mv \
    "$DESTDIR/usr/share/apparmor/apparmor.vim" \
    "$DESTDIR/usr/share/vim/vim$_vimver/syntax"

  # requires perl bindings not generated when cross-compiling
  if [[ -n "$CROSS_BUILD" ]]; then
    rm -f "$DESTDIR/usr/bin/aa-notify"
  fi
}

apparmor-vim_package() {
  short_desc+=" - Vim syntax"
  depends="vim"
  pkg_install() {
    vmove "usr/share/vim/vim$_vimver/syntax/apparmor.vim"
    vmove usr/share/man/man5/apparmor.vim.5
  }
}

libapparmor_package() {
  short_desc+=" - library"
  pkg_install() {
    vmove "usr/lib/libapparmor.so*"
    if [[ -z "$CROSS_BUILD" ]]; then
      vmove usr/lib/perl5
      vmove "$py3_sitelib/LibAppArmor*"
    fi
    vmove usr/share/man/man2
    vmove usr/share/man/man3
  }
}

libapparmor-devel_package() {
  short_desc+=" - library - development files"
  depends="lib$sourcepkg-${version}_$revision"
  pkg_install() {
    vmove usr/include
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
    vmove usr/lib/pkgconfig
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="nfs-utils"
version=2.5.2
revision=1
short_desc="Network File System utilities"
depends="rpcbind"
makedepends+=" device-mapper-devel"
makedepends+=" keyutils-devel"
makedepends+=" libblkid-devel"
makedepends+=" libcap-devel"
makedepends+=" libevent-devel"
makedepends+=" libmount-devel"
makedepends+=" libtirpc-devel"
makedepends+=" mit-krb5-devel"
makedepends+=" sqlite-devel"
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  makedepends+=" musl-legacy-compat"
fi
hostmakedepends+=" libtirpc-devel"
hostmakedepends+=" pkg-config"
hostmakedepends+=" rpcsvc-proto"
homepage="https://www.linux-nfs.org/"
license="GPL-2.0-or-later"
distfiles="$KERNEL_SITE/utils/nfs-utils/$version/$pkgname-$version.tar.xz"
checksum="d493b81c9d3ffce5d10af701a63ed2b8a21768c23da4a2eceb4d708aea65d9de"
conf_files="/etc/exports"
patch_args="-Np1"
build_style="gnu-configure"
configure_args+=" --disable-static"
configure_args+=" --enable-gss"
configure_args+=" --enable-ipv6"
configure_args+=" --enable-libmount-mount"
configure_args+=" --enable-nfsv4"
configure_args+=" --enable-svcgss"
configure_args+=" --enable-uuid"
configure_args+=" --with-krb5=$XBPS_CROSS_BASE"
configure_args+=" --with-statduser=nobody"
configure_args+=" --with-statedir=/var/lib/nfs"
configure_args+=" --with-tirpcinclude=$XBPS_CROSS_BASE/usr/include/tirpc"
configure_args+=" --without-tcp-wrappers"
python_version=3
make_dirs+=" /etc/exports.d 0750 root root"
make_dirs+=" /var/lib/nfs/rpc_pipefs 0755 root root"
make_dirs+=" /var/lib/nfs/sm 0750 root root"
make_dirs+=" /var/lib/nfs/v4recovery 0755 root root"
replaces="rpcgen>=0"

pre_configure() {
  case "$XBPS_TARGET_MACHINE" in
    *-musl)
      vsed \
        -i \
        -e 's/__res_querydomain/res_querydomain/g' \
        configure*
      ;;
  esac
}

post_install() {
  mv "$DESTDIR/sbin"/* "$DESTDIR/usr/bin"

  # conf files
  vconf "$FILESDIR/exports"

  # runit services
  vsv nfs-server
  vsv rpcblkmapd
  vsv rpcgssd
  vsv rpcsvcgssd
  vsv statd

  # replacement scripts
  rm -rf "$DESTDIR/usr/bin/start-statd"
  vbin "$FILESDIR/start-statd"

  rm -rf "$DESTDIR/var/lib/nfs"
}

libnfsidmap_package() {
  short_desc="Library to help mapping IDs, mainly for NFSv4"
  conf_files="/etc/idmapd.conf"
  pkg_install() {
    vsv rpcidmapd
    vconf "$FILESDIR/idmapd.conf"
    vmove usr/bin/rpc.idmapd
    vmove usr/lib/libnfsidmap*
    vmove usr/share/man/man5/idmapd.conf.5
    vmove usr/share/man/man8/rpc.idmapd.8
    vmove usr/share/man/man8/idmapd.8
  }
}

libnfsidmap-devel_package() {
  short_desc="Library to help mapping IDs, mainly for NFSv4 - development files"
  depends="libnfsidmap-${version}_$revision"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove usr/share/man/man3
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

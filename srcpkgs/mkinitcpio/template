maintainer="nox"
pkgname="mkinitcpio"
version=37
revision=1
short_desc="Next generation of initramfs creation"
depends+=" bash"
depends+=" bsdtar"
depends+=" busybox-static"
checkdepends+=" bats-assert"
checkdepends+=" busybox-static"
checkdepends+=" lz4"
checkdepends+=" lzop"
checkdepends+=" xz"
checkdepends+=" zstd"
hostmakedepends="asciidoc"
homepage="https://gitlab.archlinux.org/archlinux/mkinitcpio/mkinitcpio"
license="GPL-2.0-only"
changelog="https://gitlab.archlinux.org/archlinux/mkinitcpio/mkinitcpio/-/raw/master/CHANGELOG"
distfiles="https://gitlab.archlinux.org/archlinux/mkinitcpio/mkinitcpio/-/archive/v$version/$pkgname-v$version.tar.gz"
checksum="904126c8f917285309ea8bfa9ea3344720602bd66a1eaea32f74744de72756b6"
conf_files="/etc/mkinitcpio.conf"
build_style="gnu-makefile"
make_dirs="/etc/mkinitcpio.conf.d 0755 root root"
alternatives+=" initramfs:/etc/kernel.d/post-install/20-initramfs:/usr/libexec/mkinitcpio/kernel-hook-postinst"
alternatives+=" initramfs:/etc/kernel.d/post-remove/20-initramfs:/usr/libexec/mkinitcpio/kernel-hook-postrm"
replaces="mkinitcpio-udev>=0"

post_install() {
  # install udev hooks
  vinstall "$FILESDIR/udev_hook" 644 usr/lib/initcpio/hooks udev
  vinstall "$FILESDIR/udev_install" 644 usr/lib/initcpio/install udev

  # install udev rule used by both lvm2 and encrypt hook
  vinstall "$FILESDIR/11-dm-initramfs.rules" 644 usr/lib/initcpio/udev

  # remove unneeded systemd bits
  rm -rf "$DESTDIR/usr/lib/kernel"
  rm -rf "$DESTDIR/usr/lib/systemd"
  rm -rf "$DESTDIR/usr/lib/initcpio/install"/sd*
  rm -rf "$DESTDIR/usr/lib/tmpfiles.d"

  # remove unneeded pacman hooks
  rm -rf "$DESTDIR/usr/share/libalpm"

  ln -s /usr/bin/busybox.static "$DESTDIR/usr/lib/initcpio/busybox"

  vinstall "$FILESDIR/kernel-hook-postinst" 755 usr/libexec/mkinitcpio
  vinstall "$FILESDIR/kernel-hook-postrm" 755 usr/libexec/mkinitcpio
}

mkinitcpio-lvm2_package() {
  unset depends
  depends+=" $sourcepkg>=${version}_$revision"
  depends+=" lvm2"
  depends+=" thin-provisioning-tools"
  short_desc+=" - lvm2 support"
  pkg_install() {
    vinstall "$FILESDIR/lvm2_hook" 644 usr/lib/initcpio/hooks lvm2
    vinstall "$FILESDIR/lvm2_install" 644 usr/lib/initcpio/install lvm2
    vinstall "$FILESDIR/69-dm-lvm-metad.rules" 644 usr/lib/initcpio/udev
  }
}

mkinitcpio-encrypt_package() {
  unset depends
  depends+=" $sourcepkg>=${version}_$revision"
  depends+=" cryptsetup"
  short_desc+=" - encrypt support"
  pkg_install() {
    vinstall "$FILESDIR/encrypt_hook" 644 usr/lib/initcpio/hooks encrypt
    vinstall "$FILESDIR/encrypt_install" 644 usr/lib/initcpio/install encrypt
  }
}

mkinitcpio-mdadm_package() {
  unset depends
  depends+=" $sourcepkg>=${version}_$revision"
  depends+=" mdadm"
  short_desc+=" - mdadm support"
  pkg_install() {
    vinstall "$FILESDIR/mdadm_hook" 644 usr/lib/initcpio/hooks mdadm
    vinstall "$FILESDIR/mdadm_install" 644 usr/lib/initcpio/install mdadm
    vinstall "$FILESDIR/mdadm_udev_install" 644 usr/lib/initcpio/install mdadm_udev
  }
}

mkinitcpio-xbps_package() {
  unset depends
  depends+=" $sourcepkg>=${version}_$revision"
  depends+=" xbps"
  short_desc+=" - xbps support"
  pkg_install() {
    vinstall "$FILESDIR/xbps_install" 644 usr/lib/initcpio/install xbps
  }
}

mkinitcpio-zfs_package() {
  unset depends
  depends+=" $sourcepkg>=${version}_$revision"
  depends+=" zfs"
  short_desc+=" - ZFS support"
  pkg_install() {
    vinstall "$FILESDIR/zfs_hook" 644 usr/lib/initcpio/hooks zfs
    vinstall "$FILESDIR/zfs_install" 644 usr/lib/initcpio/install zfs
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

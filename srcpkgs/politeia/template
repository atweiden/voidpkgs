maintainer="nox"
pkgname="politeia"
version=1.4.0
revision=1
short_desc="Decred proposal system"
depends="politeia-tools"
tags="decred"
homepage="https://github.com/decred/politeia"
license="ISC"
distfiles="https://github.com/decred/politeia/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="c52dcb74dae6c03ec1f238200dae159be9d60d38dc53b8fc22a99c98f851c0cc"
build_style="go"
go_import_path="github.com/decred/politeia"
go_package+=" $go_import_path/politeiad"
go_package+=" $go_import_path/politeiad/cmd/politeia"
go_package+=" $go_import_path/politeiawww"
go_package+=" $go_import_path/politeiawww/cmd/cmswww"
go_package+=" $go_import_path/politeiawww/cmd/pictl"
go_package+=" $go_import_path/politeiawww/cmd/politeiaverify"
go_package+=" $go_import_path/politeiawww/cmd/politeiavoter"
go_package+=" $go_import_path/politeiawww/cmd/politeiawww_dbutil"
go_build_tags+=" netgo"
go_build_tags+=" osusergo"
_go_flags+=" -trimpath"
_go_flags+=" -mod=readonly"
_go_flags+=" -modcacherw"
go_ldflags+=" -buildid="
go_ldflags+=" -X github.com/decred/politeia/util/version.BuildMetadata="
go_ldflags+=" -X github.com/decred/politeia/util/version.PreRelease="
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  _go_flags+=" -buildmode=pie"
  go_ldflags+=" -extldflags=-static-pie"
  go_ldflags+=" -linkmode=external"
fi

pre_build() {
  export GOFLAGS="$_go_flags"
}

post_install() {
  local _cmd
  local _docdir

  _docdir="usr/share/doc/$pkgname"

  vlicense LICENSE
  vdoc README.md
  vcopy "docs/*" "$_docdir"

  _cmd="cmswww"
  vinstall "politeiawww/cmd/$_cmd/README.md" 644 "$_docdir/$_cmd"
  vsconf "politeiawww/cmd/$_cmd/sample-$_cmd.conf"

  _cmd="pictl"
  vinstall "politeiawww/cmd/$_cmd/README.md" 644 "$_docdir/$_cmd"
  vsconf "politeiawww/cmd/$_cmd/sample-$_cmd.conf"

  _cmd="politeiad"
  vinstall "$_cmd/README.md" 644 "$_docdir/$_cmd"
  vsconf "$_cmd/sample-$_cmd.conf"

  _cmd="politeiaverify"
  vinstall "politeiawww/cmd/$_cmd/README.md" 644 "$_docdir/$_cmd"

  _cmd="politeiavoter"
  vinstall "politeiawww/cmd/$_cmd/README.md" 644 "$_docdir/$_cmd"
  vsconf "$FILESDIR/sample-$_cmd.conf"

  _cmd="politeiawww"
  vinstall "$_cmd/README.md" 644 "$_docdir/$_cmd"
  vsconf "$_cmd/sample-$_cmd.conf" 644 "$_docdir"

  _cmd="politeiawww_dbutil"
  vinstall "politeiawww/cmd/$_cmd/README.md" 644 "$_docdir/$_cmd"
}

politeia-tools_package() {
  short_desc+=" - client tools"
  pkg_install() {
    local _cmd
    local _docdir
    local _eggdir

    _docdir="usr/share/doc/$sourcepkg"
    _eggdir="usr/share/examples/$sourcepkg"

    _cmd="pictl"
    vmove "usr/bin/$_cmd"
    vmove "$_docdir/$_cmd"
    vmove "$_eggdir/sample-$_cmd.conf"

    _cmd="politeiaverify"
    vmove "usr/bin/$_cmd"
    vmove "$_docdir/$_cmd"

    _cmd="politeiavoter"
    vmove "usr/bin/$_cmd"
    vmove "$_docdir/$_cmd"
    vmove "$_eggdir/sample-$_cmd.conf"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

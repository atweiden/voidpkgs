maintainer="nox"
pkgname="sqlite"
version=3.38.0
revision=1
_amalgamationver="$(printf "%d%02d%02d00\n" ${version//./ })"
short_desc="SQL Database Engine in a C Library"
makedepends+=" libedit-devel"
makedepends+=" zlib-devel"
homepage="https://sqlite.org/"
license="Public Domain"
changelog="https://www.sqlite.org/releaselog/${version//./_}.html"
distfiles="https://sqlite.org/2022/sqlite-autoconf-$_amalgamationver.tar.gz"
checksum="1c76e25dc63d9f3935e0f406aec520a33ee77cf54ea5147dffe1fae8369eff68"
wrksrc="sqlite-autoconf-$_amalgamationver"
build_style="gnu-configure"
configure_args+=" --enable-dynamic-extensions"
configure_args+=" --enable-fts5"
configure_args+=" --enable-threadsafe"
disable_parallel_build="yes"

CFLAGS="-DSQLITE_ENABLE_BATCH_ATOMIC_WRITE=1 \
 -DSQLITE_ENABLE_COLUMN_METADATA \
 -DSQLITE_ENABLE_DBSTAT_VTAB \
 -DSQLITE_ENABLE_DESERIALIZE \
 -DSQLITE_ENABLE_FTS3 \
 -DSQLITE_ENABLE_FTS3_PARENTHESIS \
 -DSQLITE_ENABLE_FTS3_TOKENIZER=1 \
 -DSQLITE_ENABLE_FTS4 \
 -DSQLITE_ENABLE_UNLOCK_NOTIFY \
 -DSQLITE_SECURE_DELETE"

# explicitly enable fdatasync
CFLAGS+=" -DHAVE_FDATASYNC"

# explicitly set byte order to avoid bad autodetection macros
case "$XBPS_TARGET_ENDIAN" in
  le)
    CFLAGS+=" -DSHA3_BYTEORDER=1234"
    CFLAGS+=" -DSQLITE_BYTEORDER=1234"
    ;;
  be)
    CFLAGS+=" -DSHA3_BYTEORDER=4321"
    CFLAGS+=" -DSQLITE_BYTEORDER=4321"
    ;;
esac

pre_configure() {
  vsed \
    -i \
    -e 's/ -ltinfo//g' \
    configure
}

sqlite-devel_package() {
  depends="sqlite>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

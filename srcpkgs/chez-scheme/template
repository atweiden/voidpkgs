maintainer="nox"
pkgname="chez-scheme"
version=10.0.0
revision=1
short_desc="Compiler and run-time system for R6RS Scheme"
makedepends+=" liblz4-devel"
makedepends+=" ncurses-devel"
makedepends+=" zlib-devel"
hostmakedepends="$makedepends"
homepage="https://scheme.com/"
license="Apache-2.0"
distfiles="https://github.com/cisco/ChezScheme/releases/download/v$version/csv$version.tar.gz>$pkgname-$version.tar.gz"
checksum="d37199012b5ed1985c4069d6a87ff18e5e1f5a2df27e402991faf45dc4f2232c"
build_style="gnu-makefile"
configure_args="--disable-x11"
make_build_target="kernel"
alternatives+=" scheme:scheme.1:/usr/share/man/man1/chez-scheme.1"
alternatives+=" scheme:scheme:/usr/bin/chez-scheme"

case "$XBPS_TARGET_MACHINE" in
  i686*)
    _target="ti3le"
    ;;
  x86_64*)
    _target="ta6le"
    ;;
  arm*)
    _target="tarm32le"
    ;;
  aarch64*)
    _target="tarm64le"
    ;;
  riscv64*)
    _target="trv64le"
    ;;
  *)
    # portable bytecode
    _target="pb"
    ;;
esac

pre_configure() {
  # since version 10, chez only ships portable boot files, so first
  # bootstrap with --pb, then build the boot files for the target
  #
  # the kernel is (cross-)compiled in do_build
  if [[ "$_target" == "pb" ]]; then return; fi
  ./configure \
    --pb \
    AR="ar" \
    CC="$BUILD_CC" \
    CFLAGS="$BUILD_CFLAGS" \
    LD="$BUILD_LD" \
    LZ4="-llz4" \
    ZLIB="-lz"
  make "$makejobs" bootquick XM="$_target"
}

do_configure() {
  local target
  case "$_target" in
    pb)
      target="--pb"
      ;;
    *)
      target="--machine=$_target"
      ;;
  esac
  ./configure \
    "$target" \
    --installman="/usr/share/man" \
    --installprefix="/usr" \
    --installschemename="chez-scheme" \
    --nogzip-man-pages \
    --temproot="$DESTDIR" \
    LZ4="-llz4" \
    ZLIB="-lz"
}

post_install() {
  # replace duplicate file by symlink
  ln -sf \
    scheme.boot \
    "$DESTDIR/usr/lib"/csv*/*/scheme-script.boot
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

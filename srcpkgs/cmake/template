maintainer="nox"
pkgname="cmake"
version=3.21.1
revision=1
short_desc="Cross-platform, open-source build system"
makedepends+=" expat-devel"
makedepends+=" jsoncpp-devel"
makedepends+=" libarchive-devel"
makedepends+=" libcurl-devel"
makedepends+=" libuv-devel"
makedepends+=" ncurses-devel"
makedepends+=" rhash-devel"
checkdepends+=" git"
checkdepends+=" pax"
checkdepends+=" pkg-config"
hostmakedepends+=" gcc-fortran"
hostmakedepends+=" python3-Sphinx"
homepage="https://www.cmake.org"
license="BSD-3-Clause, ICU"
distfiles="https://www.cmake.org/files/v${version%.*}/$pkgname-$version.tar.gz"
checksum="fac3915171d4dff25913975d712f76e69aef44bf738ba7b976793a458b4cfed4"
build_style="cmake"
configure_args+=" -DCMAKE_DOC_DIR=/share/doc/cmake"
configure_args+=" -DCMAKE_MAN_DIR=/share/man"
configure_args+=" -DCMAKE_SKIP_BOOTSTRAP_TEST=1"
configure_args+=" -DCMAKE_SKIP_RPATH=1"
configure_args+=" -DCMAKE_USE_SYSTEM_LIBRARIES=ON"
configure_args+=" -DKWSYS_LFS_WORKS=1"
configure_args+=" -DSPHINX_MAN=1"
make_check_target="test"
replaces="cmake-bootstrap>=0"

if [[ -n "$CROSS_BUILD" ]]; then
  unset configure_args
  hostmakedepends+=" cmake"
fi

pre_configure() {
  local f
  ! [[ "$CROSS_BUILD" ]] \
    || return 0
  mkdir -p build
  cd build
  ../bootstrap \
    --generator="Ninja" \
    --no-system-libs \
    ${XBPS_MAKEJOBS:+--parallel=$XBPS_MAKEJOBS}
  # make sure build directory is clean
  for f in *; do
    if [[ "$f" != "Bootstrap.cmk" ]]; then
      return 1
    fi
  done
  cd "$wrksrc"
  PATH="$wrksrc/build/Bootstrap.cmk:$PATH"
}

post_install() {
  vlicense Copyright.txt
  vlicense Utilities/KWIML/Copyright.txt KWIML-Copyright.txt
  sed \
    -n \
    -e '/Copyright/,/authorization[.]/p' \
    Source/CursesDialog/form/fld_arg.c > \
    fld.LICENSE
  vlicense fld.LICENSE
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="binutils"
version=2.29.1
revision=3
short_desc="GNU binary utilities"
homepage="http://www.gnu.org/software/binutils/"
license="GPL-3"
distfiles="$GNU_SITE/$pkgname/$pkgname-$version.tar.bz2"
checksum="1509dff41369fb70aed23682351b663b56db894034773e6dbf7d5d6071fc55cc"
bootstrap="yes"

if [[ -n "$CHROOT_READY" ]]; then
  hostmakedepends+=" flex"
  hostmakedepends+=" perl"
  checkdepends="bc"
else
  unset XBPS_CHECK_PKGS
  XBPS_TRIPLET="x86_64-unknown-linux-gnu"
fi

makedepends="zlib-devel"

pre_configure() {
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" libiberty/configure
  # drop bashism
  sed -i -e 's,source,\.,g' ld/scripttempl/elf32msp430.sc
}

do_configure() {
  if [[ "$XBPS_TARGET_MACHINE" == "x86_64" ]]; then
    unset CONFIGFLAG
    CONFIGFLAG+=" --enable-64-bit-bfd"
    CONFIGFLAG+=" --enable-multilib"
  fi

  if [[ -n "$CROSS_BUILD" ]]; then
    # do not use configure_args or build_style=gnu-configure
    # avoid passing --with-sysroot to $XBPS_CROSS_BASE
    unset CONFIGFLAG
    CONFIGFLAG+=" --host=$XBPS_CROSS_TRIPLET"
    CONFIGFLAG+=" --with-build-sysroot=$XBPS_CROSS_BASE"
  fi

  if [[ "$XBPS_TARGET_MACHINE" == "mipsel-musl" ]]; then
    CONFIGFLAG+=" --with-float=soft"
    CONFIGFLAG+=" --without-fp"
  fi

  if [[ "${XBPS_TARGET_MACHINE%-musl}" == "x86_64" ]]; then
    CONFIGFLAG+=" --enable-targets=x86_64-pep"
  fi

  ./configure \
    $CONFIGFLAG \
    --build="$XBPS_TRIPLET" \
    --disable-nls \
    --disable-shared \
    --disable-werror \
    --enable-deterministic-archives \
    --enable-gold \
    --enable-ld=default \
    --enable-plugins \
    --enable-secureplt \
    --enable-threads \
    --prefix=/usr \
    --with-mmap
}

do_build() {
  make "$makejobs"

  # rebuild libiberty.a with -fPIC
  cp -a libiberty libiberty-pic
  make -C libiberty-pic clean
  make CFLAGS="$CFLAGS -fPIC" -C libiberty-pic

  # rebuild libbfd.a with -fPIC
  cp -a bfd bfd-pic
  make -C bfd-pic clean
  # visibility=hidden to prevent 3rd-party shared libraries from exporting
  # bfd non-stable API
  make CFLAGS="$CFLAGS -fPIC -fvisibility=hidden" -C bfd-pic

  # rebuild libopcodes.a with -fPIC
  cp -a opcodes opcodes-pic
  make -C opcodes-pic clean
  make CFLAGS="$CFLAGS -fPIC" -C opcodes-pic
}

do_check() {
  make -k check
}

do_install() {
  if [[ "$XBPS_TARGET_MACHINE" == "x86_64" ]]; then
    mkdir -p "$DESTDIR/usr/lib"
    cd "$DESTDIR/usr"
    ln -s lib lib64
    cd "$wrksrc"
  fi
  make DESTDIR="$DESTDIR" tooldir="/usr" install

  # remove ld (hardlink) and make a symlink to ld.bfd
  rm -f "$DESTDIR/usr/bin/ld"
  ln -sfr "$DESTDIR/usr/bin/ld.bfd" "$DESTDIR/usr/bin/ld"

  # add some useful headers
  install -m 644 include/libiberty.h "$DESTDIR/usr/include"
  install -m 644 include/demangle.h "$DESTDIR/usr/include"

  # install libraries rebuilt with -fPIC
  install -m 644 libiberty-pic/libiberty.a "$DESTDIR/usr/lib"
  install -m 644 bfd-pic/libbfd.a "$DESTDIR/usr/lib"
  install -m 644 opcodes-pic/libopcodes.a "$DESTDIR/usr/lib"

  # remove these symlinks, they are not ABI stable
  # programs should compile static to the .a file
  rm -f "$DESTDIR/usr/lib"/lib{bfd,opcodes}.so
  echo "INPUT ( /usr/lib/libbfd.a -liberty -lz )" >"$DESTDIR/usr/lib/libbfd.so"
  echo "INPUT ( /usr/lib/libopcodes.a -lbfd )" >"$DESTDIR/usr/lib/libopcodes.so"

  # remove info file that conflicts with autoconf
  rm -f "$DESTDIR/usr/share/info/standards.info"
  rm -f "$DESTDIR/usr/lib64"

  # remove useless manpages
  for f in dlltool \
           nlmconv \
           windres \
           windmc; do
    rm -f "$DESTDIR/usr/share/man/man1/$f.1"
  done

  # create triplet symlinks
  for f in "$DESTDIR/usr/bin"/*; do
    ln -s "${f##*/}" "$DESTDIR/usr/bin/${XBPS_CROSS_TRIPLET:-$XBPS_TRIPLET}-${f##*/}"
  done
}

binutils-devel_package() {
  depends="zlib-devel"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

# this pkg must be synchronized with "srcpkgs/python3-tkinter"
maintainer="nox"
pkgname="python3"
version=3.9.4
revision=1
short_desc="Python programming language (${version%.*} series)"
depends="ca-certificates"
checkdepends+=" ca-certificates"
checkdepends+=" iana-etc"
checkdepends+=" tzdata"
makedepends+=" bzip2-devel"
makedepends+=" expat-devel"
makedepends+=" gdbm-devel"
makedepends+=" libffi-devel"
makedepends+=" liblzma-devel"
makedepends+=" openssl-devel"
makedepends+=" readline-devel"
makedepends+=" sqlite-devel"
makedepends+=" zlib-devel"
hostmakedepends="pkgconf"
homepage="https://www.python.org"
license="Python-2.0"
distfiles="https://www.python.org/ftp/python/$version/Python-$version.tar.xz"
checksum="4b0e6644a76f8df864ae24ac500a51bbf68bd098f6a173e27d3b61cdca9aa134"
wrksrc="Python-$version"
alternatives+=" python:2to3:/usr/bin/2to3-${version%.*}"
alternatives+=" python:idle:/usr/bin/idle${version%.*}"
alternatives+=" python:pydoc:/usr/bin/pydoc${version%.*}"
alternatives+=" python:python.1:/usr/share/man/man1/python${version%.*}.1"
alternatives+=" python:python:/usr/bin/python${version%.*}"
pycompile_dirs="usr/lib/python${version%.*}"

pre_configure() {
  # ensure that internal copies of expat and libffi are not used
  rm -r Modules/expat
  rm -r Modules/_ctypes/{darwin,libffi}*
}

do_configure() {
  local _args
  unset AR
  unset AS
  unset CC
  unset CPP
  unset CXX
  unset GCC
  unset LD
  unset RANLIB
  if [[ -n "$CROSS_BUILD" ]]; then
    mkdir -p host-build
    cd host-build
    env -i PATH="$PATH" CFLAGS="-Os" ../configure
    env -i PATH="$PATH" make "$makejobs" python
    mkdir -p ../hostpython
    mv python ../hostpython
    cd ..
    patch -Np0 -i "$FILESDIR/cross.patch"
    _args="--build=${XBPS_MACHINE%%-musl}"
  fi
  ./configure \
    $_args \
    $configure_args \
    --enable-ipv6 \
    --enable-loadable-sqlite-extensions \
    --enable-shared \
    --with-computed-gotos \
    --with-dbmliborder=gdbm:ndbm \
    --with-system-expat \
    --with-system-ffi \
    --with-threads \
    --without-ensurepip
}

do_build() {
  export PATH="$PATH:$wrksrc/hostpython"
  make "$makejobs"
}

do_check() {
  local opts

  # tests ignored due to expected failures:
  # test_chown_*: relies on sane group membership not found in xbps-src
  # test_getspnam_exception: expects shadow passwd db unreadable by user
  # test_find_library_with_*: expects functionality patched out for musl
  # test_openssl_version: LibreSSL version and OpenSSL_version_num disagree
  # test_shared_ciphers: SSL advertises unexpected ciphers
  #
  # test ignored due to failures for unknown reasons:
  # test_session*: anomalies in SSL session handling
  # test_localtime_daylight_*_dst_true: overflow in datetime.time.mktime
  opts+=" -i test_chown_*"
  opts+=" -i test_find_library_with_*"
  opts+=" -i test_getspnam_exception"
  opts+=" -i test_localtime_daylight_*_dst_true"
  opts+=" -i test_openssl_version"
  opts+=" -i test_session*"
  opts+=" -i test_shared_ciphers"

  make "$makejobs" EXTRATESTOPTS="$opts" quicktest
}

do_install() {
  export PATH="$PATH:$wrksrc/hostpython"
  make DESTDIR="$DESTDIR" install maninstall
  vlicense LICENSE

  rm -f "$DESTDIR/usr/bin/2to3"
  # remove files that belong to python3-tkinter and idle-python3
  rm -f "$DESTDIR/usr/bin"/idle3*
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/idlelib"
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/tkinter"
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/turtledemo"
  rm -f "$DESTDIR/usr/lib/python${version%.*}/turtle.py"
  # remove test module and tests that fail to be byte-compiled
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/test"
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/lib2to3/tests"
  # remove references to the install(1) wrapper
  sed \
    -i \
    -e "s,$XBPS_WRAPPERDIR,/usr/bin,g" \
    "$DESTDIR/usr/lib/python${version%.*}"/_sysconfigdata_*_*.py \
    "$DESTDIR/usr/lib/python${version%.*}"/config-${version%.*}*/Makefile
  if [[ -n "$CROSS_BUILD" ]]; then
    # remove references to cross toolchain
    sed \
      -i \
      -e "s/$XBPS_CROSS_TRIPLET-//g" \
      "$DESTDIR/usr/lib/python${version%.*}"/_sysconfigdata_*_*.py \
      "$DESTDIR/usr/lib/python${version%.*}"/config-${version%.*}*/Makefile
    sed \
      -i \
      -e "s,$XBPS_CROSS_BASE,,g" \
      "$DESTDIR/usr/bin/python${version%.*}-config"
  fi
}

python3-devel_package() {
  short_desc+=" - development files"
  depends="$sourcepkg-${version}_$revision"
  pkg_install() {
    vmove "usr/bin/python*-config"
    vmove usr/lib/pkgconfig
    vmove usr/include
    mv \
      "$DESTDIR/usr/lib/python${version%.*}"/config-${version%.*}*/libpython${version%.*}*.a \
      "$PKGDESTDIR/usr/lib"
    mkdir -p "$DESTDIR/usr/include/python${version%.*}"
    mv \
      "$PKGDESTDIR/usr/include/python${version%.*}/pyconfig.h" \
      "$DESTDIR/usr/include/python${version%.*}"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

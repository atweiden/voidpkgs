# this pkg must be synchronized with "srcpkgs/python3-tkinter"
maintainer="nox"
pkgname="python3"
version=3.12.2
revision=1
_bluez="bluez-5.64"
short_desc="Python programming language (${version%.*} series)"
depends="ca-certificates"
checkdepends+=" ca-certificates"
checkdepends+=" iana-etc"
makedepends+=" bzip2-devel"
makedepends+=" expat-devel"
makedepends+=" gdbm-devel"
makedepends+=" libffi-devel"
makedepends+=" liblzma-devel"
makedepends+=" openssl-devel"
makedepends+=" readline-devel"
makedepends+=" sqlite-devel"
makedepends+=" zlib-devel"
if [[ "$XBPS_TARGET_LIBC" == "glibc" ]]; then
  makedepends+=" libxcrypt-devel"
fi
hostmakedepends="pkgconf"
homepage="https://www.python.org"
license="Python-2.0"
distfiles+=" https://www.python.org/ftp/python/${version%rc*}/Python-$version.tar.xz"
distfiles+=" $KERNEL_SITE/bluetooth/$_bluez.tar.xz"
checksum+=" be28112dac813d2053545c14bf13a16401a21877f1a69eb6ea5d84c4a0f3d870"
checksum+=" ae437e65b6b3070c198bc5b0109fe9cdeb9eaa387380e2072f9de65fe8a1de34"
skip_extraction="$_bluez.tar.xz"
build_style="gnu-configure"
configure_args+=" --enable-ipv6"
configure_args+=" --enable-loadable-sqlite-extensions"
configure_args+=" --enable-optimizations"
configure_args+=" --enable-shared"
configure_args+=" --with-computed-gotos"
configure_args+=" --with-dbmliborder=gdbm:ndbm"
configure_args+=" --with-system-expat"
configure_args+=" --with-system-ffi"
configure_args+=" --without-ensurepip"
configure_args+=" ac_cv_working_tzset=yes"
alternatives+=" python:2to3:/usr/bin/2to3-${version%.*}"
alternatives+=" python:idle:/usr/bin/idle${version%.*}"
alternatives+=" python:pydoc:/usr/bin/pydoc${version%.*}"
alternatives+=" python:python.1:/usr/share/man/man1/python${version%.*}.1"
alternatives+=" python:python:/usr/bin/python${version%.*}"
pycompile_dirs="usr/lib/python${version%.*}"

if [[ -n "$CROSS_BUILD" ]]; then
  hostmakedepends+=" python3"
  configure_args+=" --with-build-python=python$py3_ver"
  configure_args+=" ac_cv_broken_sem_getvalue=no"
fi

post_extract() {
  # ensure that the internal copy of expat is not used
  rm -r Modules/expat

  # extract bluetooth headers
  local _srcdistdir="$XBPS_SRCDISTDIR/$sourcepkg-$version"
  mkdir External
  bsdtar \
    -C External \
    --strip-components=1 \
    -x \
    -f "$_srcdistdir/$_bluez.tar.xz" \
    "$_bluez/lib"/*.h
  mv External/lib External/bluetooth
}

post_patch() {
  if [[ -n "$CROSS_BUILD" ]]; then
    patch -Np1 -i "$FILESDIR/cross.patch"
  fi
}

do_configure() {
  # if these are set, distutils will default to cc and attempt to pass
  # `-R<path>` to the compiler for every compiled extension that sets
  # an rpath rather than the '-Wl,-R<path>' argument that gcc requires
  unset AR
  unset AS
  unset CC
  unset CPP
  unset CXX
  unset GCC
  unset LD
  unset RANLIB

  # make sure configure can find bluetooth headers
  CFLAGS+=" -I./External"
  CPPFLAGS+=" -I./External"

  ./configure $configure_args
}

do_check() {
  local opts

  # relies on sane group membership not found in xbps-src
  opts="-i test_chown_*"
  # expects shadow passwd db unreadable by user
  opts+=" -i test_getspnam_exception"
  # expects functionality patched out for musl
  opts+=" -i test_find_library_with_*"
  # SSL advertises unexpected ciphers
  opts+=" -i test_shared_ciphers"
  # requires in-tree expat, which we removed
  opts+=" -i test_freeze_simple_script"
  # anomalies in SSL session handling
  opts+=" -i test_session*"
  # overflow in datetime.time.mktime
  opts+=" -i test_localtime_daylight_*_dst_true"
  # https://github.com/python/cpython/issues/115133
  opts+=" -i test_simple_xml"

  if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
    # musl doesn't work with locales
    opts+=" -i test_locale* -i test_c_locale* -i test__locale"
    opts+=" -i test_fpathconf"
  else
    # ctypes libm imports misbehave with glibc linker scripts
    opts+=" -i test_issue18060_*"
  fi

  make "$makejobs" EXTRATESTOPTS="$opts" quicktest
}

do_install() {
  make DESTDIR="$DESTDIR" install maninstall

  # put the license in the usual location and remove from the libdir to
  # prevent the XBPS trigger from attempting to byte-compile it
  vlicense LICENSE
  rm "$DESTDIR/$py3_lib/LICENSE.txt"

  rm -f "$DESTDIR/usr/bin/2to3"
  # remove files that belong to python3-tkinter and idle-python3
  rm -f "$DESTDIR/usr/bin"/idle3*
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/idlelib"
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/tkinter"
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/turtledemo"
  rm -f "$DESTDIR/usr/lib/python${version%.*}/turtle.py"
  # remove test module and tests that fail to be byte-compiled
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/test"
  rm -rf "$DESTDIR/usr/lib/python${version%.*}/lib2to3/tests"
  # remove references to the install(1) wrapper
  sed \
    -i \
    -e "s,$XBPS_WRAPPERDIR,/usr/bin,g" \
    "$DESTDIR/usr/lib/python${version%.*}"/_sysconfigdata_*_*.py \
    "$DESTDIR/usr/lib/python${version%.*}"/config-${version%.*}*/Makefile
  if [[ -n "$CROSS_BUILD" ]]; then
    # remove references to cross toolchain
    sed \
      -i \
      -e "s/$XBPS_CROSS_TRIPLET-//g" \
      "$DESTDIR/usr/lib/python${version%.*}"/_sysconfigdata_*_*.py \
      "$DESTDIR/usr/lib/python${version%.*}"/config-${version%.*}*/Makefile
    sed \
      -i \
      -e "s,$XBPS_CROSS_BASE,,g" \
      "$DESTDIR/usr/bin/python${version%.*}-config"
  fi
  sed \
    -i \
    -e "s,-fdebug-prefix-map=[^[:space:]]*=[.],," \
    -e "s,-ffile-prefix-map=[^[:space:]]*=[.],," \
    -e "s,-I./External,," \
    "$DESTDIR/usr/bin/python${version%.*}-config" \
    "$DESTDIR/usr/lib/python${version%.*}/_sysconfigdata_*_*.py" \
    "$DESTDIR/usr/lib/python${version%.*}/config-${version%.*}*/Makefile"

  # https://peps.python.org/pep-0668/
  vinstall "$FILESDIR/EXTERNALLY-MANAGED" 644 "usr/lib/python${version%.*}"
}

python3-devel_package() {
  short_desc+=" - development files"
  depends="$sourcepkg-${version}_$revision"
  pkg_install() {
    vmove "usr/bin/python*-config"
    vmove usr/lib/pkgconfig
    vmove usr/include
    mv \
      "$DESTDIR/usr/lib/python${version%.*}"/config-${version%.*}*/libpython${version%.*}*.a \
      "$PKGDESTDIR/usr/lib"
    mkdir -p "$DESTDIR/usr/include/python${version%.*}"
    mv \
      "$PKGDESTDIR/usr/include/python${version%.*}/pyconfig.h" \
      "$DESTDIR/usr/include/python${version%.*}"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

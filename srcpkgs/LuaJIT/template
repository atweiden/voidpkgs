maintainer="nox"
pkgname="LuaJIT"
version=2.1.0beta3
revision=1
_so_version=2.1.0
_dist_version="$_so_version-beta3"
short_desc="Just-In-Time Compiler for Lua"
hostmakedepends="lua52-BitOp"
homepage="http://www.luajit.org"
license="MIT"
distfiles="http://luajit.org/download/$pkgname-$_dist_version.tar.gz"
checksum="1ad2e34b111c802f9d0cdf019e986909123237a28c746b21295b63c9e785d9c3"
wrksrc="$pkgname-$_dist_version"
build_options="lua52compat"
# cross-compilation may require `cross-i686-linux-musl`, see: upstream
nocross="yes"

# the ppc64 patchset subtly breaks ppc, needs investigation; for now
# apply patches conditionally, separately for ppc64 and ppc
post_patch() {
  local patchdir

  case "$XBPS_TARGET_MACHINE" in
    ppc64*)
      patchdir="ppc64"
      ;;
    ppc*)
      patchdir="ppc"
      ;;
    *)
      return
      ;;
  esac

  for i in "$FILESDIR/patches/$patchdir"/*.patch; do
    msg_normal "patching: $i\n"
    patch -sNp0 -i $i
  done
}

do_build() {
  local _cflags
  local _ldflags
  local _xcflags

  _cflags="$CFLAGS"
  _ldflags="$LDFLAGS"

  if [[ -n "$build_option_lua52compat" ]]; then
    _xcflags="XCFLAGS=-DLUAJIT_ENABLE_LUA52COMPAT"
  fi


  unset CFLAGS
  unset LDFLAGS
  make \
    "$makejobs" \
    HOST_CC="cc" \
    HOST_CFLAGS="$XBPS_CFLAGS" \
    HOST_LDFLAGS="$XBPS_LDFLAGS" \
    HOST_LUA="lua5.2" \
    PREFIX="/usr" \
    TARGET_CFLAGS="$_cflags" \
    TARGET_LDFLAGS="$_ldflags" \
    $_xcflags
}

do_install() {
  make \
    DESTDIR="$DESTDIR" \
    DPREFIX="$DESTDIR/usr" \
    INSTALL_SHARE="$DESTDIR/usr/share" \
    PREFIX="/usr" \
    install

  mv "$DESTDIR/usr/bin"/luajit-* "$DESTDIR/usr/bin/luajit"
  ln -fs "libluajit-5.1.so.$_so_version" "$DESTDIR/usr/lib/libluajit-5.1.so.2"
  vlicense COPYRIGHT
}

LuaJIT-devel_package() {
  depends="$sourcepkg>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

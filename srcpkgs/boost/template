maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="boost"
version=1.68.0
revision=2
short_desc="Free peer-reviewed portable C++ source libraries"
makedepends+=" bzip2-devel"
makedepends+=" icu-devel"
makedepends+=" python-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" bzip2-devel"
hostmakedepends+=" icu-devel"
hostmakedepends+=" python-devel"
homepage="http://www.boost.org/"
license="Boost Software License 1.0"
distfiles="$SOURCEFORGE_SITE/boost/${pkgname}_${version//\./_}.tar.bz2"
checksum="7f6130bc3cf65f56a618888ce9d5ea704fa10b462be126ad053e80e553d6d8b7"
wrksrc="${pkgname}_${version//\./_}"

CXXFLAGS="-std=c++14"

case "$XBPS_TARGET_MACHINE" in
  i686*)
    _abi="sysv"
    _arch="x86"
    _toolset="gcc-i386"
    ;;
  x86_64*)
    _abi="sysv"
    _arch="x86"
    _toolset="gcc-x86_64"
    ;;
  arm*)
    _abi="aapcs"
    _arch="arm"
    _toolset="gcc-arm"
    ;;
  aarch64*)
    _abi="aapcs"
    _arch="arm"
    _toolset="gcc-aarch64"
    ;;
  mips*)
    _abi="o32"
    _arch="mips32r2"
    _toolset="gcc-mips"
    ;;
esac

do_build() {
  echo "using gcc : ${_toolset#gcc-} : $CXX $CXXFLAGS ;" >user-config.jam
  if [[ -n "$CROSS_BUILD" ]]; then
    echo "using python : 2.7 : : $XBPS_CROSS_BASE/usr/include/python2.7 : $XBPS_CROSS_BASE/usr/lib/python2.7 ;" >>user-config.jam
  fi
  ./bootstrap.sh \
    --prefix="$DESTDIR/usr" \
    --with-python="$XBPS_CROSS_BASE/usr/bin/python2" \
    --with-python-root="$XBPS_CROSS_BASE/usr"
  (
  # rebuild bjam for target
  cd tools/build/src/engine
  LIBS="$LDFLAGS" "$wrksrc/bjam" -f build.jam --toolset=cc --toolset-root= -d+2 clean
  LIBS="$LDFLAGS" "$wrksrc/bjam" -f build.jam --toolset=cc --toolset-root= -d+2
  )
  ./bjam \
    abi="$_abi" \
    architecture="$_arch" \
    "$makejobs" \
    --debug-building \
    --toolset="$_toolset" \
    --user-config="$wrksrc/user-config.jam"
}

do_install() {
  # install bjam
  for _b in tools/build/src/engine/bin.*/*; do
    vbin "$_b"
  done

  # install headers/libs
  ./bjam \
    abi="$_abi" \
    architecture="$_arch" \
    --prefix="$DESTDIR/usr" \
    --user-config="$wrksrc/user-config.jam" \
    install

  # install Boost.Build stuff
  vmkdir usr/share/boost-build
  cd "$wrksrc/tools/build" && cp -a . "$DESTDIR/usr/share/boost-build"
  find "$DESTDIR/usr/share/boost-build" -type f -name "*.orig" \
    -exec rm -f '{}' \;
  rm -rf "$DESTDIR/usr/share/boost-build/src/engine/bootstrap"
  rm -rf "$DESTDIR/usr/share/boost-build/src/engine"/bin.*
  ( echo '# System wide configuration file for Boost.Build.' ; \
    echo ; \
    echo 'using gcc ;' ; ) >"$wrksrc/site-config.jam"
  cd "$wrksrc"
  vconf site-config.jam

  # license
  vlicense LICENSE_1_0.txt
}

boost-jam_package() {
  short_desc+=" - Boost.Jam utility"
  depends="boost-build-${version}_$revision"
  pkg_install() {
    vmove usr/bin/bjam
    vmove usr/bin/b2
  }
}

boost-python_package() {
  depends+=" boost-${version}_$revision"
  depends+=" python"
  short_desc+=" - Python bindings"
  pkg_install() {
    vmove "usr/lib/libboost_python*"
  }
}

boost-build_package() {
  noarch="yes"
  conf_files="/etc/site-config.jam"
  short_desc+=" - Boost.Build framework"
  pkg_install() {
    vmove usr/share/boost-build
    vmove etc
  }
}

boost-devel_package() {
  noverifyrdeps="yes"
  depends="boost-${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

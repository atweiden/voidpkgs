maintainer="nox"
pkgname="boost"
version=1.80.0
revision=1
short_desc="Free peer-reviewed portable C++ source libraries"
makedepends+=" bzip2-devel"
makedepends+=" icu-devel"
makedepends+=" liblzma-devel"
makedepends+=" libzstd-devel"
makedepends+=" python3-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" bzip2-devel"
hostmakedepends+=" icu-devel"
hostmakedepends+=" pkg-config"
hostmakedepends+=" python3-devel"
hostmakedepends+=" which"
homepage="https://www.boost.org/"
license="BSL-1.0"
distfiles="https://boostorg.jfrog.io/artifactory/main/release/$version/source/boost_${version//./_}.tar.bz2"
checksum="1e19565d82e43bc59209a168f5ac899d3ba471d55c7610c677d4ccf2c9c500c0"
wrksrc="${pkgname}_${version//\./_}"
python_version=3
replaces+=" boost-python1.72>=0"
replaces+=" boost-python3-1.72>=0"
replaces+=" libboost_atomic1.72>=0"
replaces+=" libboost_chrono1.72>=0"
replaces+=" libboost_container1.72>=0"
replaces+=" libboost_context1.72>=0"
replaces+=" libboost_contract1.72>=0"
replaces+=" libboost_coroutine1.72>=0"
replaces+=" libboost_date_time1.72>=0"
replaces+=" libboost_fiber1.72>=0"
replaces+=" libboost_filesystem1.72>=0"
replaces+=" libboost_graph1.72>=0"
replaces+=" libboost_iostreams1.72>=0"
replaces+=" libboost_locale1.72>=0"
replaces+=" libboost_log1.72>=0"
replaces+=" libboost_log_setup1.72>=0"
replaces+=" libboost_math_c991.72>=0"
replaces+=" libboost_math_c99f1.72>=0"
replaces+=" libboost_math_c99l1.72>=0"
replaces+=" libboost_math_tr11.72>=0"
replaces+=" libboost_math_tr1f1.72>=0"
replaces+=" libboost_math_tr1l1.72>=0"
replaces+=" libboost_prg_exec_monitor1.72>=0"
replaces+=" libboost_program_options1.72>=0"
replaces+=" libboost_random1.72>=0"
replaces+=" libboost_regex1.72>=0"
replaces+=" libboost_serialization1.72>=0"
replaces+=" libboost_stacktrace_addr2line1.72>=0"
replaces+=" libboost_stacktrace_basic1.72>=0"
replaces+=" libboost_stacktrace_noop1.72>=0"
replaces+=" libboost_system1.72>=0"
replaces+=" libboost_thread1.72>=0"
replaces+=" libboost_timer1.72>=0"
replaces+=" libboost_type_erasure1.72>=0"
replaces+=" libboost_unit_test_framework1.72>=0"
replaces+=" libboost_wave1.72>=0"
replaces+=" libboost_wserialization1.72>=0"
subpackages+=" libboost_program_options1.80"
subpackages+=" libboost_math_c99f1.80"
subpackages+=" libboost_stacktrace_basic1.80"
subpackages+=" libboost_stacktrace_noop1.80"
subpackages+=" libboost_iostreams1.80"
subpackages+=" libboost_filesystem1.80"
subpackages+=" libboost_chrono1.80"
subpackages+=" libboost_math_tr1f1.80"
subpackages+=" libboost_wave1.80"
subpackages+=" libboost_graph1.80"
subpackages+=" libboost_locale1.80"
subpackages+=" libboost_regex1.80"
subpackages+=" libboost_fiber1.80"
subpackages+=" libboost_type_erasure1.80"
subpackages+=" libboost_coroutine1.80"
subpackages+=" libboost_atomic1.80"
subpackages+=" libboost_prg_exec_monitor1.80"
subpackages+=" libboost_math_c991.80"
subpackages+=" boost-python3-1.80"
subpackages+=" libboost_log_setup1.80"
subpackages+=" boost-devel"
subpackages+=" libboost_json1.80"
subpackages+=" libboost_timer1.80"
subpackages+=" libboost_system1.80"
subpackages+=" libboost_unit_test_framework1.80"
subpackages+=" libboost_serialization1.80"
subpackages+=" libboost_math_tr11.80"
subpackages+=" boost-build"
subpackages+=" libboost_contract1.80"
subpackages+=" libboost_nowide1.80"
subpackages+=" libboost_date_time1.80"
subpackages+=" libboost_log1.80"
subpackages+=" libboost_random1.80"
subpackages+=" libboost_thread1.80"
subpackages+=" libboost_container1.80"
subpackages+=" boost-jam"
subpackages+=" libboost_wserialization1.80"
subpackages+=" libboost_context1.80"

CXXFLAGS="-std=c++14"

# on glibc ppc, boost.math disables long double stuff because of
# non-ieee754-conforming long double type (IBM double-double)
#
# this does not affect musl (where long double is 64-bit)
case "$XBPS_TARGET_MACHINE" in
  ppc64le|ppc64|ppc|ppcle)
    ;;
  *)
    subpackages+=" libboost_math_c99l1.80"
    subpackages+=" libboost_math_tr1l1.80"
    ;;
esac

if [[ -z "$CROSS_BUILD" ]]; then
  subpackages+=" libboost_stacktrace_addr2line1.80"
fi

case "$XBPS_TARGET_MACHINE" in
  i686*)
    _arch="x86"
    _abi="sysv"
    ;;
  x86_64*)
    _arch="x86"
    _abi="sysv"
    ;;
  arm*)
    _arch="arm"
    _abi="aapcs"
    ;;
  aarch64*)
    _arch="arm"
    _abi="aapcs"
    ;;
  mips*)
    _arch="mips32r2"
    _abi="o32"
    ;;
  ppc*)
    _arch="power"
    _abi="sysv"
    ;;
esac

do_build() {
  CXX="$BUILD_CXX" \
  CXXFLAGS="$BUILD_CXXFLAGS" \
  # bootstrap.sh will reset CXX and CXXFLAGS (L229)
  ./bootstrap.sh \
    --prefix="$DESTDIR/usr" \
    --with-python="/usr/bin/python3" \
    --with-python-root="$XBPS_CROSS_BASE/usr" \
    --with-toolset="gcc"
  # rebuild bjam for target
  (cd tools/build/src/engine
   # toolset gcc will force gcc -x c++ -O2 -s
   # toolset cxx will use CXX and CXXFLAGS
   CXXFLAGS="$CXXFLAGS -fdebug-prefix-map=$PWD=." \
   CXX_VERSION_OPT="--version" ./build.sh cxx)
  cat > user-config.jam <<-__EOF
using gcc : : $CXX : <cxxflags>"$CXXFLAGS" <linkflags>"$LDFLAGS" ;
using python : 2.7 : $XBPS_CROSS_BASE/usr/bin/python2 : $XBPS_CROSS_BASE/usr/include/python2.7 : $XBPS_CROSS_BASE/usr/lib/python2.7 ;
using python : $py3_ver : /usr/bin/python3 : $XBPS_CROSS_BASE/$py3_inc : $XBPS_CROSS_BASE/$py3_lib ;

__EOF
  ./b2 \
    abi="$_abi" \
    architecture="$_arch" \
    link="shared,static" \
    python="$py3_ver" \
    runtime-link="shared" \
    threading="multi" \
    "$makejobs" \
    --user-config="$wrksrc/user-config.jam" \
    --debug-building \
    --toolset="gcc"
}

do_install() {
  # install bjam
  # XXX: make bjam a symlink to b2
  vbin tools/build/src/engine/b2
  ln -sf b2 "$DESTDIR/usr/bin/bjam"

  # install headers/libs
  ./b2 \
    abi="$_abi" \
    architecture="$_arch" \
    link="shared,static" \
    python="$py3_ver" \
    runtime-link="shared" \
    threading="multi" \
    --prefix="$DESTDIR/usr" \
    --user-config="$wrksrc/user-config.jam" \
    install

  # install Boost.Build stuff
  vmkdir usr/share/boost-build
  cd "$wrksrc/tools/build" && cp -a . "$DESTDIR/usr/share/boost-build"
  find "$DESTDIR/usr/share/boost-build" -type f -name "*.orig" \
    -exec rm -f '{}' \;
  rm -rf "$DESTDIR/usr/share/boost-build/src/engine/bootstrap"
  rm -rf "$DESTDIR/usr/share/boost-build/src/engine"/{b2,bjam}
  (echo '# System wide configuration file for Boost.Build.' ; \
   echo ; \
   echo 'using gcc ;' ;) > "$wrksrc/site-config.jam"
  cd "$wrksrc"
  vconf site-config.jam

  # license
  vlicense LICENSE_1_0.txt
}

boost-jam_package() {
  short_desc+=" - Boost.Jam utility"
  depends="boost-build>=${version}_$revision"
  pkg_install() {
    vmove usr/bin/bjam
    vmove usr/bin/b2
  }
}

boost-python3-1.80_package() {
  unset depends
  depends+=" boost"
  depends+=" python3"
  replaces="boost-python3>=0"
  short_desc+=" - Python3 bindings"
  pkg_install() {
    vmove "usr/lib/libboost_python3*.so.*"
  }
}

boost-build_package() {
  conf_files="/etc/site-config.jam"
  short_desc+=" - Boost.Build framework"
  pkg_install() {
    vmove usr/share/boost-build
    vmove etc/site-config.jam
  }
}

boost-devel_package() {
  unset depends
  noverifyrdeps="yes"
  depends+=" boost"
  depends+=" ${subpackages/boost-devel}"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/cmake
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

libboost_atomic1.80_package() {
  depends="boost"
  short_desc+=" - libboost_atomic"
  pkg_install() {
    vmove "usr/lib/libboost_atomic.so.*"
  }
}

libboost_chrono1.80_package() {
  depends="boost"
  short_desc+=" - libboost_chrono"
  pkg_install() {
    vmove "usr/lib/libboost_chrono.so.*"
  }
}

libboost_container1.80_package() {
  depends="boost"
  short_desc+=" - libboost_container"
  pkg_install() {
    vmove "usr/lib/libboost_container.so.*"
  }
}

libboost_context1.80_package() {
  depends="boost"
  short_desc+=" - libboost_context"
  pkg_install() {
    vmove "usr/lib/libboost_context.so.*"
  }
}

libboost_contract1.80_package() {
  depends="boost"
  short_desc+=" - libboost_contract"
  pkg_install() {
    vmove "usr/lib/libboost_contract.so.*"
  }
}

libboost_coroutine1.80_package() {
  depends="boost"
  short_desc+=" - libboost_coroutine"
  pkg_install() {
    vmove "usr/lib/libboost_coroutine.so.*"
  }
}

libboost_date_time1.80_package() {
  depends="boost"
  short_desc+=" - libboost_date_time"
  pkg_install() {
    vmove "usr/lib/libboost_date_time.so.*"
  }
}

libboost_fiber1.80_package() {
  depends="boost"
  short_desc+=" - libboost_fiber"
  pkg_install() {
    vmove "usr/lib/libboost_fiber.so.*"
  }
}

libboost_filesystem1.80_package() {
  depends="boost"
  short_desc+=" - libboost_filesystem"
  pkg_install() {
    vmove "usr/lib/libboost_filesystem.so.*"
  }
}

libboost_graph1.80_package() {
  depends="boost"
  short_desc+=" - libboost_graph"
  pkg_install() {
    vmove "usr/lib/libboost_graph.so.*"
  }
}

libboost_iostreams1.80_package() {
  depends="boost"
  short_desc+=" - libboost_iostreams"
  pkg_install() {
    vmove "usr/lib/libboost_iostreams.so.*"
  }
}

libboost_locale1.80_package() {
  depends="boost"
  short_desc+=" - libboost_locale"
  pkg_install() {
    vmove "usr/lib/libboost_locale.so.*"
  }
}

libboost_log1.80_package() {
  depends="boost"
  short_desc+=" - libboost_log"
  pkg_install() {
    vmove "usr/lib/libboost_log.so.*"
  }
}

libboost_log_setup1.80_package() {
  depends="boost"
  short_desc+=" - libboost_log_setup"
  pkg_install() {
    vmove "usr/lib/libboost_log_setup.so.*"
  }
}

libboost_math_c991.80_package() {
  depends="boost"
  short_desc+=" - libboost_math_c99"
  pkg_install() {
    vmove "usr/lib/libboost_math_c99.so.*"
  }
}

libboost_math_c99f1.80_package() {
  depends="boost"
  short_desc+=" - libboost_math_c99f"
  pkg_install() {
    vmove "usr/lib/libboost_math_c99f.so.*"
  }
}

libboost_math_c99l1.80_package() {
  depends="boost"
  short_desc+=" - libboost_math_c99l"
  pkg_install() {
    vmove "usr/lib/libboost_math_c99l.so.*"
  }
}

libboost_json1.80_package() {
  depends="boost"
  short_desc+=" - libboost_json"
  pkg_install() {
    vmove "usr/lib/libboost_json.so.*"
  }
}

libboost_math_tr11.80_package() {
  depends="boost"
  short_desc+=" - libboost_math_tr1"
  pkg_install() {
    vmove "usr/lib/libboost_math_tr1.so.*"
  }
}

libboost_math_tr1f1.80_package() {
  depends="boost"
  short_desc+=" - libboost_math_tr1f"
  pkg_install() {
    vmove "usr/lib/libboost_math_tr1f.so.*"
  }
}

libboost_math_tr1l1.80_package() {
  depends="boost"
  short_desc+=" - libboost_math_tr1l"
  pkg_install() {
    vmove "usr/lib/libboost_math_tr1l.so.*"
  }
}

libboost_nowide1.80_package() {
  depends="boost"
  short_desc+=" - libboost_nowide"
  pkg_install() {
    vmove "usr/lib/libboost_nowide.so.*"
  }
}

libboost_prg_exec_monitor1.80_package() {
  depends="boost"
  short_desc+=" - libboost_prg_exec_monitor"
  pkg_install() {
    vmove "usr/lib/libboost_prg_exec_monitor.so.*"
  }
}

libboost_program_options1.80_package() {
  depends="boost"
  short_desc+=" - libboost_program_options"
  pkg_install() {
    vmove "usr/lib/libboost_program_options.so.*"
  }
}

libboost_random1.80_package() {
  depends="boost"
  short_desc+=" - libboost_random"
  pkg_install() {
    vmove "usr/lib/libboost_random.so.*"
  }
}

libboost_regex1.80_package() {
  depends="boost"
  short_desc+=" - libboost_regex"
  pkg_install() {
    vmove "usr/lib/libboost_regex.so.*"
  }
}

libboost_serialization1.80_package() {
  depends="boost"
  short_desc+=" - libboost_serialization"
  pkg_install() {
    vmove "usr/lib/libboost_serialization.so.*"
  }
}

libboost_stacktrace_addr2line1.80_package() {
  depends="boost"
  short_desc+=" - libboost_stacktrace_addr2line"
  pkg_install() {
    vmove "usr/lib/libboost_stacktrace_addr2line.so.*"
  }
}

libboost_stacktrace_basic1.80_package() {
  depends="boost"
  short_desc+=" - libboost_stacktrace_basic"
  pkg_install() {
    vmove "usr/lib/libboost_stacktrace_basic.so.*"
  }
}

libboost_stacktrace_noop1.80_package() {
  depends="boost"
  short_desc+=" - libboost_stacktrace_noop"
  pkg_install() {
    vmove "usr/lib/libboost_stacktrace_noop.so.*"
  }
}

libboost_system1.80_package() {
  depends="boost"
  short_desc+=" - libboost_system"
  pkg_install() {
    vmove "usr/lib/libboost_system.so.*"
  }
}

libboost_thread1.80_package() {
  depends="boost"
  short_desc+=" - libboost_thread"
  pkg_install() {
    vmove "usr/lib/libboost_thread.so.*"
  }
}

libboost_timer1.80_package() {
  depends="boost"
  short_desc+=" - libboost_timer"
  pkg_install() {
    vmove "usr/lib/libboost_timer.so.*"
  }
}

libboost_type_erasure1.80_package() {
  depends="boost"
  short_desc+=" - libboost_type_erasure"
  pkg_install() {
    vmove "usr/lib/libboost_type_erasure.so.*"
  }
}

libboost_unit_test_framework1.80_package() {
  depends="boost"
  short_desc+=" - libboost_unit_test_framework"
  pkg_install() {
    vmove "usr/lib/libboost_unit_test_framework.so.*"
  }
}

libboost_wave1.80_package() {
  depends="boost"
  short_desc+=" - libboost_wave"
  pkg_install() {
    vmove "usr/lib/libboost_wave.so.*"
  }
}

libboost_wserialization1.80_package() {
  depends="boost"
  short_desc+=" - libboost_wserialization"
  pkg_install() {
    vmove "usr/lib/libboost_wserialization.so.*"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

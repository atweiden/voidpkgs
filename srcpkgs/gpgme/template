maintainer="nox"
pkgname="gpgme"
version=1.13.1
revision=2
short_desc="GnuPG Made Easy"
depends="gnupg2"
makedepends="libassuan-devel"
hostmakedepends+=" gnupg2"
hostmakedepends+=" pkg-config"
homepage="https://www.gnupg.org/software/gpgme/index.html"
license="GPL-2.0-or-later, LGPL-2.1-or-later"
distfiles="https://www.gnupg.org/ftp/gcrypt/gpgme/$pkgname-$version.tar.bz2"
checksum="c4e30b227682374c23cddc7fdb9324a99694d907e79242a25a4deeedb393be46"
build_style="gnu-configure"
configure_args+=" --enable-fd-passing"
configure_args+=" --with-libassuan-prefix=$XBPS_CROSS_BASE/usr"
configure_args+=" --with-libgpg-error-prefix=$XBPS_CROSS_BASE/usr"

if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  configure_args+=" ac_cv_sys_file_offset_bits=no"
elif [[ "$XBPS_TARGET_WORDSIZE" == "32" ]]; then
  CFLAGS="-D_FILE_OFFSET_BITS=64 -DLARGEFILE_SOURCE=1"
  CXXFLAGS="$CFLAGS"
fi

CXXFLAGS+=" -D_GLIBCXX_USE_C99_STDIO=1"

post_extract() {
  vsed \
    -i \
    -e 's|GPG = gpg|GPG = gpg2|g' \
    lang/python/tests/Makefile.* \
    lang/qt/tests/Makefile.* \
    tests/gpg/Makefile.* \
    tests/json/Makefile.*
}

libgpgme_package() {
  short_desc+=" - library"
  pkg_install() {
    vmove "usr/lib/*.so.*"
  }
}

gpgme-devel_package() {
  unset depends
  depends+=" $makedepends"
  depends+=" libgpgme>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/lib/pkgconfig
    vmove usr/bin/gpgme-config
    vmove usr/include/gpgme.h
    vmove usr/share
    vmove usr/lib/libgpgme.so
  }
}

gpgmepp_package() {
  short_desc+=" - C++ library"
  pkg_install() {
    vmove "usr/lib/libgpgmepp.so.*"
  }
}

gpgmepp-devel_package() {
  unset depends
  depends+=" gpgme-devel>=${version}_$revision"
  depends+=" gpgmepp>=${version}_$revision"
  short_desc+=" - C++ library - development files"
  pkg_install() {
    vmove usr/include/gpgme++
    vmove usr/lib/libgpgmepp.so
    vmove usr/lib/cmake/Gpgmepp/GpgmeppConfig.cmake
    vmove usr/lib/cmake/Gpgmepp/GpgmeppConfigVersion.cmake
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="tbb"
version=2020.U1
revision=1
# version rewrite: 2017_U7 (upstream) => 2017.7 (xbps)
_ver=${version/./_}
short_desc="Intel Threading Building Blocks"
archs+=" aarch64*"
archs+=" armv7l*"
archs+=" i686*"
archs+=" ppc*"
archs+=" x86_64*"
hostmakedepends="cmake"
homepage="https://www.threadingbuildingblocks.org"
license="Apache-2.0"
distfiles="https://github.com/intel/tbb/archive/$_ver.tar.gz>$pkgname-$version.tar.gz"
checksum="72cffaeac3b50b117c4e2279f9162308d35873b3e744aff5a088beff6f65c9af"
wrksrc="$pkgname-$_ver"
build_style="gnu-makefile"

case "$XBPS_TARGET_MACHINE" in
  armv7l*)
    make_build_args="arch=armv7"
    ;;
  aarch64*)
    make_build_args="arch=arm64"
    ;;
  ppc64*)
    make_build_args="arch=ppc64"
    ;;
  ppc*)
    make_build_args="arch=ppc"
    ;;
esac

post_extract() {
  sed \
    -i \
    -e 's|CPLUS = g..|CPLUS = $(CXX)|g' \
    -e 's|CONLY = gcc|CONLY = $(CC)|g' \
    build/linux.gcc.inc

  # alternative might be:
  # https://git.alpinelinux.org/cgit/aports/tree/testing/libtbb/glibc-struct-mallinfo.patch
  if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
    vsed \
      -i \
      -e "s@#define MALLOC_UNIXLIKE_OVERLOAD_ENABLED __linux__@@" \
      src/tbbmalloc/proxy.h
  fi
}

do_install() {
  vmkdir usr/lib
  vcopy "build/linux_*/*.so*" usr/lib
  vmkdir usr/include/tbb
  vcopy "include/tbb/*" usr/include/tbb
  cmake \
    -DINSTALL_DIR="$DESTDIR/usr/lib/cmake/TBB" \
    -DSYSTEM_NAME="Linux" \
    -DLIB_REL_PATH="../.." \
    -DINC_REL_PATH="../../../include" \
    -P cmake/tbb_config_installer.cmake
}

tbb-devel_package() {
  depends="$sourcepkg>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove "usr/lib/*.so"
    vmove usr/lib/cmake
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="rspamd"
version=1.9.2
revision=2
short_desc="Fast, free and open-source spam filtering system"
makedepends+=" LuaJIT-devel"
makedepends+=" fann-devel"
makedepends+=" file-devel"
makedepends+=" glib-devel"
makedepends+=" hiredis-devel"
makedepends+=" icu-devel"
makedepends+=" libevent-devel"
makedepends+=" libfetch-devel"
makedepends+=" libressl-devel"
makedepends+=" libunwind-devel"
makedepends+=" sqlite-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" perl"
hostmakedepends+=" pkg-config"
hostmakedepends+=" ragel"
homepage="https://rspamd.com/"
license="Apache-2.0"
changelog="https://github.com/vstakhov/rspamd/raw/master/ChangeLog"
distfiles="https://github.com/vstakhov/rspamd/archive/$version.tar.gz>$pkgname-$version.tar.gz"
checksum="69a39cb83a4d28da2fc2fc2dc7c8e07435557e50e19cfdf73bd1ebd964da80f9"
conf_files+=" /etc/rspamd/*.conf"
conf_files+=" /etc/rspamd/*.inc"
conf_files+=" /etc/rspamd/modules.d/*.conf"
build_style="cmake"
configure_args+=" -DCONFDIR=/etc/rspamd"
configure_args+=" -DDBDIR=/var/lib/rspamd"
configure_args+=" -DENABLE_FANN=OFF"
configure_args+=" -DENABLE_GD=OFF"
configure_args+=" -DENABLE_HYPERSCAN=OFF"
configure_args+=" -DENABLE_JEMALLOC=OFF"
configure_args+=" -DENABLE_LIBUNWIND=ON"
configure_args+=" -DENABLE_URL_INCLUDE=ON"
configure_args+=" -DINSTALL_WEBUI=OFF"
configure_args+=" -DRSPAMD_USER=rspamd"
system_accounts="rspamd"
rspamd_homedir="/var/lib/rspamd"

case "$XBPS_TARGET_MACHINE" in
  aarch64*|arm*)
    configure_args+=" -DHAS_C11_ATOMICS_EXITCODE=0"
    configure_args+=" -DHAS_C11_ATOMICS_EXITCODE__TRYRUN_OUTPUT=0"
    configure_args+=" -DHAVE_ATOMIC_BUILTINS_EXITCODE=0"
    configure_args+=" -DHAVE_ATOMIC_BUILTINS_EXITCODE__TRYRUN_OUTPUT=0"
esac

if [[ -n "$CROSS_BUILD" ]]; then
  hostmakedepends+=" $makedepends"
  pre_build() {
    make -C build_native/contrib/snowball
    sed \
      -i \
      -e "s#\./snowball#../../../build_native/contrib/snowball/snowball#g" \
      build/contrib/snowball/CMakeFiles/stemmer.dir/build.make
  }
fi

pre_configure() {
  case "$XBPS_TARGET_MACHINE" in
    *-musl)
      # remove non existing library nsl
      sed \
        -i \
        -e "/LIST(APPEND CMAKE_REQUIRED_LIBRARIES nsl)/d" \
        CMakeLists.txt
      ;;
  esac
  if [[ -n "$CROSS_BUILD" ]]; then
    configure_args+=" -C $FILESDIR/TryRunResults.cmake"
    mkdir -p build_native
    (cd build_native
     LD= \
     CC= \
     CFLAGS= \
     LDFLAGS= \
      cmake ..)
  fi
}

post_install() {
  vlicense LICENSE.md
  vsv rspamd
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

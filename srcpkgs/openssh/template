maintainer="nox"
pkgname="openssh"
version=8.4p1
revision=1
short_desc="OpenSSH free Secure Shell (SSH) client and server implementation"
makedepends+=" libedit-devel"
makedepends+=" pam-devel"
makedepends+=" zlib-devel"
makedepends+=" $(vopt_if fido2 libfido2-devel)"
makedepends+=" $(vopt_if gssapi mit-krb5-devel)"
makedepends+=" $(vopt_if ldns libldns-devel)"
makedepends+=" $(vopt_if ssl libressl-devel)"
hostmakedepends="automake"
homepage="https://www.openssh.com"
license="BSD-2-Clause, ISC"
distfiles="https://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/$pkgname-$version.tar.gz"
checksum="5a01d22e407eb1c05ba8a8f7c654d388a13e9f226e4ed33bd38748dafa1d2b24"
conf_files+=" /etc/pam.d/sshd"
conf_files+=" /etc/ssh/moduli"
conf_files+=" /etc/ssh/ssh_config"
conf_files+=" /etc/ssh/sshd_config"
build_style="gnu-configure"
configure_args+=" --datadir=/usr/share/openssh"
configure_args+=" --disable-strip"
configure_args+=" --sysconfdir=/etc/ssh"
configure_args+=" --with-Werror"
configure_args+=" --with-libedit"
configure_args+=" --with-mantype=doc"
configure_args+=" --with-pam"
configure_args+=" --with-pid-dir=/run"
configure_args+=" --with-privsep-path=/var/chroot/ssh"
configure_args+=" --with-privsep-user=nobody"
configure_args+=" --with-xauth=/usr/bin/xauth"
configure_args+=" --without-rpath"
configure_args+=" --without-selinux"
configure_args+=" LD=$CC"
configure_args+=" ac_cv_header_sys_cdefs_h=false"
configure_args+=" $(vopt_if fido2 --with-security-key-builtin)"
configure_args+=" $(vopt_if gssapi --with-kerberos5=$XBPS_CROSS_BASE/usr --without-kerberos5)"
configure_args+=" $(vopt_if ldns --with-ldns=$XBPS_CROSS_BASE/usr)"
configure_args+=" $(vopt_if ssl --with-ssl-engine --without-openssl)"
make_dirs="/var/chroot/ssh 0755 root root"
build_options+=" fido2"
build_options+=" gssapi"
build_options+=" ldns"
build_options+=" ssl"
build_options_default+=" fido2"
build_options_default+=" ldns"
build_options_default+=" ssl"
desc_option_fido2="Enable support for FIDO2 USB tokens"

if [[ -n "$build_option_ldns" ]] && [[ -z "$build_option_ssl" ]]; then
  broken="option 'ldns' requires option 'ssl'"
fi

if [[ -n "$build_option_fido2" ]]; then
  subpackages="openssh-sk-helper"
fi

CFLAGS="-Wno-format-truncation -Wno-stringop-truncation"

case $XBPS_TARGET_MACHINE in
  i686-musl)
    CFLAGS+=" -fno-stack-protector"
    configure_args+=" --disable-utmp"
    configure_args+=" --disable-wtmp"
    ;;
  *-musl)
    configure_args+=" --disable-utmp"
    configure_args+=" --disable-wtmp"
    ;;
esac

pre_configure() {
  autoreconf -fi
  vsed \
    -i \
    -e 's|#include <sys/sysctl.h>||' \
    servconf.c
}

post_install() {
  vlicense LICENCE
  vman contrib/ssh-copy-id.1
  vinstall contrib/sshd.pam.generic 644 etc/pam.d sshd
  vbin contrib/ssh-copy-id

  # configure to use PAM
  vsed \
    -i \
    -e 's|^#\(UsePAM\) no|\1 yes|g' \
    -e 's|^#\(ChallengeResponseAuthentication\) yes|\1 no|g' \
    -e 's|^#\(PrintMotd\) yes|\1 no|g' \
    "$DESTDIR/etc/ssh/sshd_config"

  vinstall "$FILESDIR/sshd.pam" 644 etc/pam.d sshd
  vsv sshd
}

openssh-sk-helper_package() {
  short_desc+=" - client support for FIDO authenticators"
  depends="$sourcepkg>=${version}_$revision"
  pkg_install() {
    vmove usr/libexec/ssh-sk-helper
    vmove usr/share/man/man8/ssh-sk-helper.8
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="crystal"
version=0.30.0
revision=1
_shardsversion=0.9.0
_bootstrapversion=0.30.0
_bootstraprevision=1
short_desc="Crystal Programming Language"
archs+=" aarch64*"
archs+=" arm*"
archs+=" i686*"
archs+=" x86_64*"
depends+=" gc-devel"
depends+=" gcc"
depends+=" gmp-devel"
depends+=" libatomic_ops"
depends+=" libevent-devel"
depends+=" libressl-devel"
depends+=" libxml2-devel"
depends+=" libyaml-devel"
depends+=" llvm8"
depends+=" pcre-devel"
depends+=" pkg-config"
makedepends+=" gc-devel"
makedepends+=" libatomic_ops"
makedepends+=" libevent-devel"
makedepends+=" libxml2-devel"
makedepends+=" libyaml-devel"
makedepends+=" pcre-devel"
checkdepends+=" gmp-devel"
checkdepends+=" libressl-devel"
checkdepends+=" libyaml-devel"
checkdepends+=" readline-devel"
hostmakedepends+=" git"
hostmakedepends+=" llvm8"
homepage="https://crystal-lang.org/"
license="Apache-2.0"
distfiles+=" https://github.com/crystal-lang/crystal/archive/$version.tar.gz"
distfiles+=" https://github.com/crystal-lang/shards/archive/v$_shardsversion.tar.gz"
checksum+=" fc884970089e382344540676a9c5aa4f369c9a0f45d1858e079b4ce26878164a"
checksum+=" 90f230c87cc7b94ca845e6fe34f2523edcadb562d715daaf98603edfa2a94d65"
build_options="binary_bootstrap"
build_options_default="binary_bootstrap"
desc_option_binary_bootstrap="Bootstrap using precompiled binaries"
nocross="FIXME: someone needs to sort out the llvm --cxxflags for cross building"

_crystalflags+=" --no-debug"
_crystalflags+=" --progress"
_crystalflags+=" --release"

if [[ -n "$build_option_binary_bootstrap" ]]; then
  case "$XBPS_MACHINE" in
    x86_64)
      distfiles+=" https://github.com/crystal-lang/crystal/releases/download/$_bootstrapversion/$pkgname-$_bootstrapversion-$_bootstraprevision-linux-x86_64.tar.gz"
      checksum+=" 1995420a5d9146fd21322c96fe8bf87ddf73d5e0273b3c24c3c71d0e6f54cba2"
      ;;
    i686)
      distfiles+=" https://github.com/crystal-lang/crystal/releases/download/$_bootstrapversion/$pkgname-$_bootstrapversion-$_bootstraprevision-linux-i686.tar.gz"
      checksum+=" 81282e2fdaba77a31aeb682deac7cde545a72dfd0ad5b6554002b8fd861e9d3e"
      ;;
    *)
      broken="cannot be built on $XBPS_MACHINE"
      ;;
  esac
else
  hostmakedepends+=" crystal"
fi

do_extract() {
  mkdir -p "$wrksrc"/{shards,$(vopt_if binary_bootstrap bootstrap)}
  tar xfz "$XBPS_SRCDISTDIR/$pkgname-$version/$version.tar.gz" \
    --strip-components=1 \
    -C "$wrksrc"
  tar xfz "$XBPS_SRCDISTDIR/$pkgname-$version/v$_shardsversion.tar.gz" \
    --strip-components=1 \
    -C "$wrksrc/shards"
  if [[ -n "$build_option_binary_bootstrap" ]]; then
    tar xfz "$XBPS_SRCDISTDIR/$pkgname-$version/$pkgname-$_bootstrapversion-$_bootstraprevision-linux-$XBPS_TARGET_MACHINE.tar.gz" \
      --strip-components=1 \
      -C "$wrksrc/bootstrap"
  fi
}

do_build() {
  if [[ -z $disable_parallel_build ]] && [[ -n $XBPS_MAKEJOBS ]]; then
    _crystalflags+=" --threads ${makejobs:2:4}"
  fi
  make \
    "$makejobs" \
    $(vopt_if binary_bootstrap PATH="$wrksrc/bootstrap/bin:$PATH")
    CRYSTAL_CACHE_DIR="/tmp/crystal" \
    CRYSTAL_CONFIG_PATH="lib:/usr/lib/crystal" \
    CRYSTAL_CONFIG_VERSION="$version" \
    FLAGS="$_crystalflags" \
    release=1 \
  make \
    "$makejobs" \
    CRYSTAL_CACHE_DIR="/tmp/crystal" \
    docs

  cd shards
  "$wrksrc/bin/crystal" build $_crystalflags -o bin/shards src/shards.cr
}

do_check() {
  make \
    "$makejobs" \
    CRYSTAL_CACHE_DIR="/tmp/crystal" \
    CRYSTAL_CONFIG_VERSION="$version" \
    PATH=".build:$PATH" \
    spec

  cd shards
  make test CRYSTAL_BIN="$wrksrc/bin/crystal"
}

do_install() {
  vmkdir /usr/bin
  vmkdir /usr/lib/crystal
  vmkdir /usr/share/doc/crystal
  vmkdir /usr/share/doc/crystal/api
  vmkdir /usr/share/bash-completion/completions/crystal
  vmkdir /usr/share/zsh/site-functions/_crystal
  vmkdir /usr/share/licenses/shards

  vcopy etc/completion.bash /usr/share/bash-completion/completions/crystal
  vcopy etc/completion.zsh /usr/share/zsh/site-functions/_crystal
  vcopy samples /usr/share/doc/crystal
  vcopy "docs/*" /usr/share/doc/crystal/api
  vcopy "src/*" /usr/lib/crystal
  vbin .build/crystal crystal
  vlicense LICENSE
  vman man/crystal.1
  vbin shards/bin/shards
  cp shards/LICENSE "$DESTDIR/usr/share/licenses/shards"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="libtorrent"
version=0.13.8
revision=4
short_desc="BitTorrent library written in C++"
makedepends+=" openssl-devel"
makedepends+=" zlib-devel"
# XXX: if built with XBPS_CHECK_PKGS, final binary will be dyn linked
# against libcppunit
checkdepends="libcppunit-devel"
hostmakedepends+=" automake"
hostmakedepends+=" libtool"
hostmakedepends+=" pkg-config"
homepage="https://github.com/rakshasa/libtorrent"
license="GPL-2.0-or-later"
distfiles="https://github.com/rakshasa/libtorrent/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="0f6c2e7ffd3a1723ab47fdac785ec40f85c0a5b5a42c1d002272205b988be722"
build_style="gnu-configure"
configure_args+=" --disable-debug"
configure_args+=" --enable-aligned"
configure_args+=" --enable-static"
configure_args+=" --with-posix-fallocate"
configure_args+=" --without-kqueue"

# https://github.com/rakshasa/rtorrent/issues/156
case "$XBPS_TARGET_MACHINE" in
  ppc64*)
    ;;
  ppc*|mips*)
    configure_args+=" --disable-instrumentation"
    ;;
esac

pre_configure() {
  autoreconf -fi
  sed \
    -i \
    -e 's,test "$cross_compiling" = yes, false,' \
    configure
}

post_configure() {
  # replace wrong (for cross buidls) -L/lib in Makefiles
  for f in $(find "$wrksrc" -name Makefile); do
    sed \
      -i \
      -e "s;-L/lib;-L$XBPS_CROSS_BASE/lib;g" \
      "$f"
  done
}

libtorrent-devel_package() {
  depends="$sourcepkg>=${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

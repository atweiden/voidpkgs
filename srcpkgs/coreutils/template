maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="coreutils"
version=8.30
revision=1
short_desc="The GNU core utilities"
makedepends+=" acl-devel"
makedepends+=" gmp-devel"
makedepends+=" libcap-devel"
homepage="https://www.gnu.org/software/coreutils"
license="GPL-3.0-or-later"
changelog="https://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob_plain;f=NEWS;hb=HEAD"
distfiles="$GNU_SITE/coreutils/coreutils-$version.tar.xz"
checksum="e831b3a86091496cdba720411f9748de81507798f6130adeaef872d206e1b057"
bootstrap="yes"
replaces+=" b2sum>=0"
replaces+=" chroot-coreutils>=0"
replaces+=" coreutils-doc>=0"
alternatives+=" hostname:hostname:/usr/bin/hostname-coreutils"
alternatives+=" hostname:hostname.1:/usr/share/man/man1/hostname-coreutils.1"

if [[ -n "$CHROOT_READY" ]]; then
  hostmakedepends="perl"
fi

pre_configure() {
  # build all utils for the host natively
  # we need this to generate the manpages via help2man
  if [[ -n "$CROSS_BUILD" ]]; then
    AR="ar" \
    CC="cc" \
    CFLAGS="-Os" \
    CXXFLAGS="-Os" \
    LD="ld" \
    LDFLAGS= \
    RANLIB="ranlib" \
      ./configure \
        --enable-install-program="arch,hostname" \
        --enable-no-install-program="kill,uptime" \
        --prefix="$wrksrc/coreutils-$XBPS_MACHINE"
    make "$makejobs"
    make install
    make distclean
  fi
}

do_configure() {
  if [[ -n "$CROSS_BUILD" ]]; then
    configure_args+=" fu_cv_sys_stat_statfs2_bsize=no"
    configure_args+=" gl_cv_func_working_mkstemp=yes"
    configure_args+=" gl_cv_func_working_acl_get_file=yes"
  fi
  case "$XBPS_TARGET_MACHINE" in
    # XXX: syncfs() in src/sync.c expects a return value
    *-musl) configure_args+=" ac_cv_func_syncfs=no";;
  esac
  # do not install kill (provided by util-linux)
  # do not install uptime (provided by procps-ng)
  ./configure \
    "$configure_args" \
    --disable-rpath \
    --enable-install-program=arch,hostname \
    --enable-no-install-program=kill,uptime
  if [[ -n "$CROSS_BUILD" ]]; then
    # use install when cross compiling
    sed -i Makefile -e 's;^\(cu_install_program =\).*;\1 install;'
  fi
}

do_build() {
  if [[ -n "$CROSS_BUILD" ]]; then
    cp Makefile Makefile.orig
    sed '/src_make_prime_list/d' Makefile.orig > Makefile
    depbase=$(echo src/make-prime-list.o | sed 's|[^/]*$|.deps/&|;s|\.o$||')
    cc \
      -std="gnu99" \
      -I"." \
      -I"./lib" \
      -I"lib" \
      -I"./lib" \
      -I"src" \
      -I"./src" \
      -fdiagnostics-show-option \
      -funit-at-a-time \
      -g \
      -O2 \
      -MT \
      src/make-prime-list.o \
      -MD \
      -MP \
      -MF \
      "$depbase.Tpo" \
      -c \
      -o src/make-prime-list.o \
      src/make-prime-list.c
    mv -f "$depbase.Tpo" "$depbase.Po"
    cc \
      -std="gnu99" \
      -fdiagnostics-show-option \
      -funit-at-a-time \
      -g \
      -O2 \
      -Wl,--as-needed \
      -o src/make-prime-list \
      src/make-prime-list.o
    cp Makefile Makefile.bak
    sed -e '/hostname.1/d' Makefile.bak > Makefile
  fi
  make "$makejobs"
}

do_check() {
  # chgrp tests fail inside a chroot
  sed -i '/tests\/chgrp/d' Makefile

  exeext_tests+=" bind"
  exeext_tests+=" bitrotate"
  exeext_tests+=" byteswap"
  exeext_tests+=" c-ctype"
  exeext_tests+=" calloc-gnu"
  exeext_tests+=" canonizalize"
  exeext_tests+=" chdir"
  exeext_tests+=" chown"
  exeext_tests+=" fchownat"
  exeext_tests+=" lchown"
  sh_tests+=" btowc1"
  sh_tests+=" btowc2"
  sh_tests+=" c-strcase"

  case "$XBPS_TARGET_MACHINE" in
    *-musl)
      # disable locale tests that fail on musl
      exeext_tests+=" getcwd"
      exeext_tests+=" getlogin"
      exeext_tests+=" localename"
      sh_tests+=" mbrtowc5"
      ;;
  esac

  for test in $exeext_tests; do
    sed -i "/test-$test\$(EXEEXT)/d" gnulib-tests/Makefile
  done

  for test in $sh_tests; do
    sed -i "/test-$test.sh/d" gnulib-tests/Makefile
  done

  make check
}

do_install() {
  make DESTDIR="$DESTDIR" install
  if [[ -n "$CROSS_BUILD" ]]; then
    mv "$wrksrc/coreutils-$XBPS_MACHINE/share/man" "$DESTDIR/usr/share"
    # provided by procps-ng
    rm -f "$DESTDIR/usr/share/man/man1"/{kill,uptime}.1
  fi
  mv "$DESTDIR/usr/bin/hostname" \
    "$DESTDIR/usr/bin/hostname-coreutils"
  mv "$DESTDIR/usr/share/man/man1/hostname.1" \
    "$DESTDIR/usr/share/man/man1/hostname-coreutils.1"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0:

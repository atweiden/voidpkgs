maintainer="nox"
pkgname="coreutils"
version=8.32
revision=4
short_desc="GNU core utilities"
makedepends+=" acl-devel"
makedepends+=" gmp-devel"
makedepends+=" libcap-devel"
homepage="https://www.gnu.org/software/coreutils"
license="GPL-3.0-or-later"
changelog="https://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob_plain;f=NEWS;hb=HEAD"
distfiles="$GNU_SITE/coreutils/$pkgname-$version.tar.xz"
checksum="4458d8de7849df44ccab15e16b1548b285224dbba5f08fac070c1c0e0bcc4cfa"
patch_args="-Np0"
bootstrap="yes"
replaces+=" b2sum>=0"
replaces+=" chroot-coreutils>=0"
replaces+=" coreutils-doc>=0"
alternatives+=" hostname:hostname:/usr/bin/hostname-coreutils"
alternatives+=" hostname:hostname.1:/usr/share/man/man1/hostname-coreutils.1"

if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  export ac_cv_lib_error_at_line="no"
  export ac_cv_header_sys_cdefs_h="no"
fi

if [[ -n "$CHROOT_READY" ]]; then
  hostmakedepends+=" perl"
  # allow run ./configure by root in ethereal chroot
  if [[ -n "$XBPS_ALLOW_CHROOT_BREAKOUT" ]]; then
    _force_unsafe_configure="FORCE_UNSAFE_CONFIGURE=1"
  fi
fi

pre_configure() {
  # build all utils for the host natively
  # we need this to generate the manpages via help2man
  if [[ -n "$CROSS_BUILD" ]]; then
    AR="ar" \
    CC="cc" \
    CFLAGS="-Os" \
    CXXFLAGS="-Os" \
    LD="ld" \
    LDFLAGS= \
    RANLIB="ranlib" \
    $_force_unsafe_configure \
      ./configure \
        --enable-install-program="arch,hostname" \
        --enable-no-install-program="kill,uptime" \
        --prefix="$wrksrc/coreutils-$XBPS_MACHINE"
    make "$makejobs"
    make install
    make distclean
  fi
}

do_configure() {
  if [[ -n "$CROSS_BUILD" ]]; then
    configure_args+=" fu_cv_sys_stat_statfs2_bsize=no"
    configure_args+=" gl_cv_func_working_mkstemp=yes"
    configure_args+=" gl_cv_func_working_acl_get_file=yes"
  fi
  case "$XBPS_TARGET_MACHINE" in
    # XXX: syncfs() in src/sync.c expects a return value
    *-musl)
      configure_args+=" ac_cv_func_syncfs=no"
      ;;
  esac
  # do not install kill (provided by util-linux)
  # do not install uptime (provided by procps-ng)
  env $_force_unsafe_configure \
    ./configure \
      $configure_args \
      --disable-rpath \
      --enable-install-program=arch,hostname \
      --enable-no-install-program=kill,uptime
  if [[ -n "$CROSS_BUILD" ]]; then
    # use install when cross compiling
    cp Makefile Makefile.cfg.orig
    sed \
      -e 's;^\(cu_install_program =\).*;\1 install;' \
      Makefile.cfg.orig > \
      Makefile
  fi
}

do_build() {
  if [[ -n "$CROSS_BUILD" ]]; then
    cp Makefile Makefile.orig
    sed '/src_make_prime_list/d' Makefile.orig > Makefile
    depbase=$(echo src/make-prime-list.o | sed 's|[^/]*$|.deps/&|;s|\.o$||')
    cc \
      -std="gnu99" \
      -I"." \
      -I"./lib" \
      -I"lib" \
      -I"./lib" \
      -I"src" \
      -I"./src" \
      -fdiagnostics-show-option \
      -funit-at-a-time \
      -g \
      -O2 \
      -MT \
      src/make-prime-list.o \
      -MD \
      -MP \
      -MF \
      "$depbase.Tpo" \
      -c \
      -o src/make-prime-list.o \
      src/make-prime-list.c
    mv -f "$depbase.Tpo" "$depbase.Po"
    cc \
      -std="gnu99" \
      -fdiagnostics-show-option \
      -funit-at-a-time \
      -g \
      -O2 \
      -Wl,--as-needed \
      -o src/make-prime-list \
      src/make-prime-list.o
    cp Makefile Makefile.bak
    sed -e '/hostname.1/d' Makefile.bak > Makefile
  fi
  make "$makejobs"
}

do_check() {
  local exeext_tests

  # chgrp tests fail inside a chroot
  vsed \
    -i \
    -e '/tests\/chgrp/d' \
    Makefile

  # tests that fail due to being inside a chroot
  exeext_tests+=" chown"
  exeext_tests+=" lchown"
  exeext_tests+=" fchownat"

  # tests that depend on the tests removed
  exeext_tests+=" fchmodat"
  exeext_tests+=" fchdir"

  for test in $exeext_tests; do
    vsed \
      -i \
      -e "s/test-$test\$(EXEEXT) //" \
      gnulib-tests/Makefile
  done

  make check
}

do_install() {
  make DESTDIR="$DESTDIR" install
  if [[ -n "$CROSS_BUILD" ]]; then
    mv "$wrksrc/coreutils-$XBPS_MACHINE/share/man" "$DESTDIR/usr/share"
    # provided by procps-ng
    rm -f "$DESTDIR/usr/share/man/man1"/{kill,uptime}.1
  fi
  mv "$DESTDIR/usr/bin/hostname" \
    "$DESTDIR/usr/bin/hostname-coreutils"
  mv "$DESTDIR/usr/share/man/man1/hostname.1" \
    "$DESTDIR/usr/share/man/man1/hostname-coreutils.1"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

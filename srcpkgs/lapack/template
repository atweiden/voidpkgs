maintainer="nox"
pkgname="lapack"
version=3.11.0
revision=1
short_desc="Linear Algebra PACKage"
hostmakedepends="gcc-fortran"
homepage="https://netlib.org/lapack/"
license="BSD-3-Clause"
changelog="https://netlib.org/lapack/release_notes.html"
distfiles="https://github.com/Reference-LAPACK/lapack/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="5a5b3bac27709d8c66286b7a0d1d7bf2d7170ec189a1a756fdf812c97aa7fd10"
build_style="cmake"
configure_args+=" -DBUILD_DEPRECATED=ON"
configure_args+=" -DCBLAS=ON"
configure_args+=" -DCMAKE_SKIP_RPATH=ON"
configure_args+=" -DCMAKE_VERBOSE_MAKEFILE=ON"
configure_args+=" -DLAPACKE=ON"
if [[ -n "$CROSS_BUILD" ]]; then
  configure_args+=" -DTEST_FORTRAN_COMPILER=OFF"
fi

pre_configure() {
  # deliberately make _args global variable for reuse in post_configure
  _args="$configure_args"
  cmake_builddir="build-shared"
  configure_args="$_args -DBUILD_SHARED_LIBS=ON"
  if [[ -z "$CROSS_BUILD" ]] && [[ -n "$XBPS_CHECK_PKGS" ]]; then
    configure_args+=" -DBUILD_TESTING=ON"
  fi
  msg_normal "Configure for shared libs (cmake_builddir=$cmake_builddir)\n"
}

post_configure() {
  cmake_builddir="build-static"
  configure_args="$_args -DBUILD_SHARED_LIBS=OFF"
  if [[ -z "$CROSS_BUILD" ]] && [[ "$XBPS_CHECK_PKGS" == "full" ]]; then
    configure_args+=" -DBUILD_TESTING=ON"
  fi
  msg_normal "Configure for static libs (cmake_builddir=$cmake_builddir)\n"
  (do_configure)
}

pre_build() {
  cmake_builddir="build-shared"
  msg_normal "Build shared libs (cmake_builddir=$cmake_builddir)\n"
}

post_build() {
  cmake_builddir="build-static"
  msg_normal "Build static libs (cmake_builddir=$cmake_builddir)\n"
  (do_build)
}

pre_check() {
  cmake_builddir="build-shared"
  export LD_LIBRARY_PATH="$(cd "$cmake_builddir/lib" && pwd)"
  msg_normal "Check shared libs (cmake_builddir=$cmake_builddir)\n"
}

post_check() {
  if [[ "$XBPS_CHECK_PKGS" == "full" ]]; then
    cmake_builddir="build-static"
    msg_normal "Check static libs (cmake_builddir=$cmake_builddir)\n"
    (do_check)
  fi
}

pre_install() {
  cmake_builddir="build-static"
  msg_normal "Install static libs (cmake_builddir=$cmake_builddir)\n"
}

post_install() {
  cmake_builddir="build-shared"
  msg_normal "Install shared libs (cmake_builddir=$cmake_builddir)\n"
  (do_install)
  # library of test matrix generators - built only for testing
  rm -f "$DESTDIR/usr/lib"/libtmglib.*
  vlicense LICENSE
}

lapack-devel_package() {
  unset depends
  depends+=" $sourcepkg-${version}_$revision"
  depends+=" blas-devel-${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include/lapack.h
    vmove "usr/lib/cmake/lapack-*"
    vmove usr/lib/pkgconfig/lapack.pc
    vmove usr/lib/liblapack.a
    vmove usr/lib/liblapack.so
  }
}

blas_package() {
  short_desc="Basic Linear Algebra Subprograms"
  pkg_install() {
    vmove "usr/lib/libblas.so.*"
    vlicense LICENSE
  }
}

blas-devel_package() {
  depends="blas-${version}_$revision"
  short_desc="Basic Linear Algebra Subprograms - development files"
  pkg_install() {
    vmove usr/lib/pkgconfig/blas.pc
    vmove usr/lib/libblas.a
    vmove usr/lib/libblas.so
  }
}

cblas_package() {
  short_desc="C interface to BLAS"
  pkg_install() {
    vmove "usr/lib/libcblas.so.*"
  }
}

cblas-devel_package() {
  unset depends
  short_desc="C interface to BLAS - development files"
  depends+=" blas-devel-${version}_$revision"
  depends+=" cblas-${version}_$revision"
  pkg_install() {
    vmove "usr/include/cblas*.h"
    vmove "usr/lib/cmake/cblas-*"
    vmove usr/lib/pkgconfig/cblas.pc
    vmove usr/lib/libcblas.a
    vmove usr/lib/libcblas.so
  }
}

lapacke_package() {
  short_desc="C interface to LAPACK"
  pkg_install() {
    vmove "usr/lib/liblapacke.so.*"
  }
}

lapacke-devel_package() {
  unset depends
  short_desc="C interface to LAPACK - development files"
  depends+=" lapack-devel-${version}_$revision"
  depends+=" lapacke-${version}_$revision"
  pkg_install() {
    vmove "usr/include/lapacke*.h"
    vmove "usr/lib/cmake/lapacke-*"
    vmove usr/lib/pkgconfig/lapacke.pc
    vmove usr/lib/liblapacke.a
    vmove usr/lib/liblapacke.so
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

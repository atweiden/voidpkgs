maintainer="nox"
pkgname="dcrd"
version=1.8.1
revision=1
short_desc="Decred daemon written in Go"
tags="decred"
homepage="https://github.com/decred/dcrd"
license="ISC"
distfiles="https://github.com/decred/dcrd/archive/release-v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="120bcad03e8a704df7e16b6a0610d4b755f3af7eb4ef38c6f4628b75cbe1d26f"
build_style="go"
go_import_path="github.com/decred/dcrd"
go_package+=" $go_import_path"
go_package+=" $go_import_path/cmd/addblock"
go_package+=" $go_import_path/cmd/gencerts"
go_package+=" $go_import_path/cmd/promptsecret"
go_build_tags+=" netgo"
go_build_tags+=" osusergo"
_go_flags+=" -trimpath"
_go_flags+=" -mod=readonly"
_go_flags+=" -modcacherw"
go_ldflags+=" -buildid="
go_ldflags+=" -X $go_import_path/internal/version.BuildMetadata="
go_ldflags+=" -X $go_import_path/internal/version.PreRelease="
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  _go_flags+=" -buildmode=pie"
  go_ldflags+=" -extldflags=-static-pie"
  go_ldflags+=" -linkmode=external"
fi

pre_build() {
  export CGO_ENABLED=0
  export GOFLAGS="$_go_flags"
}

pre_install() {
  # prepend dcr to unqualified binaries
  for _bin in $(find "$GOPATH/bin"  \
                        -mindepth 1 \
                        -maxdepth 1 \
                        -type f ! -name "dcr*" -printf '%f\n'); do
    mv "$GOPATH/bin/$_bin" "$GOPATH/bin/dcr$_bin"
  done
}

post_install() {
  vlicense LICENSE
  vsconf "$FILESDIR/sample-dcrctl.conf"
  vsconf "$FILESDIR/sample-dcrd.conf"
  vdoc CHANGES
  vdoc README.md
  vcopy docs "usr/share/doc/$pkgname"
}

dcrd-doc_package() {
  short_desc+=" - documentation"
  pkg_install() {
    vmove usr/share/doc
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

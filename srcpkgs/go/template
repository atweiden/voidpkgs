maintainer="nox"
pkgname="go"
version=1.21.0
revision=2
short_desc="Go Programming Language"
checkdepends+=" clang"
checkdepends+=" gcc-fortran"
checkdepends+=" iana-etc"
hostmakedepends="go1.17-bootstrap"
homepage="https://go.dev/"
license="BSD-3-Clause"
changelog="https://go.dev/doc/devel/release.html"
distfiles="https://go.dev/dl/go$version.src.tar.gz"
checksum="818d46ede85682dd551ad378ef37a4d247006f12ec59b5b755601d2ce114369a"
create_wrksrc="yes"
build_wrksrc="go"
# on ci it tries to use `git submodule`, which is not part of chroot-git
make_check="ci-skip"
nostrip="yes"
noverifyrdeps="yes"

case "$XBPS_TARGET_MACHINE" in
  aarch64*)
    _goarch="arm64"
    ;;
  arm*)
    _goarch="arm"
    ;;
  i686*)
    _goarch="386"
    ;;
  x86_64*)
    _goarch="amd64"
    ;;
  ppc64le*)
    _goarch="ppc64le"
    ;;
  mips*)
    _goarch="mips"
    ;;
  riscv64*)
    _goarch="riscv64"
    ;;
  *)
    broken="Unsupported architecture $XBPS_TARGET_MACHINE"
    ;;
esac

if [[ -n "$CROSS_BUILD" ]]; then
  if [[ "${XBPS_MACHINE%%-musl}" == "${XBPS_TARGET_MACHINE%%-musl}" ]]; then
    broken="Cross-compiling to different libc is not supported"
  fi
fi

# workaround for go-1.19 compilation error on i686:
#
#     runtime/cgo(.text): unknown symbol __stack_chk_fail_local in pcrel
if [[ "$XBPS_MACHINE" == "i686" ]]; then
  export CGO_CFLAGS="-fno-stack-protector"
fi

post_extract() {
  if [[ "$(df . --output=fstype | tail -1)" == "zfs" ]]; then
    # https://github.com/golang/go/issues/39905
    rm -v go/src/cmd/link/internal/ld/fallocate_test.go
  fi
}

do_build() {
  unset CC
  unset CFLAGS
  unset CXX
  unset GCC
  unset LD

  # FIXME: work around leaking go build-style vars when built as a
  # dependency
  #unset CGO_CFLAGS
  unset CGO_CXXFLAGS
  unset CGO_ENABLED

  export GOARCH="$_goarch"
  export GOROOT="$PWD"
  export GOROOT_BOOTSTRAP="/usr/lib/go1.17.13"

  cd "src"

  bash make.bash -v
}

do_check() {
  if [[ "$XBPS_LIBC" == "musl" ]]; then
    # https://github.com/golang/go/issues/39857
    ./bin/go tool dist test -v -run "!^cgo_test$"
  else
    ./bin/go tool dist test -v
  fi
}

do_install() {
  local bindir

  if [[ -n "$CROSS_BUILD" ]]; then
    bindir="bin/linux_$_goarch"
  else
    bindir="bin"
  fi

  vmkdir usr/bin
  vmkdir usr/lib/go
  vmkdir usr/lib/go/bin
  vmkdir usr/share/go
  cp -d --preserve="all" "$bindir"/* "$DESTDIR/usr/lib/go/bin" || true
  cp -a pkg src lib "$DESTDIR/usr/lib/go"
  cp -r doc misc -t "$DESTDIR/usr/share/go"
  ln -s /usr/share/go/doc "$DESTDIR/usr/lib/go/doc"
  cp VERSION "$DESTDIR/usr/lib/go/VERSION"

  # GOROOT_FINAL doesn't work anymore, see: https://github.com/golang/go/issues/61921
  ln -sfr "$DESTDIR/usr/lib/go/bin"/* "$DESTDIR/usr/bin"

  # <dominikh> sigh. well, someone fix the template and add a symlink,
  # usr/lib/go/misc -> /usr/share/go/misc
  ln -sfr "$DESTDIR/usr/share/go/misc" "$DESTDIR/usr/lib/go/misc"

  rm -f "$DESTDIR/usr/share/go/doc/articles/wiki/get.bin"
  rm -f "$DESTDIR/usr/lib/go/pkg/tool"/*/api
  rm -rf "$DESTDIR/usr/lib/go/pkg/bootstrap"
  rm -rf "$DESTDIR/usr/lib/go/pkg/obj"

  vinstall go.env 644 usr/lib/go
  vlicense LICENSE
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

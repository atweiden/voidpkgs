maintainer="nox"
pkgname="libtls"
version=3.8.3
revision=1
short_desc="Version of the TLS/crypto stack forked from OpenSSL"
depends="ca-certificates"
hostmakedepends+=" automake"
hostmakedepends+=" libtool"
homepage="http://www.libressl.org/"
license="OpenSSL, ISC"
changelog="https://github.com/libressl/portable/raw/master/ChangeLog"
distfiles="https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-$version.tar.gz"
checksum="a65f40e3ef6e3c9451c8318e6f2c454c367e67f09c0cde1849731a4d6ecc7272"
create_wrksrc="yes"
patch_args="-Np1 --directory=$build_wrksrc"
build_wrksrc="libressl-$version"
build_style="gnu-configure"
configure_args+=" --enable-libtls-only"
configure_args+=" --enable-nc"
case "$XBPS_TARGET_MACHINE" in
  # disable ssp
  i686-musl) configure_args+=" --disable-hardening" ;;
esac
replaces="libtls20>0"

pre_configure() {
  autoreconf -fi
}

pre_check() {
  # else testenc.sh fails
  export OPENSSL_CONF=
}

do_install() {
  make \
    -C tls \
    install \
    DESTDIR="$DESTDIR"

  vlicense COPYING
}

libtls-devel_package() {
  short_desc+=" - development files"
  depends="libtls-${version}_$revision"
  pkg_install() {
    vinstall include/tls.h 644 usr/include
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
    vinstall libtls.pc 644 usr/lib/pkgconfig
    for m in man/tls_*; do
      vman "$m"
    done
  }
}

libressl-netcat_package() {
  unset alternatives
  short_desc="TCP/IP swiss army knife (LibreSSL variant)"
  alternatives+=" nc:nc.1:/usr/share/man/man1/libressl-nc.1"
  alternatives+=" nc:nc:/usr/bin/libressl-nc"
  pkg_install() {
    vbin apps/nc/.libs/nc libressl-nc
    vman apps/nc/nc.1 libressl-nc.1
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

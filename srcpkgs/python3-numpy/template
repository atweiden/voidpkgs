maintainer="nox"
pkgname="python3-numpy"
version=1.20.1
revision=1
short_desc="Fast and sophisticated array facility to Python3"
depends="python3-setuptools"
makedepends+=" python3-devel"
makedepends+=" $(vopt_if openblas 'openblas-devel' 'lapack-devel cblas-devel')"
hostmakedepends+=" gcc-fortran"
hostmakedepends+=" python3-Cython"
hostmakedepends+=" python3-setuptools"
homepage="https://www.numpy.org/"
license="BSD-3-Clause"
distfiles="https://github.com/numpy/numpy/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="faadd54211fe33ec569795d29ce7662ec6b342b8778822a7658386de541101b4"
wrksrc="numpy-$version"
build_style="python3-module"
build_options="openblas"
alternatives="numpy:f2py:/usr/bin/f2py3"

case "$XBPS_TARGET_MACHINE" in
  x86_64*|i686*|aarch64*|armv[67]*|ppc64*)
    # prefer accelerated routines where available
    build_options_default="openblas"
    ;;
  *)
    ;;
esac

post_patch() {
  case "$XBPS_TARGET_MACHINE" in
    armv5tel-musl)
      cp "$FILESDIR/fenv-constants.h" numpy/core/src/npymath/
      patch -Np0 -i "$FILESDIR/fenv-constants.patch"
      ;;
  esac

  if [[ "$XBPS_TARGET_LIBC" == "musl" ]] ; then
    vsed \
      -i \
      -e 's|"backtrace",||' \
      numpy/core/setup_common.py
  fi

  if [[ "$XBPS_WORDSIZE" != "$XBPS_TARGET_WORDSIZE" ]]; then
    # when host/target word sizes disagree, this $werror header triggers
    # -Werror failures about redefining SIZEOF_OFF_T from the wrong host
    # size to the correct target size
    vsed \
      -i \
      -e 's/\$werror//' \
      numpy/core/src/_simd/_simd.dispatch.c.src
  fi
}

pre_build() {
  # build numpy in parallel
  make_build_args+=" $makejobs"

  # find the right linear algebra subroutines on the target arch
  : > site.cfg
  for _blaslib in $(vopt_if openblas 'openblas' 'lapack blas'); do
    cat >> site.cfg <<-EOF
    [$_blaslib]
    libraries = $_blaslib
    include_dirs = $XBPS_CROSS_BASE/usr/include
    library_dirs = $XBPS_CROSS_BASE/usr/lib
    runtime_library_dirs = $XBPS_CROSS_BASE/usr/lib
    EOF
  done
}

do_check() {
  echo "Skipping check: tests do not function properly in builddir"
}

post_install() {
  # create compat symlinks for .h files
  vmkdir "$py3_inc"
  ln -sfr "$DESTDIR/$py3_sitelib/numpy/core/include/numpy" "$DESTDIR/$py3_inc"
  rm -f "$DESTDIR/usr/bin/f2py"
  rm -f "$DESTDIR/usr/lib"/python*/site-packages/numpy/LICENSE.txt
  vlicense LICENSE.txt LICENSE
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

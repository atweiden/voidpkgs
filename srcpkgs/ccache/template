maintainer="nox"
pkgname="ccache"
version=4.2
revision=1
short_desc="Fast C/C++ Compiler Cache"
makedepends+=" libzstd-devel"
makedepends+=" zlib-devel"
if [[ -n "$XBPS_TARGET_NO_ATOMIC8" ]]; then
  makedepends+=" libatomic-devel"
fi
if [[ -z "$CHROOT_READY" ]]; then
  hostmakedepends="cmake-bootstrap"
else
  hostmakedepends+=" asciidoc"
  hostmakedepends+=" perl"
fi
homepage="https://ccache.samba.org"
license="GPL-3.0-or-later"
changelog="https://ccache.dev/releasenotes.html"
distfiles="https://github.com/ccache/ccache/releases/download/v$version/$pkgname-$version.tar.xz"
checksum="2f14b11888c39778c93814fc6843fc25ad60ff6ba4eeee3dff29a1bad67ba94f"
build_style="cmake"
configure_args="-DENABLE_TESTING=OFF"
if [[ -n "$CHROOT_READY" ]] && [[ -n "$XBPS_CHECK_PKGS" ]]; then
  configure_args+=" -DENABLE_TESTING=ON"
fi
bootstrap="yes"

post_install() {
  vmkdir usr/lib/ccache/bin
  # clang
  for f in clang \
           clang++; do
    ln -sfr "$DESTDIR/usr/bin/ccache" "$DESTDIR/usr/lib/ccache/bin/$f"
  done
  # gcc
  for f in c++ \
           cc \
           g++ \
           gcc; do
    ln -sfr "$DESTDIR/usr/bin/ccache" "$DESTDIR/usr/lib/ccache/bin/$f"
    for x in aarch64-linux-gnu \
             aarch64-linux-musl \
             arm-linux-gnueabi \
             arm-linux-gnueabihf \
             arm-linux-musleabihf \
             armv7l-linux-gnueabihf \
             armv7l-linux-musleabihf \
             i686-linux-musl \
             i686-pc-linux-gnu \
             mips-linux-musl \
             mips-linux-muslhf \
             mipsel-linux-musl \
             mipsel-linux-muslhf \
             powerpc-linux-gnu \
             powerpc-linux-musl \
             powerpcle-linux-gnu \
             powerpcle-linux-musl \
             powerpc64-linux-gnu \
             powerpc64-linux-musl \
             powerpc64le-linux-gnu \
             powerpc64le-linux-musl; do
      ln -sfr "$DESTDIR/usr/bin/ccache" "$DESTDIR/usr/lib/ccache/bin/$x-$f"
    done
  done
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

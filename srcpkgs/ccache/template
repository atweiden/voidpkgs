maintainer="nox"
pkgname="ccache"
version=4.8.2
revision=1
short_desc="Fast C/C++ Compiler Cache"
makedepends="libzstd-devel"
hostmakedepends="perl"
homepage="https://ccache.dev"
license="GPL-3.0-or-later"
changelog="https://ccache.dev/releasenotes.html"
distfiles+=" https://github.com/ccache/ccache/releases/download/v$version/$pkgname-$version.tar.xz"
distfiles+=" https://github.com/ccache/ccache/releases/download/v$version/$pkgname-$version-linux-x86_64.tar.xz"
checksum+=" 3d3fb3f888a5b16c4fa7ee5214cca76348afd6130e8443de5f6f2424f2076a49"
checksum+=" 0b33f39766fe9db67f40418aed6a5b3d7b2f4f7fab025a8213264b77a2d0e1b1"
build_style="cmake"
configure_args+=" -DENABLE_DOCUMENTATION=OFF"
configure_args+=" -DENABLE_TESTING=OFF"
configure_args+=" -DREDIS_STORAGE_BACKEND=OFF"
if [[ -n "$XBPS_CHECK_PKGS" ]]; then
  configure_args+=" -DENABLE_TESTING=ON"
fi

post_extract() {
  mv "ccache-$version"/* .
}

post_install() {
  vmkdir usr/lib/ccache/bin
  # clang
  for f in clang \
           clang++; do
    ln -sfr "$DESTDIR/usr/bin/ccache" "$DESTDIR/usr/lib/ccache/bin/$f"
  done
  # gcc
  for f in c++ \
           cc \
           g++ \
           gcc; do
    ln -sfr "$DESTDIR/usr/bin/ccache" "$DESTDIR/usr/lib/ccache/bin/$f"
    for x in aarch64-linux-gnu \
             aarch64-linux-musl \
             arm-linux-gnueabi \
             arm-linux-gnueabihf \
             arm-linux-musleabihf \
             armv7l-linux-gnueabihf \
             armv7l-linux-musleabihf \
             i686-linux-musl \
             i686-pc-linux-gnu \
             mips-linux-musl \
             mips-linux-muslhf \
             mipsel-linux-musl \
             mipsel-linux-muslhf \
             powerpc-linux-gnu \
             powerpc-linux-musl \
             powerpcle-linux-gnu \
             powerpcle-linux-musl \
             powerpc64-linux-gnu \
             powerpc64-linux-musl \
             powerpc64le-linux-gnu \
             powerpc64le-linux-musl; do
      ln -sfr "$DESTDIR/usr/bin/ccache" "$DESTDIR/usr/lib/ccache/bin/$x-$f"
    done
  done
  # pregenerated manpage to avoid bringing ruby into the build
  vman "ccache-$version-linux-x86_64/ccache.1"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

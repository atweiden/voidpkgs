maintainer="nox"
pkgname="ncurses"
version=6.2
revision=4
short_desc="System V Release 4.0 curses emulation library"
depends="ncurses-base-${version}_$revision"
if [[ -n "$CROSS_BUILD" ]]; then
  # needs host tic(1)
  hostmakedepends="ncurses"
fi
homepage="http://www.gnu.org/software/ncurses/"
license="MIT"
distfiles="$GNU_SITE/ncurses/$pkgname-$version.tar.gz"
checksum="30306e0c76e0f9f1f0de987cf1c82a5c21e1ce6568b9227f7da5b71cbea86c9d"
configure_args="--enable-big-core"
bootstrap="yes"

do_configure() {
  export CFLAGS="$CFLAGS -fPIC"
  export BUILD_CFLAGS="$BUILD_CFLAGS -fPIC"

  mkdir -p ncurses-build
  mkdir -p ncursesw-build

  cd "$wrksrc/ncursesw-build"
  # widec build
  ../configure \
    $configure_args \
    --enable-ext-colors \
    --enable-pc-files \
    --enable-widec \
    --with-manpage-format=normal \
    --with-manpage-symlinks \
    --with-pkg-config-libdir="/usr/lib/pkgconfig" \
    --with-shared \
    --without-ada \
    --without-debug \
    --without-tests \
    BUILD_CFLAGS="$BUILD_CFLAGS" \
    ac_cv_path_ac_pt_PKG_CONFIG="/usr/bin/pkg-config"

  cd "$wrksrc/ncurses-build"
  # non-widec build
  ../configure \
    $configure_args \
    --enable-pc-files \
    --with-pkg-config-libdir="/usr/lib/pkgconfig" \
    --with-shared \
    --without-ada \
    --without-debug \
    --without-tests \
    BUILD_CFLAGS="$BUILD_CFLAGS" \
    ac_cv_path_ac_pt_PKG_CONFIG="/usr/bin/pkg-config"
}

do_build() {
  cd "$wrksrc/ncursesw-build"
  make "$makejobs"

  cd "$wrksrc/ncurses-build"
  make "$makejobs"
}

do_install() {
  vlicense COPYING

  cd "$wrksrc/ncursesw-build"
  make DESTDIR="$DESTDIR" install

  # fool packages looking to link to non-wide-character ncurses libraries
  for lib in curses \
             form \
             menu \
             ncurses \
             panel; do
    rm -f "$DESTDIR/usr/lib/lib$lib.so"
    echo "INPUT(-l${lib}w)" >"$DESTDIR/usr/lib/lib$lib.so"
    chmod 755 "$DESTDIR/usr/lib/lib$lib.so"
    ln -sf "lib${lib}w.a" "$DESTDIR/usr/lib/lib$lib.a"
  done
  ln -sf libncurses++w.a "$DESTDIR/usr/lib/libncurses++.a"

  # some packages look for -lcurses during build
  rm -f "$DESTDIR/usr/lib/libcursesw.so"
  echo "INPUT(-lncursesw)" >"$DESTDIR/usr/lib/libcursesw.so"
  chmod 755 "$DESTDIR/usr/lib/libcursesw.so"
  ln -sf libncurses.so "$DESTDIR/usr/lib/libcurses.so"
  ln -sf libncursesw.a "$DESTDIR/usr/lib/libcursesw.a"
  ln -sf libncurses.a "$DESTDIR/usr/lib/libcurses.a"

  # non-widec compatibility library
  cd "$wrksrc/ncurses-build"
  install -Dm 755 "lib/libncurses.so.$version" \
    "$DESTDIR/usr/lib/libncurses.so.$version"
  ln -sf "libncurses.so.$version" \
    "$DESTDIR/usr/lib/libncurses.so.${version:0:1}"

  # create libtinfo symlinks
  ln -sfr "$DESTDIR/usr/lib/libncursesw.so" \
      "$DESTDIR/usr/lib/libtinfo.so"
  ln -sfr "$DESTDIR/usr/lib/libncursesw.so.$version" \
      "$DESTDIR/usr/lib/libtinfo.so.$version"
  ln -sfr "$DESTDIR/usr/lib/libtinfo.so.$version" \
      "$DESTDIR/usr/lib/libtinfo.so.${version:0:1}"
  ln -sfr "$DESTDIR/usr/lib/pkgconfig/ncursesw.pc" \
      "$DESTDIR/usr/lib/pkgconfig/tinfo.pc"

  # remove broken symlink
  rm -f "$DESTDIR/usr/lib/terminfo"

  if [[ -n "$CROSS_BUILD" ]]; then
    sed \
      -i \
      -e "s,-L$XBPS_CROSS_BASE,-L,g" \
      "$DESTDIR/usr/bin/ncursesw6-config"
  fi
}

ncurses-libs_package() {
  short_desc+=" - shared libraries"
  pkg_install() {
    vmove "usr/lib/libform*.so.*"
    vmove "usr/lib/libmenu*.so.*"
    vmove "usr/lib/libncurses*.so.*"
    vmove "usr/lib/libpanel*.so.*"
  }
}

ncurses-devel_package() {
  depends="ncurses-libs-${version}_$revision"
  short_desc+=" - development files"
  pkg_install() {
    vmove "usr/bin/ncurses*-config"
    vmove usr/include
    vmove usr/lib/pkgconfig/ncursesw.pc
    vmove usr/lib/pkgconfig/formw.pc
    vmove usr/lib/pkgconfig/menuw.pc
    vmove usr/lib/pkgconfig/ncurses++w.pc
    vmove usr/lib/pkgconfig/panelw.pc
    vmove "usr/lib/*.a"
    vmove "usr/lib/libcurses*.so"
    vmove "usr/lib/libform*.so"
    vmove "usr/lib/libmenu*.so"
    vmove "usr/lib/libncurses*.so"
    vmove "usr/lib/libpanel*.so"
    vmove usr/share/man/man3
    vmove usr/share/man/man1/ncursesw6-config.1
  }
}

ncurses-base_package() {
  short_desc+=" - base terminfo files"
  pkg_install() {
    cat "$FILESDIR/base-files" | while read line; do
      vmove "$line"
    done
  }
}

ncurses-term_package() {
  depends="ncurses-base-${version}_$revision"
  short_desc+=" - full terminal descriptions"
  pkg_install() {
    vmove usr/share/tabset
    vmove usr/share/terminfo
  }
}

ncurses-libtinfo-libs_package() {
  lib32disabled="yes"
  depends="ncurses-libs-${version}_$revision"
  short_desc+=" - libtinfo.so symlink"
  pkg_install() {
    vmove "usr/lib/libtinfo*.so.*"
  }
}

ncurses-libtinfo-devel_package() {
  lib32disabled="yes"
  depends="ncurses-devel-${version}_$revision"
  depends+=" ncurses-libtinfo-libs-${version}_$revision"
  short_desc+=" - libtinfo.so symlink - development files"
  pkg_install() {
    vmove usr/lib/libtinfo.so
    vmove "usr/lib/pkgconfig/tinfo.pc"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

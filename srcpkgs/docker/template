maintainer="nox"
pkgname="docker"
version=19.03.9
revision=1
short_desc="Pack, ship and run any application as a lightweight container"
archs+=" aarch64*"
archs+=" armv7l*"
archs+=" ppc64le*"
archs+=" x86_64*"
depends+=" containerd"
depends+=" git"
depends+=" iptables"
depends+=" runc"
depends+=" xz"
makedepends+=" device-mapper-devel"
makedepends+=" libapparmor-devel"
makedepends+=" libbtrfs-devel"
makedepends+=" libltdl-devel"
makedepends+=" libseccomp-devel"
makedepends+=" sqlite-devel"
hostmakedepends+=" cmake"
hostmakedepends+=" curl"
hostmakedepends+=" git"
hostmakedepends+=" go"
hostmakedepends+=" pkg-config"
hostmakedepends+=" tar"
homepage="http://www.docker.io"
license="Apache-2.0"
distfiles="https://github.com/docker/docker-ce/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="f1b9e28e789516b4ba741cc4683c2c088e8c4893e2acbd7ac272a75ddeccc1a1"
wrksrc="$pkgname-ce-$version"
nopie="yes"
nostrip="yes"
nocross="yes"
system_groups="docker"

_docker_components+=" tini"
_docker_components+=" proxy"
_docker_components+=" dockercli"

do_build() {
  cd components/cli
  # AUTO_GOPATH=1 doesn't seem to work for cli
  rm -rf .gopath
  mkdir -p .gopath/src/github.com/docker
  ln -sf "$wrksrc/components/cli" .gopath/src/github.com/docker/
  GOPATH="$wrksrc/components/cli/.gopath" \
  LDFLAGS="" \
    make VERSION="$version" dynbinary
  rm -rf .gopath

  cd ../../components/engine
  AUTO_GOPATH=1 \
  DOCKER_BUILDTAGS="seccomp apparmor" \
  VERSION="$version" \
  DOCKER_GITCOMMIT="v$version" \
    hack/make.sh dynbinary
}

pre_build() {
  cd components/engine
  vmkdir usr/bin
  vsed \
    -i \
    -e "s|/usr/local|$DESTDIR/usr|g" \
    hack/dockerfile/install/install.sh
  for COMPONENT in $_docker_components; do
    AUTO_GOPATH=1 \
    LDFLAGS="" \
    DOCKER_BUILDTAGS="seccomp apparmor" \
    DOCKER_GITCOMMIT="v$version" \
      hack/dockerfile/install/install.sh "$COMPONENT"
  done
}

do_install() {
  vbin components/engine/bundles/dynbinary-daemon/dockerd dockerd
  vbin components/cli/build/docker docker
  vinstall components/cli/contrib/completion/bash/docker 644 \
    usr/share/bash-completion/completions
  vinstall components/cli/contrib/completion/zsh/_docker 644 \
    usr/share/zsh/site-functions
  vinstall components/cli/contrib/completion/fish/docker.fish 644 \
    usr/share/fish/vendor_completions.d
  vinstall components/engine/contrib/syntax/vim/syntax/dockerfile.vim 644 \
    usr/share/vim/vimfiles/snytax/dockerfile.vim
  vinstall components/engine/contrib/syntax/vim/ftdetect/dockerfile.vim 644 \
    usr/share/vim/vimfiles/ftdetect/dockerfile.vim
  vsv docker
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

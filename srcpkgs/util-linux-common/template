# keep this package sync with util-linux
maintainer="nox"
pkgname="util-linux-common"
version=2.38.1
revision=1
short_desc="Miscellaneous linux utilities - common files"
makedepends+=" libcap-ng-devel"
makedepends+=" pam-devel"
makedepends+=" readline-devel"
makedepends+=" zlib-devel"
checkdepends+=" bc"
checkdepends+=" iproute2"
checkdepends+=" procps-ng"
checkdepends+=" socat"
checkdepends+=" tar"
checkdepends+=" xz"
hostmakedepends+=" gettext"
hostmakedepends+=" pkg-config"
homepage="https://www.kernel.org/pub/linux/utils/util-linux/"
license="LGPL-2.1-or-later"
distfiles="$KERNEL_SITE/utils/util-linux/v2.36/util-linux-$version.tar.xz"
checksum="60492a19b44e6cf9a3ddff68325b333b8b52b6c59ce3ebd6a0ecaa4c5117e84f"
build_style="gnu-configure"
configure_args+=" --disable-makeinstall-chown"
configure_args+=" --disable-rpath"
configure_args+=" --enable-chfn-chsh"
configure_args+=" --enable-fs-paths-extra=/usr/sbin:/usr/bin"
configure_args+=" --enable-fsck"
configure_args+=" --enable-libblkid"
configure_args+=" --enable-libuuid"
configure_args+=" --enable-newgrp"
configure_args+=" --enable-vipw"
configure_args+=" --enable-write"
configure_args+=" --exec-prefix=\${prefix}"
configure_args+=" --with-systemdsystemunitdir=no"
configure_args+=" --without-python"
configure_args+=" --without-udev"

post_extract() {
  # hung inside xbps-src
  rm -f tests/ts/lsns/ioctl_ns
  if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
    # known broken
    rm -f tests/ts/col/multibyte
  fi
}

do_install() {
  make \
    DESTDIR="$DESTDIR" \
    usrsbin_execdir="/usr/bin" \
    install
  # those files will be provided by util-linux
  rm -rf "$DESTDIR/usr/bin"
  rm -rf "$DESTDIR/usr/share/man/man1"
  rm -rf "$DESTDIR/usr/share/man/man5"
  rm -rf "$DESTDIR/usr/share/man/man8"
  rm -rf "$DESTDIR/usr/share/bash-completion"
  rm -rf "$DESTDIR/usr/share/doc/"
  # some libraries have i18n text
  # rm -rf "$DESTDIR/usr/share/locale"
}

util-linux-libs_package() {
  unset depends
  short_desc+=" - meta libraries"
  build_style="meta"
  depends+=" libblkid>=${version}_$revision"
  depends+=" libfdisk>=${version}_$revision"
  depends+=" libmount>=${version}_$revision"
  depends+=" libsmartcols>=${version}_$revision"
  depends+=" libuuid>=${version}_$revision"
}

libfdisk_package() {
  short_desc="Library for fdisk(8)"
  depends="$sourcepkg>=${version}_1"
  pkg_install() {
    vmove "usr/lib/libfdisk.so.*"
  }
}

libfdisk-devel_package() {
  unset depends
  depends+=" libblkid-devel>=${version}_1<=${version}_9999"
  depends+=" libfdisk>=${version}_1<=${version}_9999"
  short_desc="Library for fdisk(8) - development files"
  pkg_install() {
    vmove usr/lib/libfdisk.a
    vmove usr/lib/libfdisk.so
    vmove "usr/lib/pkgconfig/*fdisk*"
    vmove usr/include/libfdisk
  }
}

libmount_package() {
  short_desc="Library for mount(8)"
  depends="$sourcepkg>=${version}_1"
  pkg_install() {
    vmove "usr/lib/libmount.so.*"
  }
}

libmount-devel_package() {
  unset depends
  depends+=" libblkid-devel>=${version}_1<=${version}_9999"
  depends+=" libmount>=${version}_1<=${version}_9999"
  short_desc="Library for mount(8) - development files"
  pkg_install() {
    vmove usr/lib/libmount.a
    vmove usr/lib/libmount.so
    vmove "usr/lib/pkgconfig/*mount*"
    vmove usr/include/libmount
  }
}

libblkid_package() {
  short_desc="Library to handle device identification"
  depends="$sourcepkg>=${version}_1"
  pkg_install() {
    vmove "usr/lib/libblkid.so.*"
  }
}

libblkid-devel_package() {
  unset depends
  depends+=" libblkid>=${version}_1<=${version}_9999"
  depends+=" libuuid-devel>=${version}_1<=${version}_9999"
  depends+=" zlib-devel"
  short_desc="Library to handle device identification - development files"
  pkg_install() {
    vmove usr/include/blkid
    vmove usr/lib/libblkid.a
    vmove usr/lib/libblkid.so
    vmove usr/lib/pkgconfig/blkid.pc
    vmove usr/share/man/man3/libblkid.3
  }
}

libuuid_package() {
  short_desc="UUID library"
  depends="$sourcepkg>=${version}_1"
  license="BSD-3-Clause"
  pkg_install() {
    {
      grep Copyright libuuid/src/*.c
      cat Documentation/licenses/COPYING.BSD-3-Clause
    } > uuid.license
    vlicense uuid.license
    vmove "usr/lib/libuuid.so.*"
  }
}

libuuid-devel_package() {
  depends="libuuid>=${version}_${revision}<=${version}_9999"
  short_desc="UUID library development files"
  license="BSD-3-Clause"
  pkg_install() {
    vmove usr/lib/libuuid.a
    vmove usr/lib/libuuid.so
    vmove usr/lib/pkgconfig
    vmove usr/include/uuid
    vmove "usr/share/man/man3/uuid*"
  }
}

libsmartcols-devel_package() {
  depends="libsmartcols>=${version}_${revision}<=${version}_9999"
  short_desc="Table or Tree library from util-linux - development files"
  pkg_install() {
    vmove usr/lib/libsmartcols.a
    vmove usr/lib/libsmartcols.so
    vmove usr/include/libsmartcols
    vmove "usr/lib/pkgconfig/smartcols*"
  }
}

libsmartcols_package() {
  short_desc="Table or Tree library from util-linux"
  depends="$sourcepkg>=${version}_1"
  pkg_install() {
    vmove "usr/lib/libsmartcols.so.*"
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

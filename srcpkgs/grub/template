maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="grub"
version=2.02
revision=3
short_desc="GRand Unified Bootloader 2"
only_for_archs+=" aarch64"
only_for_archs+=" aarch64-musl"
only_for_archs+=" i686"
only_for_archs+=" i686-musl"
only_for_archs+=" x86_64"
only_for_archs+=" x86_64-musl"
depends="os-prober"
makedepends+=" device-mapper-devel"
makedepends+=" fuse-devel"
makedepends+=" liblzma-devel"
makedepends+=" libusb-compat-devel"
makedepends+=" ncurses-devel"
hostmakedepends="flex"
license="GPL-3"
homepage="https://www.gnu.org/software/grub/"
distfiles="$GNU_SITE/grub/$pkgname-$version.tar.xz"
checksum="810b3798d316394f94096ec2797909dbf23c858e48f7b3830826b8daa06b7b0f"
conf_files+=" /etc/default/grub"
conf_files+=" /etc/grub.d/*"
nopie="yes"
subpackages+=" grub-utils"

# _SUPPLEMENTARY_BUILDS is a list of <TARGET>-<PLATFORM> versions of
# grub to build
case "$XBPS_TARGET_MACHINE" in
  x86_64*)
    _NATIVE_PLATFORM="pc"
    _SUPPLEMENTARY_BUILDS+=" i386-efi"
    _SUPPLEMENTARY_BUILDS+=" x86_64-efi"
    subpackages+=" grub-i386-efi"
    subpackages+=" grub-x86_64-efi"
    ;;
  i686*)
    configure_args+=" ac_cv_sizeof_off_t=8"
    CFLAGS="-D_FILE_OFFSET_BITS=64"
    _NATIVE_PLATFORM="pc"
    _SUPPLEMENTARY_BUILDS="i386-efi"
    subpackages+=" grub-i386-efi"
    ;;
  aarch64*)
    _NATIVE_PLATFORM="efi"
    subpackages+=" grub-arm64-efi"
    ;;
esac

post_extract() {
  sed \
    -i \
    -e 's,freetype/ftsynth.h,freetype2/ftsynth.h,' \
    util/grub-mkfont.c
}

do_configure() {
  unset AS
  unset CC
  unset CPP
  unset LD
  unset RANLIB

  CFLAGS+=" -fno-stack-protector"

  configure_args+=" --disable-grub-mkfont"
  configure_args+=" --disable-werror"
  configure_args+=" --enable-cache-stats"
  configure_args+=" --enable-device-mapper"
  configure_args+=" --enable-grub-mount"
  configure_args+=" --enable-nls"
  configure_args+=" --sbindir=/usr/bin"
  configure_args+=" --with-gnu-ld"

  # fix unifont.bdf location so grub-mkfont can create *.pf2 files
  sed \
    -i \
    -e 's|/usr/share/fonts/unifont|/usr/share/fonts/misc|' \
    configure

  # build tools
  _configure_args="$configure_args"
  if [[ -n "$_NATIVE_PLATFORM" ]]; then
    _configure_args+=" --with-platform=$_NATIVE_PLATFORM"
  fi
  msg_normal "Configuring grub tools...\n"
  mkdir "$wrksrc/build"
  cd "$wrksrc/build"
  ../configure \
    $_configure_args \
    --host="$XBPS_TARGET_MACHINE"

  for _SUPP_BUILD in $_SUPPLEMENTARY_BUILDS; do
    _TARGET="${_SUPP_BUILD%%-*}"
    _PLATFORM="${_SUPP_BUILD##*-}"
    msg_normal "Configuring $_TARGET $_PLATFORM grub...\n"
    mkdir "$wrksrc/${_PLATFORM}_${_TARGET}_build"
    cd "$wrksrc/${_PLATFORM}_${_TARGET}_build"
    ../configure \
      $configure_args \
      --disable-efiemu \
      --host="$XBPS_TARGET_MACHINE" \
      --libdir="/usr/lib" \
      --target="$_TARGET" \
      --with-platform="$_PLATFORM"
  done
}

do_build() {
  # XXX remove the strip wrapper
  rm "$XBPS_WRAPPERDIR/strip"

  msg_normal "Building grub tools...\n"
  cd "$wrksrc/build"
  make "$makejobs" &> make.log \
    || tail -n 100 make.log

  for _SUPP_BUILD in $_SUPPLEMENTARY_BUILDS; do
    _TARGET="${_SUPP_BUILD%%-*}"
    _PLATFORM="${_SUPP_BUILD##*-}"
    msg_normal "Building $_TARGET $_PLATFORM grub...\n"
    cd "$wrksrc/${_PLATFORM}_${_TARGET}_build"
    make "$makejobs" &> make.log \
      || tail -n 100 make.log
  done
}

do_install() {
  # XXX remove the strip wrapper
  rm "$XBPS_WRAPPERDIR/strip"

  for _SUPP_BUILD in $_SUPPLEMENTARY_BUILDS; do
    _TARGET="${_SUPP_BUILD%%-*}"
    _GRUB_TARGET="$_TARGET"
    case "$_GRUB_TARGET" in
    aarch64*)
      _GRUB_TARGET="arm64"
      ;;
    esac
    _PLATFORM="${_SUPP_BUILD##*-}"
    cd "$wrksrc/${_PLATFORM}_${_TARGET}_build"
    make DESTDIR="$DESTDIR/${_PLATFORM}_$_TARGET" install
    # remove non-platform specific files
    rm -rf "$DESTDIR/${_PLATFORM}_$_TARGET"/{boot,etc,usr/{share,bin}}
    rm -f "$DESTDIR/${_PLATFORM}_$_TARGET/usr/lib/grub/$_GRUB_TARGET-$_PLATFORM"/$_GRUB_TARGET-*
    rm -f "$DESTDIR/${_PLATFORM}_$_TARGET/usr/lib/grub/$_GRUB_TARGET-$_PLATFORM"/*.{module,image}
    cp -r "$DESTDIR/${_PLATFORM}_$_TARGET"/* "$DESTDIR"
    rm -rf "$DESTDIR/${_PLATFORM}_${_TARGET}"
  done

  cd "$wrksrc/build"
  make DESTDIR="$DESTDIR" install

  # required to compress info files
  vmkdir usr/share/info
  touch -f "$DESTDIR/usr/share/info/dir"

  vinstall "$FILESDIR/grub.default" 644 etc/default grub

  # kernel hooks
  vinstall "$FILESDIR/kernel.d/grub.post" 750 etc/kernel.d/post-install 50-grub
  vinstall "$FILESDIR/kernel.d/grub.post" 750 etc/kernel.d/post-remove 50-grub

  # add update-grub executable for newbs
  printf "#!/bin/sh\ngrub-mkconfig -o /boot/grub/grub.cfg\nexit \$?\n" >> \
    "$DESTDIR/usr/bin/update-grub"
  chmod 755 "$DESTDIR/usr/bin/update-grub"

  vmkdir usr/share/bash-completion/completions
  mv \
    "$DESTDIR/etc/bash_completion.d/grub" \
    "$DESTDIR/usr/share/bash-completion/completions"

  # remove useless tools
  rm "$DESTDIR/usr/bin/grub-ofpathname"
  rm "$DESTDIR/usr/bin/grub-sparc64-setup"
}

grub-utils_package() {
  short_desc+=" - additional utilities"
  depends="grub>=$version"
  pkg_install() {
    vmove usr/bin/grub-menulst2cfg
    vmove usr/bin/grub-fstest
  }
}

grub-x86_64-efi_package() {
  unset depends
  noarch="yes"
  depends+=" dosfstools"
  depends+=" efibootmgr"
  depends+=" grub>=$version"
  short_desc+=" - x86_64 EFI support"
  pkg_install() {
    vmove usr/lib/grub/x86_64-efi
  }
}

grub-i386-efi_package() {
  unset depends
  noarch="yes"
  depends+=" dosfstools"
  depends+=" efibootmgr"
  depends+=" grub>=$version"
  short_desc+=" - i386 EFI support"
  pkg_install() {
    vmove usr/lib/grub/i386-efi
  }
}

grub-arm64-efi_package() {
  unset depends
  noarch="yes"
  depends+=" dosfstools"
  depends+=" efibootmgr"
  depends+=" grub>=$version"
  short_desc+=" - arm64 EFI support"
  pkg_install() {
    vmove usr/lib/grub/arm64-efi
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="zfs-lts"
version=2.1.13
revision=2
short_desc="Z File System -- userland, pyzfs, and kernel modules (using DKMS)"
depends+=" dkms>=2.2.0.3_9"
depends+=" libzfs-lts>=${version}_$revision"
depends+=" perl"
depends+=" python3"
depends+=" xbps-triggers>=0.121_1"
makedepends+=" attr-devel"
makedepends+=" libblkid-devel"
makedepends+=" libtirpc-devel"
makedepends+=" libuuid-devel"
makedepends+=" pam-devel"
makedepends+=" zlib-devel"
hostmakedepends+=" automake"
hostmakedepends+=" dracut"
hostmakedepends+=" libtool"
hostmakedepends+=" pkg-config"
hostmakedepends+=" python3"
homepage="https://openzfs.github.io/openzfs-docs/"
license="CDDL-1.0"
distfiles="https://github.com/openzfs/zfs/releases/download/$pkgname-$version/$pkgname-$version.tar.gz"
checksum="06b24cbb3cbc1554e2edf2fcd71d1f8bec4febf4412aeac17070877c44302abd"
conf_files="/etc/zfs/zed.d/zed.rc"
build_style="gnu-configure"
configure_args+=" --with-config=user"
configure_args+=" --with-dracutdir=/usr/lib/dracut"
configure_args+=" --with-mounthelperdir=/usr/bin"
configure_args+=" --with-tirpc"
configure_args+=" --with-udevdir=/usr/lib/udev"
configure_args+=" --with-udevruledir=/usr/lib/udev/rules.d"
# dkms must be before initramfs-regenerate to build modules before images
triggers+=" dkms"
triggers+=" initramfs-regenerate"
dkms_modules="zfs $version"
provides="zfs-${version}_$revision"
# because spl was merged into zfs in 0.8.0
replaces+=" spl<=0.7.13_1"
replaces+=" zfs>=0"

pre_configure() {
  export CFLAGS+=" -I$XBPS_CROSS_BASE/usr/include/tirpc/"
  autoreconf -fi
}

post_install() {
  vlicense COPYRIGHT
  vlicense LICENSE
  vlicense NOTICE

  vsv zed

  make dist-gzip
  vmkdir usr/src/
  tar xf "${pkgname/%-lts}-$version.tar.gz" -C "$DESTDIR/usr/src/"
  scripts/dkms.mkconf -v "$version" -f "$DESTDIR/usr/src/${pkgname/%-lts}-$version/dkms.conf" -n zfs

  # remove init and service control pieces not used in void
  rm -rf "$DESTDIR/usr/lib/systemd"
  rm -rf "$DESTDIR/etc/init.d"
  rm -rf "$DESTDIR/etc/default"
  rm -f "$DESTDIR/etc/zfs/zfs-functions"

  # remove pam config framework file not used in void
  rm -f "$DESTDIR/usr/share/pam-configs/zfs_key"

  # zfs-mount-generator is a systemd helper, no need for its man page
  rm -f "$DESTDIR/usr/share/man/man8/zfs-mount-generator.8"

  # contains ELF binaries, remove it until upstream has a way to move
  # this into /usr/libexec or similiar
  rm -rf "$DESTDIR/usr/share/zfs/zfs-tests"
}

libzfs-lts_package() {
  short_desc="Z File System - libraries"
  provides="libzfs-${version}_$revision"
  replaces="libzfs>=0"
  pkg_install() {
    vmove "usr/lib/*.so.*"
  }
}

zfs-lts-devel_package() {
  depends="libzfs>=${version}_$revision"
  short_desc="Z File System -- development files"
  provides="zfs-devel-${version}_$revision"
  replaces="zfs-devel>=0"
  pkg_install() {
    vmove usr/include
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
    vmove usr/lib/pkgconfig
  }
}

zfs-lts-pam_package() {
  depends="$sourcepkg>=${version}_$revision"
  short_desc="Z File System -- PAM integration"
  provides="zfs-pam-${version}_$revision"
  replaces="zfs-pam>=0"
  pkg_install() {
    vmove usr/lib/security/pam_zfs_key.so
  }
}

# REMARKS:
#
# Did not split out pyzfs, because it's distributed with zfs, and no
# reason to send separately.

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

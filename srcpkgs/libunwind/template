maintainer="nox"
pkgname="libunwind"
version=1.8.0
revision=1
short_desc="Library to determine the call-chain of a program"
makedepends="liblzma-devel"
if [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  checkdepends+=" libexecinfo-devel"
fi
hostmakedepends+=" automake"
hostmakedepends+=" libtool"
homepage="https://www.nongnu.org/libunwind/"
license="MIT"
distfiles="https://github.com/libunwind/libunwind/releases/download/v$version/$pkgname-$version.tar.gz"
checksum="b6b3df40a0970c8f2865fb39aa2af7b5d6f12ad6c5774e266ccca4d6b8b72268"
build_style="gnu-configure"
# many test failures
make_check="no"

CFLAGS="-fcommon"

# enable C++ exception handling (doesn't work too well on x86)
case "$XBPS_TARGET_MACHINE" in
  x86_64*|i686*)
    ;;
  *)
    configure_args+=" --enable-cxx-exceptions"
    ;;
esac

# LDFLAGS is necessary because libunwind.so uses getcontext/setcontext
case "$XBPS_TARGET_MACHINE" in
  i686-musl)
    LDFLAGS=" -lssp_nonshared"
    ;;
  ppc64*-musl)
    makedepends+=" libucontext-devel"
    LDFLAGS=" -lucontext"
    ;;
  ppc*-musl)
    makedepends+=" libucontext-devel"
    LDFLAGS=" -lucontext -lssp_nonshared"
    ;;
  mips*-musl)
    CLAGS="-D_MIPS_SIM=_ABI32"
    ;;
  *)
    ;;
esac

pre_configure() {
  # unw_getcontext is just getcontext on ppc*, separate lib for musl
  # it needs to be here because it's used directly in a macro in a public
  # header, so things using libunwind need linkage against it
  case "$XBPS_TARGET_MACHINE" in
    i686-musl|ppc*-musl)
      vsed \
        -i \
        -e 's/\-lunwind/\-lunwind \-lucontext/' \
        src/unwind/libunwind.pc.in
      ;;
  esac

  autoreconf -fi
}

post_install() {
  vlicense COPYING LICENSE
}

libunwind-devel_package() {
  depends="$sourcepkg>=$version"
  case "$XBPS_TARGET_MACHINE" in
    i686-musl|ppc*-musl)
      depends+=" libucontext-devel"
      ;;
    *)
      ;;
  esac
  short_desc+=" - development files"
  pkg_install() {
    vmove usr/include
    vmove usr/lib/pkgconfig
    vmove "usr/lib/*.a"
    vmove "usr/lib/*.so"
    vmove usr/share
  }
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="Andy Weidenbaum <archbaum@gmail.com>"
pkgname="gdb"
version=8.3.1
revision=3
short_desc="GNU Debugger"
makedepends+=" babeltrace-devel"
makedepends+=" expat-devel"
makedepends+=" guile-devel"
makedepends+=" liblzma-devel"
makedepends+=" libunwind-devel"
makedepends+=" mpfr-devel"
makedepends+=" ncurses-devel"
makedepends+=" readline-devel"
makedepends+=" zlib-devel"
makedepends+=" $(vopt_if python 'python3-devel gettext-libs')"
hostmakedepends+=" perl"
hostmakedepends+=" pkg-config"
hostmakedepends+=" $(vopt_if python python3-devel)"
homepage="https://www.gnu.org/software/gdb/"
license="GPL-3.0-or-later"
distfiles="$GNU_SITE/gdb/$pkgname-$version.tar.xz"
checksum="1e55b4d7cdca7b34be12f4ceae651623aa73b2fd640152313f9f66a7149757c4"
patch_args="-Np1"
build_style="gnu-configure"
configure_args+=" --disable-nls"
configure_args+=" --disable-werror"
configure_args+=" --with-system-gdbinit=/etc/gdb/gdbinit"
configure_args+=" --with-system-readline"
configure_args+=" --with-system-zlib"
configure_args+=" $(vopt_enable gdbserver)"
configure_args+=" $(vopt_if static 'CFLAGS=-static CXXFLAGS=-static LDFLAGS=-static')"
configure_args+=" $(vopt_if python --with-python=/usr/bin/python3)"
pycompile_dirs="/usr/share/gdb"
build_options+=" gdbserver"
build_options+=" python"
build_options+=" static"
desc_option_gdbserver="Enable support for building GDB server"
# enable gdbserver if !static
build_options_default+=" gdbserver"
build_options_default+=" python"
# both options cannot be enabled at the same time
vopt_conflict gdbserver static

if [[ -n "$CROSS_BUILD" ]]; then
  # make python3.x detection work in cross builds
  CFLAGS+=" -I$XBPS_CROSS_BASE/$py3_inc"
  CXXFLAGS+=" -I$XBPS_CROSS_BASE/$py3_inc"
fi

post_extract() {
  sed \
    -i \
    -e 's,sgidefs.h,asm/sgidefs.h,' \
    gdb/mips-linux-nat.c
  # fixes aarch64-musl cross-build
  sed \
    -i \
    -e "s/@REPLACE_STAT@/0/" \
    gdb/gnulib/import/sys_stat.in.h
}

pre_configure() {
  configure_args="${configure_args/with-sysroot/with-build-sysroot}"
}

pre_build() {
  export gl_cv_func_gettimeofday_clobber="no"
  export gl_cv_func_strerror_0_works="yes"
  export gl_cv_func_working_strerror="yes"
}

post_install() {
  # resolve conflicts with binutils
  rm -rf "$DESTDIR/usr/include" "$DESTDIR/usr/lib"
  [[ -d "$DESTDIR/usr/lib64" ]] && rm -rf "$DESTDIR/usr/lib64"
  for f in bfd \
           configure \
           standards; do
    rm -f "$DESTDIR/usr/share/info/$f".info*
  done
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

maintainer="nox"
pkgname="gdb"
version=10.1
revision=3
short_desc="GNU Debugger"
makedepends+=" expat-devel"
makedepends+=" guile-devel"
makedepends+=" liblzma-devel"
makedepends+=" libunwind-devel"
makedepends+=" mpfr-devel"
makedepends+=" ncurses-devel"
makedepends+=" readline-devel"
makedepends+=" zlib-devel"
makedepends+=" $(vopt_if debuginfod elfutils-devel)"
makedepends+=" $(vopt_if python python3-devel)"
if [[ -n "$build_option_python" ]] && [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
  makedepends+=" gettext-libs"
fi
hostmakedepends+=" perl"
hostmakedepends+=" pkg-config"
hostmakedepends+=" texinfo"
hostmakedepends+=" $(vopt_if python python3-devel)"
homepage="https://www.gnu.org/software/gdb/"
license="GPL-3.0-or-later"
distfiles="$GNU_SITE/gdb/$pkgname-$version.tar.xz"
checksum="f82f1eceeec14a3afa2de8d9b0d3c91d5a3820e23e0a01bbb70ef9f0276b62c0"
patch_args="-Np1"
build_style="gnu-configure"
configure_args+=" --disable-nls"
configure_args+=" --disable-werror"
configure_args+=" --with-system-gdbinit=/etc/gdb/gdbinit"
configure_args+=" --with-system-readline"
configure_args+=" --with-system-zlib"
configure_args+=" $(vopt_enable gdbserver)"
configure_args+=" $(vopt_if static 'CFLAGS=-static CXXFLAGS=-static LDFLAGS=-static')"
configure_args+=" $(vopt_if python --with-python=/usr/bin/python3)"
configure_args+=" $(vopt_with debuginfod)"
python_version=3
pycompile_dirs="/usr/share/gdb/python"
build_options+=" debuginfod"
build_options+=" gdbserver"
build_options+=" python"
build_options+=" static"
desc_option_gdbserver="Enable support for building GDB server"
# enable gdbserver if !static
build_options_default+=" debuginfod"
build_options_default+=" gdbserver"
build_options_default+=" python"
# both options cannot be enabled at the same time
vopt_conflict "gdbserver" "static"

if [[ -n "$CROSS_BUILD" ]]; then
  # make python3.x detection work in cross builds
  CFLAGS="-I$XBPS_CROSS_BASE/$py3_inc"
  CXXFLAGS="-I$XBPS_CROSS_BASE/$py3_inc"
fi

CFLAGS+=" -fcommon"
CXXFLAGS+=" -fcommon"

post_extract() {
  vsed \
    -i \
    -e 's,sgidefs.h,asm/sgidefs.h,' \
    gdb/mips-linux-nat.c
  mkdir -p build
}

do_configure() {
  cd build
  ../configure \
    "${configure_args/with-sysroot/with-build-sysroot}" \
    CFLAGS_FOR_BUILD="$CFLAGS_FOR_BUILD -fcommon"
  export gl_cv_func_gettimeofday_clobber="no"
  export gl_cv_func_strerror_0_works="yes"
  export gl_cv_func_working_strerror="yes"
}

do_build() {
  cd build
  make \
    "$makejobs" \
    all
}

do_install() {
  cd build
  make \
    DESTDIR="$DESTDIR" \
    "$makejobs" \
    install
  # resolve conflicts with binutils
  rm -rf "$DESTDIR/usr"/{include,lib,lib64}
  for f in bfd \
           configure \
           standards; do
    rm -f "$DESTDIR/usr/share/info"/$f.info*
  done
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

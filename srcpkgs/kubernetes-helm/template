maintainer="nox"
pkgname="kubernetes-helm"
version=3.1.0
revision=1
short_desc="Kubernetes Package Manager"
hostmakedepends+=" git"
hostmakedepends+=" go"
hostmakedepends+=" make"
hostmakedepends+=" mercurial"
hostmakedepends+=" tar"
homepage="https://helm.sh/"
license="Apache-2.0"
distfiles="https://github.com/helm/helm/archive/v$version.tar.gz"
checksum="46799de982807cd3e215c82f844f2a41c96c6c360d097797872517d03bceaeae"
wrksrc="helm-$version"
nopie="true"
conflicts="helm"

_convert_arch() {
  case "$1" in
    aarch64*)
      echo arm64
      ;;
    armv6*)
      echo arm
      ;;
    armv7*)
      echo arm
      ;;
    i686*)
      echo 386
      ;;
    x86_64*)
      echo amd64
      ;;
    ppc64le*)
      echo ppc64le
      ;;
  esac
}

export _go_target_arch="$(_convert_arch "$XBPS_TARGET_MACHINE")"
export _go_host_arch="$(_convert_arch "$XBPS_MACHINE")"

do_extract() {
  mkdir -p golib/src/k8s.io/helm
  tar \
    -xvzf "$XBPS_SRCDISTDIR/$pkgname-$version/v$version.tar.gz" \
    -C golib/src/k8s.io/helm \
    --strip-components 1 \
    "helm-$version"
}

pre_build() {
  export GOPATH="$(pwd)/golib"
  # the current version of glide in the repository has a bug that prevents
  # building, so pull the current version from git
  CC="/bin/gcc" go get github.com/Masterminds/glide
  CC="/bin/gcc" go get github.com/mitchellh/gox
  CC="/bin/gcc" go install github.com/Masterminds/glide
  CC="/bin/gcc" go install github.com/mitchellh/gox
  PATH="$PATH:$(pwd)/golib/bin/"
  export PATH
}

do_build() {
  cd golib/src/k8s.io/helm
  TARGETS="linux/$_go_target_arch linux/$_go_host_arch" \
    make \
    build-cross \
    APP="..." \
    LDFLAGS="-X k8s.io/helm/pkg/version.Version=v$version -X k8s.io/helm/pkg/version.BuildMetadata="
  "_dist/linux-$_go_host_arch/helm" completion bash > completion.bash
  "_dist/linux-$_go_host_arch/helm" completion zsh > completion.zsh
}

do_install() {
  cd golib/src/k8s.io/helm
  # copy helm binary
  vbin "_dist/linux-$_go_target_arch/helm"
  # copy completion files
  vinstall completion.bash 644 usr/share/bash-completion/completions helm
  vinstall completion.zsh 644 "usr/share/$pkgname"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

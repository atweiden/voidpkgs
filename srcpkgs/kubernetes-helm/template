maintainer="nox"
pkgname="kubernetes-helm"
version=3.8.1
revision=1
short_desc="Kubernetes Package Manager"
hostmakedepends+=" git"
hostmakedepends+=" go"
hostmakedepends+=" make"
hostmakedepends+=" mercurial"
hostmakedepends+=" tar"
homepage="https://helm.sh/"
license="Apache-2.0"
distfiles="https://github.com/helm/helm/archive/v$version.tar.gz>$pkgname-$version.tar.gz"
checksum="fed90e57113a6b6e50db03ee711358b04733bc2a50797e1b103a300b1f8a4b16"
wrksrc="helm-$version"
nopie=true
conflicts="helm"

_convert_arch() {
  case "$1" in
    aarch64*)
      echo "arm64"
      ;;
    armv6*)
      echo "arm"
      ;;
    armv7*)
      echo "arm"
      ;;
    i686*)
      echo "386"
      ;;
    x86_64*)
      echo "amd64"
      ;;
    ppc64le*)
      echo "ppc64le"
      ;;
  esac
}

export _go_target_arch="$(_convert_arch "$XBPS_TARGET_MACHINE")"
export _go_host_arch="$(_convert_arch "$XBPS_MACHINE")"

_go_ldflags+=" -buildid="
_go_ldflags+=" -X helm.sh/helm/v3/internal/version.version=v$version"
_go_ldflags+=" -X helm.sh/helm/v3/internal/version.metadata="
export _go_ldflags

export GOFLAGS="-trimpath"

do_extract() {
  mkdir -p golib/src/k8s.io/helm
  tar \
    -xvzf "$XBPS_SRCDISTDIR/$pkgname-$version/v$version.tar.gz" \
    -C golib/src/k8s.io/helm \
    --strip-components 1 \
    "helm-$version"
}

do_build() {
  cd golib/src/k8s.io/helm

  make \
    build-cross \
    TARGETS="linux/$_go_target_arch linux/$_go_host_arch" \
    APP="..." \
    LDFLAGS="$_go_ldflags"

  "_dist/linux-$_go_host_arch/helm" completion bash > completion.bash
  "_dist/linux-$_go_host_arch/helm" completion zsh > completion.zsh
}

do_install() {
  cd golib/src/k8s.io/helm

  # copy helm binary
  vbin "_dist/linux-$_go_target_arch/helm"

  # copy completion files
  vinstall completion.bash 644 usr/share/bash-completion/completions helm
  vinstall completion.zsh 644 "usr/share/$pkgname"
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:

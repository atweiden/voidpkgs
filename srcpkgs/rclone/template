maintainer="nox"
pkgname="rclone"
version=1.60.0
revision=1
short_desc="Rsync for cloud storage"
homepage="https://rclone.org/"
license="MIT"
changelog="https://rclone.org/changelog/"
distfiles="https://downloads.rclone.org/v$version/$pkgname-v$version.tar.gz"
checksum="1d7e79f1d90d5cd47d64478cc1b3cb0bcf3fa5ff3da30367825ce1fc9f209214"
wrksrc="$pkgname-v$version"
build_style="go"
go_import_path="github.com/rclone/rclone"
go_build_tags+=" netgo"
go_build_tags+=" noselfupdate"
go_ldflags+=" -buildid="
go_ldflags+=" -extldflags='-fuse-ld=bfd -static'"
go_ldflags+=" -X github.com/rclone/rclone/fs.Version=v$version"
# shell completion generation requires qemu (see: upstream)
nocross="yes"

export GOFLAGS="-trimpath"

pre_build() {
  if [[ -n "$CROSS_BUILD" ]] && [[ "$XBPS_TARGET_LIBC" == "musl" ]]; then
    # XXX: when cross building, the binary has a textrel, which segfaults
    # when launched on musl
    # FIXME: linkers for the musl toolchains should reject textrels
    # entirely
    export CGO_ENABLED=0
  fi
}

do_check() {
  local _tags

  rm cmd/serve/docker/docker_test.go
  rm cmd/mount/mount_test.go
  rm cmd/mount2/mount_test.go

  # could time out on i686 and it's deprecated
  # https://github.com/rclone/rclone/issues/5784#issuecomment-961520934
  rm backend/cache/cache_test.go

  # equivalent to quicktest target of Makefile
  _tags="$(${go_build_tags// /,} | sed 's/^,//')"
  RCLONE_CONFIG="/notfound" go test -tags "$_tags" ./...
}

post_install() {
  ln -sf rclone "$DESTDIR/usr/bin/mount.rclone"
  vlicense COPYING
  vman rclone.1
  for shell in bash \
               fish \
               zsh; do
    "$DESTDIR/usr/bin/rclone" genautocomplete "$shell" "completion.$shell"
    vcompletion "completion.$shell" "$shell"
  done
}

# vim: set filetype=sh foldmethod=marker foldlevel=0 nowrap:
